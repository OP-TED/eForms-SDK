<?xml version="1.0" encoding="UTF-8" ?>
<!--File generated from metadata database version 0.3.212 created on the 2022-03-14T10:58:11.-->
<pattern id="EFORMS-stage-4" xmlns="http://purl.oclc.org/dsdl/schematron">
	<rule context="/*/cac:BusinessParty/cac:PartyLegalEntity[cbc:CompanyID/@schemeName = 'EU'][$noticeSubType = 'X02']">
		<assert id="BR-OPP-00113-0002" role="ERROR" test="count(cbc:RegistrationDate) &gt; 0 or not(cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00113-0002</assert>
		<assert id="BR-OPP-00113-0054" role="ERROR" test="count(cbc:RegistrationDate) = 0 or (cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00113-0054</assert>
	</rule>
	<rule context="/*/cac:BusinessParty/cac:PartyLegalEntity[cbc:CompanyID/@schemeName = 'EU'][$noticeSubType = 'X01']">
		<assert id="BR-OPP-00113-0001" role="ERROR" test="count(cbc:RegistrationDate) &gt; 0 or not(cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00113-0001</assert>
		<assert id="BR-OPP-00113-0053" role="ERROR" test="count(cbc:RegistrationDate) = 0 or (cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00113-0053</assert>
	</rule>
	<rule context="/*/cac:BusinessParty/cac:PartyLegalEntity[cbc:CompanyID/@schemeName = 'EU']/cac:CorporateRegistrationScheme/cac:JurisdictionRegionAddress[$noticeSubType = 'X02']">
		<assert id="BR-OPP-00110-0002" role="ERROR" test="count(cbc:CityName) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00110-0002</assert>
		<assert id="BR-OPP-00110-0052" role="ERROR" test="count(cbc:CityName) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00110-0052</assert>
		<assert id="BR-OPP-00111-0002" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00111-0002</assert>
		<assert id="BR-OPP-00111-0052" role="ERROR" test="count(cbc:PostalZone) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00111-0052</assert>
		<assert id="BR-OPP-00112-0002" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00112-0002</assert>
		<assert id="BR-OPP-00112-0054" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00112-0054</assert>
	</rule>
	<rule context="/*/cac:BusinessParty/cac:PartyLegalEntity[cbc:CompanyID/@schemeName = 'EU']/cac:CorporateRegistrationScheme/cac:JurisdictionRegionAddress[$noticeSubType = 'X01']">
		<assert id="BR-OPP-00110-0001" role="ERROR" test="count(cbc:CityName) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00110-0001</assert>
		<assert id="BR-OPP-00110-0051" role="ERROR" test="count(cbc:CityName) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00110-0051</assert>
		<assert id="BR-OPP-00111-0001" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00111-0001</assert>
		<assert id="BR-OPP-00111-0051" role="ERROR" test="count(cbc:PostalZone) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00111-0051</assert>
		<assert id="BR-OPP-00112-0001" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00112-0001</assert>
		<assert id="BR-OPP-00112-0053" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (../../cbc:CompanyID[@schemeName = 'EU']/normalize-space(text())!='')">rule|message|BR-OPP-00112-0053</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '37']">
		<assert id="BR-BT-00010-0046" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0046</assert>
		<assert id="BR-BT-00010-0065" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0065</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '35']">
		<assert id="BR-BT-00010-0044" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0044</assert>
		<assert id="BR-BT-00010-0064" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0064</assert>
		<assert id="BR-BT-00610-0044" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0044</assert>
		<assert id="BR-BT-00610-0056" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0056</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '30']">
		<assert id="BR-BT-00010-0037" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0037</assert>
		<assert id="BR-BT-00010-0062" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0062</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '32']">
		<assert id="BR-BT-00010-0039" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0039</assert>
		<assert id="BR-BT-00010-0063" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0063</assert>
		<assert id="BR-BT-00610-0039" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0039</assert>
		<assert id="BR-BT-00610-0055" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0055</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '24']">
		<assert id="BR-BT-00010-0031" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0031</assert>
		<assert id="BR-BT-00010-0061" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0061</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '17']">
		<assert id="BR-BT-00010-0023" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0023</assert>
		<assert id="BR-BT-00010-0059" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0059</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '19']">
		<assert id="BR-BT-00010-0025" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0025</assert>
		<assert id="BR-BT-00010-0060" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0060</assert>
		<assert id="BR-BT-00610-0025" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0025</assert>
		<assert id="BR-BT-00610-0054" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0054</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '2']">
		<assert id="BR-BT-00010-0005" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0005</assert>
		<assert id="BR-BT-00010-0053" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0053</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '14']">
		<assert id="BR-BT-00010-0020" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0020</assert>
		<assert id="BR-BT-00010-0057" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0057</assert>
		<assert id="BR-BT-00610-0020" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0020</assert>
		<assert id="BR-BT-00610-0053" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='entity-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='cont-ent')">rule|message|BR-BT-00610-0053</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '11']">
		<assert id="BR-BT-00010-0016" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0016</assert>
		<assert id="BR-BT-00010-0056" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0056</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '5']">
		<assert id="BR-BT-00010-0008" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0008</assert>
		<assert id="BR-BT-00010-0054" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0054</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '8']">
		<assert id="BR-BT-00010-0013" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0013</assert>
		<assert id="BR-BT-00010-0055" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0055</assert>
	</rule>
	<rule context="/*/cac:ContractingParty[$noticeSubType = '15']">
		<assert id="BR-BT-00010-0021" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) &gt; 0 or not(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0021</assert>
		<assert id="BR-BT-00010-0058" role="ERROR" test="count(cac:ContractingActivity/cbc:ActivityTypeCode[@listName='authority-activity']) = 0 or (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text())='not-cont-ent')">rule|message|BR-BT-00010-0058</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '36']">
		<assert id="BR-BT-00026-0345" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0345</assert>
		<assert id="BR-BT-00026-0395" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0395</assert>
		<assert id="BR-BT-00531-0045" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '37']">
		<assert id="BR-BT-00026-0346" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0346</assert>
		<assert id="BR-BT-00026-0396" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0396</assert>
		<assert id="BR-BT-00531-0046" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '38']">
		<assert id="BR-BT-00026-0347" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0347</assert>
		<assert id="BR-BT-00026-0397" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0397</assert>
		<assert id="BR-BT-00531-0047" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0047</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '39']">
		<assert id="BR-BT-00026-0348" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0348</assert>
		<assert id="BR-BT-00026-0398" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0398</assert>
		<assert id="BR-BT-00531-0048" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0048</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '40']">
		<assert id="BR-BT-00026-0349" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0349</assert>
		<assert id="BR-BT-00026-0399" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0399</assert>
		<assert id="BR-BT-00531-0049" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0049</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '33']">
		<assert id="BR-BT-00026-0342" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0342</assert>
		<assert id="BR-BT-00026-0392" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0392</assert>
		<assert id="BR-BT-00531-0042" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0042</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '34']">
		<assert id="BR-BT-00026-0343" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0343</assert>
		<assert id="BR-BT-00026-0393" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0393</assert>
		<assert id="BR-BT-00531-0043" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '35']">
		<assert id="BR-BT-00026-0344" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0344</assert>
		<assert id="BR-BT-00026-0394" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0394</assert>
		<assert id="BR-BT-00531-0044" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '29']">
		<assert id="BR-BT-00026-0336" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0336</assert>
		<assert id="BR-BT-00026-0386" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0386</assert>
		<assert id="BR-BT-00531-0036" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0036</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '30']">
		<assert id="BR-BT-00026-0337" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0337</assert>
		<assert id="BR-BT-00026-0387" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0387</assert>
		<assert id="BR-BT-00531-0037" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0037</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '32']">
		<assert id="BR-BT-00026-0339" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0339</assert>
		<assert id="BR-BT-00026-0389" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0389</assert>
		<assert id="BR-BT-00531-0039" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0039</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '31']">
		<assert id="BR-BT-00026-0338" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0338</assert>
		<assert id="BR-BT-00026-0388" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0388</assert>
		<assert id="BR-BT-00531-0038" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0038</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '23']">
		<assert id="BR-BT-00026-0330" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0330</assert>
		<assert id="BR-BT-00026-0380" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0380</assert>
		<assert id="BR-BT-00531-0030" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '24']">
		<assert id="BR-BT-00026-0331" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0331</assert>
		<assert id="BR-BT-00026-0381" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0381</assert>
		<assert id="BR-BT-00531-0031" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '20']">
		<assert id="BR-BT-00026-0327" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0327</assert>
		<assert id="BR-BT-00026-0377" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0377</assert>
		<assert id="BR-BT-00531-0027" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '21']">
		<assert id="BR-BT-00026-0328" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0328</assert>
		<assert id="BR-BT-00026-0378" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0378</assert>
		<assert id="BR-BT-00531-0028" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '16']">
		<assert id="BR-BT-00026-0322" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0322</assert>
		<assert id="BR-BT-00026-0372" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0372</assert>
		<assert id="BR-BT-00531-0022" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '17']">
		<assert id="BR-BT-00026-0323" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0323</assert>
		<assert id="BR-BT-00026-0373" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0373</assert>
		<assert id="BR-BT-00531-0023" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '19']">
		<assert id="BR-BT-00026-0325" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0325</assert>
		<assert id="BR-BT-00026-0375" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0375</assert>
		<assert id="BR-BT-00531-0025" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '18']">
		<assert id="BR-BT-00026-0324" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0324</assert>
		<assert id="BR-BT-00026-0374" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0374</assert>
		<assert id="BR-BT-00531-0024" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '1']">
		<assert id="BR-BT-00026-0304" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0304</assert>
		<assert id="BR-BT-00026-0354" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0354</assert>
		<assert id="BR-BT-00531-0004" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0004</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '2']">
		<assert id="BR-BT-00026-0305" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0305</assert>
		<assert id="BR-BT-00026-0355" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0355</assert>
		<assert id="BR-BT-00531-0005" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0005</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '3']">
		<assert id="BR-BT-00026-0306" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0306</assert>
		<assert id="BR-BT-00026-0356" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0356</assert>
		<assert id="BR-BT-00531-0006" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0006</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '12']">
		<assert id="BR-BT-00026-0318" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0318</assert>
		<assert id="BR-BT-00026-0368" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0368</assert>
		<assert id="BR-BT-00531-0018" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '13']">
		<assert id="BR-BT-00026-0319" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0319</assert>
		<assert id="BR-BT-00026-0369" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0369</assert>
		<assert id="BR-BT-00531-0019" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '14']">
		<assert id="BR-BT-00026-0320" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0320</assert>
		<assert id="BR-BT-00026-0370" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0370</assert>
		<assert id="BR-BT-00531-0020" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '10']">
		<assert id="BR-BT-00026-0315" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0315</assert>
		<assert id="BR-BT-00026-0365" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0365</assert>
		<assert id="BR-BT-00531-0015" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '11']">
		<assert id="BR-BT-00026-0316" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0316</assert>
		<assert id="BR-BT-00026-0366" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0366</assert>
		<assert id="BR-BT-00531-0016" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '4']">
		<assert id="BR-BT-00026-0307" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0307</assert>
		<assert id="BR-BT-00026-0357" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0357</assert>
		<assert id="BR-BT-00531-0007" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0007</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '5']">
		<assert id="BR-BT-00026-0308" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0308</assert>
		<assert id="BR-BT-00026-0358" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0358</assert>
		<assert id="BR-BT-00531-0008" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0008</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '6']">
		<assert id="BR-BT-00026-0309" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0309</assert>
		<assert id="BR-BT-00026-0359" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0359</assert>
		<assert id="BR-BT-00531-0009" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0009</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '7']">
		<assert id="BR-BT-00026-0312" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0312</assert>
		<assert id="BR-BT-00026-0362" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0362</assert>
		<assert id="BR-BT-00531-0012" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '8']">
		<assert id="BR-BT-00026-0313" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0313</assert>
		<assert id="BR-BT-00026-0363" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0363</assert>
		<assert id="BR-BT-00531-0013" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '9']">
		<assert id="BR-BT-00026-0314" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0314</assert>
		<assert id="BR-BT-00026-0364" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0364</assert>
		<assert id="BR-BT-00531-0014" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '15']">
		<assert id="BR-BT-00026-0321" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0321</assert>
		<assert id="BR-BT-00026-0371" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0371</assert>
		<assert id="BR-BT-00531-0021" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '22']">
		<assert id="BR-BT-00026-0329" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0329</assert>
		<assert id="BR-BT-00026-0379" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0379</assert>
		<assert id="BR-BT-00531-0029" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '25']">
		<assert id="BR-BT-00026-0332" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0332</assert>
		<assert id="BR-BT-00026-0382" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0382</assert>
		<assert id="BR-BT-00531-0032" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '26']">
		<assert id="BR-BT-00026-0333" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0333</assert>
		<assert id="BR-BT-00026-0383" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0383</assert>
		<assert id="BR-BT-00531-0033" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '28']">
		<assert id="BR-BT-00026-0335" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0335</assert>
		<assert id="BR-BT-00026-0385" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0385</assert>
		<assert id="BR-BT-00531-0035" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = '27']">
		<assert id="BR-BT-00026-0334" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0334</assert>
		<assert id="BR-BT-00026-0384" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0384</assert>
		<assert id="BR-BT-00531-0034" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = 'T01']">
		<assert id="BR-BT-00026-0311" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0311</assert>
		<assert id="BR-BT-00026-0361" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0361</assert>
		<assert id="BR-BT-00531-0011" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0011</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = 'T02']">
		<assert id="BR-BT-00026-0341" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0341</assert>
		<assert id="BR-BT-00026-0391" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0391</assert>
		<assert id="BR-BT-00531-0041" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0041</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00026-0317" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) &gt; 0 or not(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0317</assert>
		<assert id="BR-BT-00026-0367" role="ERROR" test="count(cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/@listName) = 0 or (cac:AdditionalCommodityClassification/cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0367</assert>
		<assert id="BR-BT-00531-0017" role="ERROR" test="count(cac:ProcurementAdditionalType/cbc:ProcurementTypeCode[not(@listName='transport-service')]) = 0 or (cbc:ProcurementTypeCode/normalize-space(text())!='')">rule|message|BR-BT-00531-0017</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '36']">
		<assert id="BR-BT-00026-0045" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0045</assert>
		<assert id="BR-BT-00026-0095" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '37']">
		<assert id="BR-BT-00026-0046" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0046</assert>
		<assert id="BR-BT-00026-0096" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '38']">
		<assert id="BR-BT-00026-0047" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0047</assert>
		<assert id="BR-BT-00026-0097" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '39']">
		<assert id="BR-BT-00026-0048" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0048</assert>
		<assert id="BR-BT-00026-0098" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '40']">
		<assert id="BR-BT-00026-0049" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0049</assert>
		<assert id="BR-BT-00026-0099" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0099</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '33']">
		<assert id="BR-BT-00026-0042" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0042</assert>
		<assert id="BR-BT-00026-0092" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0092</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '34']">
		<assert id="BR-BT-00026-0043" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0043</assert>
		<assert id="BR-BT-00026-0093" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0093</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '35']">
		<assert id="BR-BT-00026-0044" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0044</assert>
		<assert id="BR-BT-00026-0094" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '29']">
		<assert id="BR-BT-00026-0036" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0036</assert>
		<assert id="BR-BT-00026-0086" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '30']">
		<assert id="BR-BT-00026-0037" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0037</assert>
		<assert id="BR-BT-00026-0087" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '32']">
		<assert id="BR-BT-00026-0039" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0039</assert>
		<assert id="BR-BT-00026-0089" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '31']">
		<assert id="BR-BT-00026-0038" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0038</assert>
		<assert id="BR-BT-00026-0088" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '23']">
		<assert id="BR-BT-00026-0030" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0030</assert>
		<assert id="BR-BT-00026-0080" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '24']">
		<assert id="BR-BT-00026-0031" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0031</assert>
		<assert id="BR-BT-00026-0081" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '20']">
		<assert id="BR-BT-00026-0027" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0027</assert>
		<assert id="BR-BT-00026-0077" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0077</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '21']">
		<assert id="BR-BT-00026-0028" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0028</assert>
		<assert id="BR-BT-00026-0078" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '16']">
		<assert id="BR-BT-00026-0022" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0022</assert>
		<assert id="BR-BT-00026-0072" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '17']">
		<assert id="BR-BT-00026-0023" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0023</assert>
		<assert id="BR-BT-00026-0073" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '19']">
		<assert id="BR-BT-00026-0025" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0025</assert>
		<assert id="BR-BT-00026-0075" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '18']">
		<assert id="BR-BT-00026-0024" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0024</assert>
		<assert id="BR-BT-00026-0074" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '1']">
		<assert id="BR-BT-00026-0004" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0004</assert>
		<assert id="BR-BT-00026-0054" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0054</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '2']">
		<assert id="BR-BT-00026-0005" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0005</assert>
		<assert id="BR-BT-00026-0055" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0055</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '3']">
		<assert id="BR-BT-00026-0006" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0006</assert>
		<assert id="BR-BT-00026-0056" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0056</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '12']">
		<assert id="BR-BT-00026-0018" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0018</assert>
		<assert id="BR-BT-00026-0068" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '13']">
		<assert id="BR-BT-00026-0019" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0019</assert>
		<assert id="BR-BT-00026-0069" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '14']">
		<assert id="BR-BT-00026-0020" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0020</assert>
		<assert id="BR-BT-00026-0070" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '10']">
		<assert id="BR-BT-00026-0015" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0015</assert>
		<assert id="BR-BT-00026-0065" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '11']">
		<assert id="BR-BT-00026-0016" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0016</assert>
		<assert id="BR-BT-00026-0066" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '4']">
		<assert id="BR-BT-00026-0007" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0007</assert>
		<assert id="BR-BT-00026-0057" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0057</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '5']">
		<assert id="BR-BT-00026-0008" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0008</assert>
		<assert id="BR-BT-00026-0058" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0058</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '6']">
		<assert id="BR-BT-00026-0009" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0009</assert>
		<assert id="BR-BT-00026-0059" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0059</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '7']">
		<assert id="BR-BT-00026-0012" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0012</assert>
		<assert id="BR-BT-00026-0062" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0062</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '8']">
		<assert id="BR-BT-00026-0013" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0013</assert>
		<assert id="BR-BT-00026-0063" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '9']">
		<assert id="BR-BT-00026-0014" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0014</assert>
		<assert id="BR-BT-00026-0064" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '15']">
		<assert id="BR-BT-00026-0021" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0021</assert>
		<assert id="BR-BT-00026-0071" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '22']">
		<assert id="BR-BT-00026-0029" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0029</assert>
		<assert id="BR-BT-00026-0079" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '25']">
		<assert id="BR-BT-00026-0032" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0032</assert>
		<assert id="BR-BT-00026-0082" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '26']">
		<assert id="BR-BT-00026-0033" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0033</assert>
		<assert id="BR-BT-00026-0083" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '28']">
		<assert id="BR-BT-00026-0035" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0035</assert>
		<assert id="BR-BT-00026-0085" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '27']">
		<assert id="BR-BT-00026-0034" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0034</assert>
		<assert id="BR-BT-00026-0084" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'T01']">
		<assert id="BR-BT-00026-0011" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0011</assert>
		<assert id="BR-BT-00026-0061" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0061</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'T02']">
		<assert id="BR-BT-00026-0041" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0041</assert>
		<assert id="BR-BT-00026-0091" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0091</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00026-0017" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0017</assert>
		<assert id="BR-BT-00026-0067" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '36']">
		<assert id="BR-BT-00728-0045" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '37']">
		<assert id="BR-BT-00728-0046" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '38']">
		<assert id="BR-BT-00728-0047" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0047</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '39']">
		<assert id="BR-BT-00728-0048" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0048</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '40']">
		<assert id="BR-BT-00728-0049" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0049</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '33']">
		<assert id="BR-BT-00728-0042" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0042</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '34']">
		<assert id="BR-BT-00728-0043" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '35']">
		<assert id="BR-BT-00728-0044" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '29']">
		<assert id="BR-BT-00728-0036" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0036</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '30']">
		<assert id="BR-BT-00728-0037" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0037</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '32']">
		<assert id="BR-BT-00728-0039" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0039</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '31']">
		<assert id="BR-BT-00728-0038" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0038</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '23']">
		<assert id="BR-BT-00728-0030" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '24']">
		<assert id="BR-BT-00728-0031" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '20']">
		<assert id="BR-BT-00728-0027" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '21']">
		<assert id="BR-BT-00728-0028" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '16']">
		<assert id="BR-BT-00728-0022" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '17']">
		<assert id="BR-BT-00728-0023" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '19']">
		<assert id="BR-BT-00728-0025" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '18']">
		<assert id="BR-BT-00728-0024" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '1']">
		<assert id="BR-BT-00728-0004" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0004</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '2']">
		<assert id="BR-BT-00728-0005" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0005</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '3']">
		<assert id="BR-BT-00728-0006" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0006</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '12']">
		<assert id="BR-BT-00728-0018" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '13']">
		<assert id="BR-BT-00728-0019" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '14']">
		<assert id="BR-BT-00728-0020" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '10']">
		<assert id="BR-BT-00728-0015" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '11']">
		<assert id="BR-BT-00728-0016" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '4']">
		<assert id="BR-BT-00728-0007" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0007</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '5']">
		<assert id="BR-BT-00728-0008" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0008</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '6']">
		<assert id="BR-BT-00728-0009" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0009</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '7']">
		<assert id="BR-BT-00728-0012" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '8']">
		<assert id="BR-BT-00728-0013" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '9']">
		<assert id="BR-BT-00728-0014" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '15']">
		<assert id="BR-BT-00728-0021" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '22']">
		<assert id="BR-BT-00728-0029" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '25']">
		<assert id="BR-BT-00728-0032" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '26']">
		<assert id="BR-BT-00728-0033" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '28']">
		<assert id="BR-BT-00728-0035" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '27']">
		<assert id="BR-BT-00728-0034" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00728-0017" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0017</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '36']">
		<assert id="BR-BT-00727-0222" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0222</assert>
		<assert id="BR-BT-05071-0045" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0045</assert>
		<assert id="BR-BT-05071-0222" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0222</assert>
		<assert id="BR-BT-05101-0045" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0045</assert>
		<assert id="BR-BT-05101-0096" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0096</assert>
		<assert id="BR-BT-05101-0147" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0147</assert>
		<assert id="BR-BT-05121-0045" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0045</assert>
		<assert id="BR-BT-05121-0201" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0201</assert>
		<assert id="BR-BT-05131-0045" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0045</assert>
		<assert id="BR-BT-05141-0045" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0045</assert>
		<assert id="BR-BT-05141-0222" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0222</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '37']">
		<assert id="BR-BT-00727-0223" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0223</assert>
		<assert id="BR-BT-05071-0046" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0046</assert>
		<assert id="BR-BT-05071-0223" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0223</assert>
		<assert id="BR-BT-05101-0046" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0046</assert>
		<assert id="BR-BT-05101-0097" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0097</assert>
		<assert id="BR-BT-05101-0148" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0148</assert>
		<assert id="BR-BT-05121-0046" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0046</assert>
		<assert id="BR-BT-05121-0202" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0202</assert>
		<assert id="BR-BT-05131-0046" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0046</assert>
		<assert id="BR-BT-05141-0046" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0046</assert>
		<assert id="BR-BT-05141-0223" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0223</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '38']">
		<assert id="BR-BT-05071-0047" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0047</assert>
		<assert id="BR-BT-05101-0047" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0047</assert>
		<assert id="BR-BT-05101-0098" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0098</assert>
		<assert id="BR-BT-05101-0149" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0149</assert>
		<assert id="BR-BT-05121-0047" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0047</assert>
		<assert id="BR-BT-05121-0203" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0203</assert>
		<assert id="BR-BT-05131-0047" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0047</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '39']">
		<assert id="BR-BT-05071-0048" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0048</assert>
		<assert id="BR-BT-05101-0048" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0048</assert>
		<assert id="BR-BT-05101-0099" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0099</assert>
		<assert id="BR-BT-05101-0150" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0150</assert>
		<assert id="BR-BT-05121-0048" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0048</assert>
		<assert id="BR-BT-05121-0204" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0204</assert>
		<assert id="BR-BT-05131-0048" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0048</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '40']">
		<assert id="BR-BT-05071-0049" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0049</assert>
		<assert id="BR-BT-05101-0049" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0049</assert>
		<assert id="BR-BT-05101-0100" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0100</assert>
		<assert id="BR-BT-05101-0151" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0151</assert>
		<assert id="BR-BT-05121-0049" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0049</assert>
		<assert id="BR-BT-05121-0205" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0205</assert>
		<assert id="BR-BT-05131-0049" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0049</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '33']">
		<assert id="BR-BT-00727-0219" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0219</assert>
		<assert id="BR-BT-05071-0042" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0042</assert>
		<assert id="BR-BT-05071-0219" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0219</assert>
		<assert id="BR-BT-05101-0042" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0042</assert>
		<assert id="BR-BT-05101-0093" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0093</assert>
		<assert id="BR-BT-05101-0144" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0144</assert>
		<assert id="BR-BT-05121-0042" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0042</assert>
		<assert id="BR-BT-05121-0198" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0198</assert>
		<assert id="BR-BT-05131-0042" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0042</assert>
		<assert id="BR-BT-05141-0042" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0042</assert>
		<assert id="BR-BT-05141-0219" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0219</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '34']">
		<assert id="BR-BT-00727-0220" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0220</assert>
		<assert id="BR-BT-05071-0043" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0043</assert>
		<assert id="BR-BT-05071-0220" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0220</assert>
		<assert id="BR-BT-05101-0043" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0043</assert>
		<assert id="BR-BT-05101-0094" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0094</assert>
		<assert id="BR-BT-05101-0145" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0145</assert>
		<assert id="BR-BT-05121-0043" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0043</assert>
		<assert id="BR-BT-05121-0199" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0199</assert>
		<assert id="BR-BT-05131-0043" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0043</assert>
		<assert id="BR-BT-05141-0043" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0043</assert>
		<assert id="BR-BT-05141-0220" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0220</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '35']">
		<assert id="BR-BT-00727-0221" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0221</assert>
		<assert id="BR-BT-05071-0044" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0044</assert>
		<assert id="BR-BT-05071-0221" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0221</assert>
		<assert id="BR-BT-05101-0044" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0044</assert>
		<assert id="BR-BT-05101-0095" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0095</assert>
		<assert id="BR-BT-05101-0146" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0146</assert>
		<assert id="BR-BT-05121-0044" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0044</assert>
		<assert id="BR-BT-05121-0200" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0200</assert>
		<assert id="BR-BT-05131-0044" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0044</assert>
		<assert id="BR-BT-05141-0044" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0044</assert>
		<assert id="BR-BT-05141-0221" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0221</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '29']">
		<assert id="BR-BT-00727-0215" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0215</assert>
		<assert id="BR-BT-05071-0036" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0036</assert>
		<assert id="BR-BT-05071-0215" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0215</assert>
		<assert id="BR-BT-05101-0036" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0036</assert>
		<assert id="BR-BT-05101-0087" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0087</assert>
		<assert id="BR-BT-05101-0138" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0138</assert>
		<assert id="BR-BT-05121-0036" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0036</assert>
		<assert id="BR-BT-05121-0192" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0192</assert>
		<assert id="BR-BT-05131-0036" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0036</assert>
		<assert id="BR-BT-05141-0036" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0036</assert>
		<assert id="BR-BT-05141-0215" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0215</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '30']">
		<assert id="BR-BT-00727-0216" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0216</assert>
		<assert id="BR-BT-05071-0037" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0037</assert>
		<assert id="BR-BT-05071-0216" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0216</assert>
		<assert id="BR-BT-05101-0037" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0037</assert>
		<assert id="BR-BT-05101-0088" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0088</assert>
		<assert id="BR-BT-05101-0139" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0139</assert>
		<assert id="BR-BT-05121-0037" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0037</assert>
		<assert id="BR-BT-05121-0193" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0193</assert>
		<assert id="BR-BT-05131-0037" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0037</assert>
		<assert id="BR-BT-05141-0037" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0037</assert>
		<assert id="BR-BT-05141-0216" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0216</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '32']">
		<assert id="BR-BT-00727-0218" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0218</assert>
		<assert id="BR-BT-05071-0039" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0039</assert>
		<assert id="BR-BT-05071-0218" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0218</assert>
		<assert id="BR-BT-05101-0039" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0039</assert>
		<assert id="BR-BT-05101-0090" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0090</assert>
		<assert id="BR-BT-05101-0141" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0141</assert>
		<assert id="BR-BT-05121-0039" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0039</assert>
		<assert id="BR-BT-05121-0195" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0195</assert>
		<assert id="BR-BT-05131-0039" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0039</assert>
		<assert id="BR-BT-05141-0039" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0039</assert>
		<assert id="BR-BT-05141-0218" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0218</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '31']">
		<assert id="BR-BT-00727-0217" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0217</assert>
		<assert id="BR-BT-05071-0038" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0038</assert>
		<assert id="BR-BT-05071-0217" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0217</assert>
		<assert id="BR-BT-05101-0038" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0038</assert>
		<assert id="BR-BT-05101-0089" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0089</assert>
		<assert id="BR-BT-05101-0140" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0140</assert>
		<assert id="BR-BT-05121-0038" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0038</assert>
		<assert id="BR-BT-05121-0194" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0194</assert>
		<assert id="BR-BT-05131-0038" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0038</assert>
		<assert id="BR-BT-05141-0038" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0038</assert>
		<assert id="BR-BT-05141-0217" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0217</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '23']">
		<assert id="BR-BT-00727-0213" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0213</assert>
		<assert id="BR-BT-05071-0030" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0030</assert>
		<assert id="BR-BT-05071-0213" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0213</assert>
		<assert id="BR-BT-05101-0030" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0030</assert>
		<assert id="BR-BT-05101-0081" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0081</assert>
		<assert id="BR-BT-05101-0132" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0132</assert>
		<assert id="BR-BT-05121-0030" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0030</assert>
		<assert id="BR-BT-05121-0186" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0186</assert>
		<assert id="BR-BT-05131-0030" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0030</assert>
		<assert id="BR-BT-05141-0030" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0030</assert>
		<assert id="BR-BT-05141-0213" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0213</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '24']">
		<assert id="BR-BT-00727-0214" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0214</assert>
		<assert id="BR-BT-05071-0031" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0031</assert>
		<assert id="BR-BT-05071-0214" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0214</assert>
		<assert id="BR-BT-05101-0031" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0031</assert>
		<assert id="BR-BT-05101-0082" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0082</assert>
		<assert id="BR-BT-05101-0133" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0133</assert>
		<assert id="BR-BT-05121-0031" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0031</assert>
		<assert id="BR-BT-05121-0187" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0187</assert>
		<assert id="BR-BT-05131-0031" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0031</assert>
		<assert id="BR-BT-05141-0031" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0031</assert>
		<assert id="BR-BT-05141-0214" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0214</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '20']">
		<assert id="BR-BT-00727-0210" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0210</assert>
		<assert id="BR-BT-05071-0027" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0027</assert>
		<assert id="BR-BT-05071-0210" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0210</assert>
		<assert id="BR-BT-05101-0027" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0027</assert>
		<assert id="BR-BT-05101-0078" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0078</assert>
		<assert id="BR-BT-05101-0129" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0129</assert>
		<assert id="BR-BT-05121-0027" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0027</assert>
		<assert id="BR-BT-05121-0183" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0183</assert>
		<assert id="BR-BT-05131-0027" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0027</assert>
		<assert id="BR-BT-05141-0027" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0027</assert>
		<assert id="BR-BT-05141-0210" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0210</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '21']">
		<assert id="BR-BT-00727-0211" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0211</assert>
		<assert id="BR-BT-05071-0028" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0028</assert>
		<assert id="BR-BT-05071-0211" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0211</assert>
		<assert id="BR-BT-05101-0028" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0028</assert>
		<assert id="BR-BT-05101-0079" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0079</assert>
		<assert id="BR-BT-05101-0130" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0130</assert>
		<assert id="BR-BT-05121-0028" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0028</assert>
		<assert id="BR-BT-05121-0184" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0184</assert>
		<assert id="BR-BT-05131-0028" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0028</assert>
		<assert id="BR-BT-05141-0028" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0028</assert>
		<assert id="BR-BT-05141-0211" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0211</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '16']">
		<assert id="BR-BT-00727-0206" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0206</assert>
		<assert id="BR-BT-05071-0022" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0022</assert>
		<assert id="BR-BT-05071-0206" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0206</assert>
		<assert id="BR-BT-05101-0022" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0022</assert>
		<assert id="BR-BT-05101-0073" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0073</assert>
		<assert id="BR-BT-05101-0124" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0124</assert>
		<assert id="BR-BT-05121-0022" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0022</assert>
		<assert id="BR-BT-05121-0178" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0178</assert>
		<assert id="BR-BT-05131-0022" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0022</assert>
		<assert id="BR-BT-05141-0022" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0022</assert>
		<assert id="BR-BT-05141-0206" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0206</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '17']">
		<assert id="BR-BT-00727-0207" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0207</assert>
		<assert id="BR-BT-05071-0023" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0023</assert>
		<assert id="BR-BT-05071-0207" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0207</assert>
		<assert id="BR-BT-05101-0023" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0023</assert>
		<assert id="BR-BT-05101-0074" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0074</assert>
		<assert id="BR-BT-05101-0125" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0125</assert>
		<assert id="BR-BT-05121-0023" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0023</assert>
		<assert id="BR-BT-05121-0179" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0179</assert>
		<assert id="BR-BT-05131-0023" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0023</assert>
		<assert id="BR-BT-05141-0023" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0023</assert>
		<assert id="BR-BT-05141-0207" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0207</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '19']">
		<assert id="BR-BT-00727-0209" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0209</assert>
		<assert id="BR-BT-05071-0025" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0025</assert>
		<assert id="BR-BT-05071-0209" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0209</assert>
		<assert id="BR-BT-05101-0025" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0025</assert>
		<assert id="BR-BT-05101-0076" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0076</assert>
		<assert id="BR-BT-05101-0127" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0127</assert>
		<assert id="BR-BT-05121-0025" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0025</assert>
		<assert id="BR-BT-05121-0181" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0181</assert>
		<assert id="BR-BT-05131-0025" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0025</assert>
		<assert id="BR-BT-05141-0025" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0025</assert>
		<assert id="BR-BT-05141-0209" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0209</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '18']">
		<assert id="BR-BT-00727-0208" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0208</assert>
		<assert id="BR-BT-05071-0024" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0024</assert>
		<assert id="BR-BT-05071-0208" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0208</assert>
		<assert id="BR-BT-05101-0024" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0024</assert>
		<assert id="BR-BT-05101-0075" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0075</assert>
		<assert id="BR-BT-05101-0126" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0126</assert>
		<assert id="BR-BT-05121-0024" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0024</assert>
		<assert id="BR-BT-05121-0180" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0180</assert>
		<assert id="BR-BT-05131-0024" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0024</assert>
		<assert id="BR-BT-05141-0024" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0024</assert>
		<assert id="BR-BT-05141-0208" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0208</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '1']">
		<assert id="BR-BT-00727-0190" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0190</assert>
		<assert id="BR-BT-05071-0004" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0004</assert>
		<assert id="BR-BT-05071-0190" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0190</assert>
		<assert id="BR-BT-05101-0004" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0004</assert>
		<assert id="BR-BT-05101-0055" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0055</assert>
		<assert id="BR-BT-05101-0106" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0106</assert>
		<assert id="BR-BT-05121-0004" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0004</assert>
		<assert id="BR-BT-05121-0160" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0160</assert>
		<assert id="BR-BT-05131-0004" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0004</assert>
		<assert id="BR-BT-05141-0004" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0004</assert>
		<assert id="BR-BT-05141-0190" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0190</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '2']">
		<assert id="BR-BT-00727-0191" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0191</assert>
		<assert id="BR-BT-05071-0005" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0005</assert>
		<assert id="BR-BT-05071-0191" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0191</assert>
		<assert id="BR-BT-05101-0005" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0005</assert>
		<assert id="BR-BT-05101-0056" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0056</assert>
		<assert id="BR-BT-05101-0107" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0107</assert>
		<assert id="BR-BT-05121-0005" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0005</assert>
		<assert id="BR-BT-05121-0161" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0161</assert>
		<assert id="BR-BT-05131-0005" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0005</assert>
		<assert id="BR-BT-05141-0005" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0005</assert>
		<assert id="BR-BT-05141-0191" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0191</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '3']">
		<assert id="BR-BT-00727-0192" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0192</assert>
		<assert id="BR-BT-05071-0006" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0006</assert>
		<assert id="BR-BT-05071-0192" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0192</assert>
		<assert id="BR-BT-05101-0006" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0006</assert>
		<assert id="BR-BT-05101-0057" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0057</assert>
		<assert id="BR-BT-05101-0108" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0108</assert>
		<assert id="BR-BT-05121-0006" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0006</assert>
		<assert id="BR-BT-05121-0162" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0162</assert>
		<assert id="BR-BT-05131-0006" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0006</assert>
		<assert id="BR-BT-05141-0006" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0006</assert>
		<assert id="BR-BT-05141-0192" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0192</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '12']">
		<assert id="BR-BT-00727-0202" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0202</assert>
		<assert id="BR-BT-05071-0018" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0018</assert>
		<assert id="BR-BT-05071-0202" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0202</assert>
		<assert id="BR-BT-05101-0018" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0018</assert>
		<assert id="BR-BT-05101-0069" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0069</assert>
		<assert id="BR-BT-05101-0120" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0120</assert>
		<assert id="BR-BT-05121-0018" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0018</assert>
		<assert id="BR-BT-05121-0174" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0174</assert>
		<assert id="BR-BT-05131-0018" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0018</assert>
		<assert id="BR-BT-05141-0018" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0018</assert>
		<assert id="BR-BT-05141-0202" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0202</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '13']">
		<assert id="BR-BT-00727-0203" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0203</assert>
		<assert id="BR-BT-05071-0019" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0019</assert>
		<assert id="BR-BT-05071-0203" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0203</assert>
		<assert id="BR-BT-05101-0019" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0019</assert>
		<assert id="BR-BT-05101-0070" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0070</assert>
		<assert id="BR-BT-05101-0121" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0121</assert>
		<assert id="BR-BT-05121-0019" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0019</assert>
		<assert id="BR-BT-05121-0175" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0175</assert>
		<assert id="BR-BT-05131-0019" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0019</assert>
		<assert id="BR-BT-05141-0019" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0019</assert>
		<assert id="BR-BT-05141-0203" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0203</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '14']">
		<assert id="BR-BT-00727-0204" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0204</assert>
		<assert id="BR-BT-05071-0020" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0020</assert>
		<assert id="BR-BT-05071-0204" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0204</assert>
		<assert id="BR-BT-05101-0020" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0020</assert>
		<assert id="BR-BT-05101-0071" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0071</assert>
		<assert id="BR-BT-05101-0122" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0122</assert>
		<assert id="BR-BT-05121-0020" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0020</assert>
		<assert id="BR-BT-05121-0176" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0176</assert>
		<assert id="BR-BT-05131-0020" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0020</assert>
		<assert id="BR-BT-05141-0020" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0020</assert>
		<assert id="BR-BT-05141-0204" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0204</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '10']">
		<assert id="BR-BT-00727-0199" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0199</assert>
		<assert id="BR-BT-05071-0015" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0015</assert>
		<assert id="BR-BT-05071-0199" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0199</assert>
		<assert id="BR-BT-05101-0015" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0015</assert>
		<assert id="BR-BT-05101-0066" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0066</assert>
		<assert id="BR-BT-05101-0117" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0117</assert>
		<assert id="BR-BT-05121-0015" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0015</assert>
		<assert id="BR-BT-05121-0171" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0171</assert>
		<assert id="BR-BT-05131-0015" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0015</assert>
		<assert id="BR-BT-05141-0015" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0015</assert>
		<assert id="BR-BT-05141-0199" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0199</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '11']">
		<assert id="BR-BT-00727-0200" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0200</assert>
		<assert id="BR-BT-05071-0016" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0016</assert>
		<assert id="BR-BT-05071-0200" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0200</assert>
		<assert id="BR-BT-05101-0016" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0016</assert>
		<assert id="BR-BT-05101-0067" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0067</assert>
		<assert id="BR-BT-05101-0118" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0118</assert>
		<assert id="BR-BT-05121-0016" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0016</assert>
		<assert id="BR-BT-05121-0172" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0172</assert>
		<assert id="BR-BT-05131-0016" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0016</assert>
		<assert id="BR-BT-05141-0016" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0016</assert>
		<assert id="BR-BT-05141-0200" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0200</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '4']">
		<assert id="BR-BT-00727-0193" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0193</assert>
		<assert id="BR-BT-05071-0007" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0007</assert>
		<assert id="BR-BT-05071-0193" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0193</assert>
		<assert id="BR-BT-05101-0007" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0007</assert>
		<assert id="BR-BT-05101-0058" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0058</assert>
		<assert id="BR-BT-05101-0109" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0109</assert>
		<assert id="BR-BT-05121-0007" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0007</assert>
		<assert id="BR-BT-05121-0163" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0163</assert>
		<assert id="BR-BT-05131-0007" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0007</assert>
		<assert id="BR-BT-05141-0007" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0007</assert>
		<assert id="BR-BT-05141-0193" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0193</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '5']">
		<assert id="BR-BT-00727-0194" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0194</assert>
		<assert id="BR-BT-05071-0008" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0008</assert>
		<assert id="BR-BT-05071-0194" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0194</assert>
		<assert id="BR-BT-05101-0008" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0008</assert>
		<assert id="BR-BT-05101-0059" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0059</assert>
		<assert id="BR-BT-05101-0110" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0110</assert>
		<assert id="BR-BT-05121-0008" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0008</assert>
		<assert id="BR-BT-05121-0164" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0164</assert>
		<assert id="BR-BT-05131-0008" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0008</assert>
		<assert id="BR-BT-05141-0008" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0008</assert>
		<assert id="BR-BT-05141-0194" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0194</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '6']">
		<assert id="BR-BT-00727-0195" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0195</assert>
		<assert id="BR-BT-05071-0009" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0009</assert>
		<assert id="BR-BT-05071-0195" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0195</assert>
		<assert id="BR-BT-05101-0009" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0009</assert>
		<assert id="BR-BT-05101-0060" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0060</assert>
		<assert id="BR-BT-05101-0111" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0111</assert>
		<assert id="BR-BT-05121-0009" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0009</assert>
		<assert id="BR-BT-05121-0165" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0165</assert>
		<assert id="BR-BT-05131-0009" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0009</assert>
		<assert id="BR-BT-05141-0009" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0009</assert>
		<assert id="BR-BT-05141-0195" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0195</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '7']">
		<assert id="BR-BT-00727-0196" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0196</assert>
		<assert id="BR-BT-05071-0012" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0012</assert>
		<assert id="BR-BT-05071-0196" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0196</assert>
		<assert id="BR-BT-05101-0012" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0012</assert>
		<assert id="BR-BT-05101-0063" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0063</assert>
		<assert id="BR-BT-05101-0114" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0114</assert>
		<assert id="BR-BT-05121-0012" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0012</assert>
		<assert id="BR-BT-05121-0168" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0168</assert>
		<assert id="BR-BT-05131-0012" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0012</assert>
		<assert id="BR-BT-05141-0012" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0012</assert>
		<assert id="BR-BT-05141-0196" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0196</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '8']">
		<assert id="BR-BT-00727-0197" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0197</assert>
		<assert id="BR-BT-05071-0013" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0013</assert>
		<assert id="BR-BT-05071-0197" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0197</assert>
		<assert id="BR-BT-05101-0013" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0013</assert>
		<assert id="BR-BT-05101-0064" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0064</assert>
		<assert id="BR-BT-05101-0115" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0115</assert>
		<assert id="BR-BT-05121-0013" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0013</assert>
		<assert id="BR-BT-05121-0169" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0169</assert>
		<assert id="BR-BT-05131-0013" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0013</assert>
		<assert id="BR-BT-05141-0013" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0013</assert>
		<assert id="BR-BT-05141-0197" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0197</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '9']">
		<assert id="BR-BT-00727-0198" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0198</assert>
		<assert id="BR-BT-05071-0014" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0014</assert>
		<assert id="BR-BT-05071-0198" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0198</assert>
		<assert id="BR-BT-05101-0014" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0014</assert>
		<assert id="BR-BT-05101-0065" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0065</assert>
		<assert id="BR-BT-05101-0116" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0116</assert>
		<assert id="BR-BT-05121-0014" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0014</assert>
		<assert id="BR-BT-05121-0170" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0170</assert>
		<assert id="BR-BT-05131-0014" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0014</assert>
		<assert id="BR-BT-05141-0014" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0014</assert>
		<assert id="BR-BT-05141-0198" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0198</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '15']">
		<assert id="BR-BT-00727-0205" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0205</assert>
		<assert id="BR-BT-05071-0021" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0021</assert>
		<assert id="BR-BT-05071-0205" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0205</assert>
		<assert id="BR-BT-05101-0021" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0021</assert>
		<assert id="BR-BT-05101-0072" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0072</assert>
		<assert id="BR-BT-05101-0123" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0123</assert>
		<assert id="BR-BT-05121-0021" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0021</assert>
		<assert id="BR-BT-05121-0177" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0177</assert>
		<assert id="BR-BT-05131-0021" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0021</assert>
		<assert id="BR-BT-05141-0021" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0021</assert>
		<assert id="BR-BT-05141-0205" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0205</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '22']">
		<assert id="BR-BT-00727-0212" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0212</assert>
		<assert id="BR-BT-05071-0029" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0029</assert>
		<assert id="BR-BT-05071-0212" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0212</assert>
		<assert id="BR-BT-05101-0029" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0029</assert>
		<assert id="BR-BT-05101-0080" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0080</assert>
		<assert id="BR-BT-05101-0131" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0131</assert>
		<assert id="BR-BT-05121-0029" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0029</assert>
		<assert id="BR-BT-05121-0185" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0185</assert>
		<assert id="BR-BT-05131-0029" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0029</assert>
		<assert id="BR-BT-05141-0029" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0029</assert>
		<assert id="BR-BT-05141-0212" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0212</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '25']">
		<assert id="BR-BT-05071-0032" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0032</assert>
		<assert id="BR-BT-05101-0032" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0032</assert>
		<assert id="BR-BT-05101-0083" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0083</assert>
		<assert id="BR-BT-05101-0134" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0134</assert>
		<assert id="BR-BT-05121-0032" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0032</assert>
		<assert id="BR-BT-05121-0188" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0188</assert>
		<assert id="BR-BT-05131-0032" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '26']">
		<assert id="BR-BT-05071-0033" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0033</assert>
		<assert id="BR-BT-05101-0033" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0033</assert>
		<assert id="BR-BT-05101-0084" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0084</assert>
		<assert id="BR-BT-05101-0135" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0135</assert>
		<assert id="BR-BT-05121-0033" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0033</assert>
		<assert id="BR-BT-05121-0189" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0189</assert>
		<assert id="BR-BT-05131-0033" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '28']">
		<assert id="BR-BT-05071-0035" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0035</assert>
		<assert id="BR-BT-05101-0035" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0035</assert>
		<assert id="BR-BT-05101-0086" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0086</assert>
		<assert id="BR-BT-05101-0137" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0137</assert>
		<assert id="BR-BT-05121-0035" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0035</assert>
		<assert id="BR-BT-05121-0191" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0191</assert>
		<assert id="BR-BT-05131-0035" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = '27']">
		<assert id="BR-BT-05071-0034" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0034</assert>
		<assert id="BR-BT-05101-0034" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0034</assert>
		<assert id="BR-BT-05101-0085" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0085</assert>
		<assert id="BR-BT-05101-0136" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0136</assert>
		<assert id="BR-BT-05121-0034" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0034</assert>
		<assert id="BR-BT-05121-0190" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0190</assert>
		<assert id="BR-BT-05131-0034" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00727-0201" role="ERROR" test="count(cbc:Region) = 0 or (not(cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0201</assert>
		<assert id="BR-BT-05071-0017" role="ERROR" test="count(cbc:CountrySubentityCode) &gt; 0 or not(not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0017</assert>
		<assert id="BR-BT-05071-0201" role="ERROR" test="count(cbc:CountrySubentityCode) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0201</assert>
		<assert id="BR-BT-05101-0017" role="ERROR" test="count(cbc:StreetName) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0017</assert>
		<assert id="BR-BT-05101-0068" role="ERROR" test="count(cbc:AdditionalStreetName) = 0 or (cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0068</assert>
		<assert id="BR-BT-05101-0119" role="ERROR" test="count(cac:AddressLine/cbc:Line) = 0 or (cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0119</assert>
		<assert id="BR-BT-05121-0017" role="ERROR" test="count(cbc:PostalZone) = 0 or (cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0017</assert>
		<assert id="BR-BT-05121-0173" role="ERROR" test="count(cbc:PostalZone) &gt; 0 or not(cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0173</assert>
		<assert id="BR-BT-05131-0017" role="ERROR" test="count(cbc:CityName) = 0 or (not(cbc:Region[normalize-space(text())]) and cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0017</assert>
		<assert id="BR-BT-05141-0017" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0017</assert>
		<assert id="BR-BT-05141-0201" role="ERROR" test="count(cac:Country/cbc:IdentificationCode) = 0 or (cbc:Region/normalize-space(text())='anyw-cou' or not(cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0201</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '36']">
		<assert id="BR-BT-00026-0445" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0445</assert>
		<assert id="BR-BT-00026-0495" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0495</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '37']">
		<assert id="BR-BT-00026-0446" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0446</assert>
		<assert id="BR-BT-00026-0496" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0496</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '38']">
		<assert id="BR-BT-00026-0447" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0447</assert>
		<assert id="BR-BT-00026-0497" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0497</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '39']">
		<assert id="BR-BT-00026-0448" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0448</assert>
		<assert id="BR-BT-00026-0498" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0498</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '40']">
		<assert id="BR-BT-00026-0449" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0449</assert>
		<assert id="BR-BT-00026-0499" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0499</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '33']">
		<assert id="BR-BT-00026-0442" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0442</assert>
		<assert id="BR-BT-00026-0492" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0492</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '34']">
		<assert id="BR-BT-00026-0443" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0443</assert>
		<assert id="BR-BT-00026-0493" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0493</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '35']">
		<assert id="BR-BT-00026-0444" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0444</assert>
		<assert id="BR-BT-00026-0494" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0494</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '29']">
		<assert id="BR-BT-00026-0436" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0436</assert>
		<assert id="BR-BT-00026-0486" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0486</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '30']">
		<assert id="BR-BT-00026-0437" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0437</assert>
		<assert id="BR-BT-00026-0487" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0487</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '32']">
		<assert id="BR-BT-00026-0439" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0439</assert>
		<assert id="BR-BT-00026-0489" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0489</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '31']">
		<assert id="BR-BT-00026-0438" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0438</assert>
		<assert id="BR-BT-00026-0488" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0488</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '23']">
		<assert id="BR-BT-00026-0430" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0430</assert>
		<assert id="BR-BT-00026-0480" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0480</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '24']">
		<assert id="BR-BT-00026-0431" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0431</assert>
		<assert id="BR-BT-00026-0481" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0481</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '20']">
		<assert id="BR-BT-00026-0427" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0427</assert>
		<assert id="BR-BT-00026-0477" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0477</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '21']">
		<assert id="BR-BT-00026-0428" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0428</assert>
		<assert id="BR-BT-00026-0478" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0478</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '16']">
		<assert id="BR-BT-00026-0422" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0422</assert>
		<assert id="BR-BT-00026-0472" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0472</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '17']">
		<assert id="BR-BT-00026-0423" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0423</assert>
		<assert id="BR-BT-00026-0473" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0473</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '19']">
		<assert id="BR-BT-00026-0425" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0425</assert>
		<assert id="BR-BT-00026-0475" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0475</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '18']">
		<assert id="BR-BT-00026-0424" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0424</assert>
		<assert id="BR-BT-00026-0474" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0474</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '12']">
		<assert id="BR-BT-00026-0418" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0418</assert>
		<assert id="BR-BT-00026-0468" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0468</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '13']">
		<assert id="BR-BT-00026-0419" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0419</assert>
		<assert id="BR-BT-00026-0469" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0469</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '14']">
		<assert id="BR-BT-00026-0420" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0420</assert>
		<assert id="BR-BT-00026-0470" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0470</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '10']">
		<assert id="BR-BT-00026-0415" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0415</assert>
		<assert id="BR-BT-00026-0465" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0465</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '11']">
		<assert id="BR-BT-00026-0416" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0416</assert>
		<assert id="BR-BT-00026-0466" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0466</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '7']">
		<assert id="BR-BT-00026-0412" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0412</assert>
		<assert id="BR-BT-00026-0462" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0462</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '8']">
		<assert id="BR-BT-00026-0413" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0413</assert>
		<assert id="BR-BT-00026-0463" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0463</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '9']">
		<assert id="BR-BT-00026-0414" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0414</assert>
		<assert id="BR-BT-00026-0464" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0464</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '15']">
		<assert id="BR-BT-00026-0421" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0421</assert>
		<assert id="BR-BT-00026-0471" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0471</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '22']">
		<assert id="BR-BT-00026-0429" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0429</assert>
		<assert id="BR-BT-00026-0479" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0479</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '25']">
		<assert id="BR-BT-00026-0432" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0432</assert>
		<assert id="BR-BT-00026-0482" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0482</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '26']">
		<assert id="BR-BT-00026-0433" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0433</assert>
		<assert id="BR-BT-00026-0483" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0483</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '28']">
		<assert id="BR-BT-00026-0435" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0435</assert>
		<assert id="BR-BT-00026-0485" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0485</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '27']">
		<assert id="BR-BT-00026-0434" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0434</assert>
		<assert id="BR-BT-00026-0484" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0484</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = 'T01']">
		<assert id="BR-BT-00026-0411" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0411</assert>
		<assert id="BR-BT-00026-0461" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0461</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = 'T02']">
		<assert id="BR-BT-00026-0441" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0441</assert>
		<assert id="BR-BT-00026-0491" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0491</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00026-0417" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0417</assert>
		<assert id="BR-BT-00026-0467" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0467</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ContractExtension[$noticeSubType = '18']">
		<assert id="BR-BT-00057-0024" role="ERROR" test="count(cac:Renewal/cac:Period/cbc:Description) &gt; 0 or not(cbc:MaximumNumberNumeric/normalize-space(text())!='')">rule|message|BR-BT-00057-0024</assert>
		<assert id="BR-BT-00057-0055" role="ERROR" test="count(cac:Renewal/cac:Period/cbc:Description) = 0 or (cbc:MaximumNumberNumeric/normalize-space(text())!='')">rule|message|BR-BT-00057-0055</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ContractExtension[$noticeSubType = '15']">
		<assert id="BR-BT-00057-0021" role="ERROR" test="count(cac:Renewal/cac:Period/cbc:Description) &gt; 0 or not(cbc:MaximumNumberNumeric/normalize-space(text())!='')">rule|message|BR-BT-00057-0021</assert>
		<assert id="BR-BT-00057-0054" role="ERROR" test="count(cac:Renewal/cac:Period/cbc:Description) = 0 or (cbc:MaximumNumberNumeric/normalize-space(text())!='')">rule|message|BR-BT-00057-0054</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '36']">
		<assert id="BR-BT-00026-0145" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0145</assert>
		<assert id="BR-BT-00026-0195" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0195</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '37']">
		<assert id="BR-BT-00026-0146" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0146</assert>
		<assert id="BR-BT-00026-0196" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0196</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '38']">
		<assert id="BR-BT-00026-0147" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0147</assert>
		<assert id="BR-BT-00026-0197" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0197</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '39']">
		<assert id="BR-BT-00026-0148" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0148</assert>
		<assert id="BR-BT-00026-0198" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0198</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '40']">
		<assert id="BR-BT-00026-0149" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0149</assert>
		<assert id="BR-BT-00026-0199" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0199</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '33']">
		<assert id="BR-BT-00026-0142" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0142</assert>
		<assert id="BR-BT-00026-0192" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0192</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '34']">
		<assert id="BR-BT-00026-0143" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0143</assert>
		<assert id="BR-BT-00026-0193" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0193</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '35']">
		<assert id="BR-BT-00026-0144" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0144</assert>
		<assert id="BR-BT-00026-0194" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0194</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '29']">
		<assert id="BR-BT-00026-0136" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0136</assert>
		<assert id="BR-BT-00026-0186" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0186</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '30']">
		<assert id="BR-BT-00026-0137" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0137</assert>
		<assert id="BR-BT-00026-0187" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0187</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '32']">
		<assert id="BR-BT-00026-0139" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0139</assert>
		<assert id="BR-BT-00026-0189" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0189</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '31']">
		<assert id="BR-BT-00026-0138" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0138</assert>
		<assert id="BR-BT-00026-0188" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0188</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '23']">
		<assert id="BR-BT-00026-0130" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0130</assert>
		<assert id="BR-BT-00026-0180" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0180</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '24']">
		<assert id="BR-BT-00026-0131" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0131</assert>
		<assert id="BR-BT-00026-0181" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0181</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '20']">
		<assert id="BR-BT-00026-0127" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0127</assert>
		<assert id="BR-BT-00026-0177" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0177</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '21']">
		<assert id="BR-BT-00026-0128" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0128</assert>
		<assert id="BR-BT-00026-0178" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0178</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '16']">
		<assert id="BR-BT-00026-0122" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0122</assert>
		<assert id="BR-BT-00026-0172" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0172</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '17']">
		<assert id="BR-BT-00026-0123" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0123</assert>
		<assert id="BR-BT-00026-0173" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0173</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '19']">
		<assert id="BR-BT-00026-0125" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0125</assert>
		<assert id="BR-BT-00026-0175" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0175</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '18']">
		<assert id="BR-BT-00026-0124" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0124</assert>
		<assert id="BR-BT-00026-0174" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0174</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '12']">
		<assert id="BR-BT-00026-0118" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0118</assert>
		<assert id="BR-BT-00026-0168" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0168</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '13']">
		<assert id="BR-BT-00026-0119" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0119</assert>
		<assert id="BR-BT-00026-0169" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0169</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '14']">
		<assert id="BR-BT-00026-0120" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0120</assert>
		<assert id="BR-BT-00026-0170" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0170</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '10']">
		<assert id="BR-BT-00026-0115" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0115</assert>
		<assert id="BR-BT-00026-0165" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0165</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '11']">
		<assert id="BR-BT-00026-0116" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0116</assert>
		<assert id="BR-BT-00026-0166" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0166</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '7']">
		<assert id="BR-BT-00026-0112" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0112</assert>
		<assert id="BR-BT-00026-0162" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0162</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '8']">
		<assert id="BR-BT-00026-0113" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0113</assert>
		<assert id="BR-BT-00026-0163" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0163</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '9']">
		<assert id="BR-BT-00026-0114" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0114</assert>
		<assert id="BR-BT-00026-0164" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0164</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '15']">
		<assert id="BR-BT-00026-0121" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0121</assert>
		<assert id="BR-BT-00026-0171" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0171</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '22']">
		<assert id="BR-BT-00026-0129" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0129</assert>
		<assert id="BR-BT-00026-0179" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0179</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '25']">
		<assert id="BR-BT-00026-0132" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0132</assert>
		<assert id="BR-BT-00026-0182" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0182</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '26']">
		<assert id="BR-BT-00026-0133" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0133</assert>
		<assert id="BR-BT-00026-0183" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0183</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '28']">
		<assert id="BR-BT-00026-0135" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0135</assert>
		<assert id="BR-BT-00026-0185" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0185</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '27']">
		<assert id="BR-BT-00026-0134" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0134</assert>
		<assert id="BR-BT-00026-0184" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0184</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'T01']">
		<assert id="BR-BT-00026-0111" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0111</assert>
		<assert id="BR-BT-00026-0161" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0161</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'T02']">
		<assert id="BR-BT-00026-0141" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0141</assert>
		<assert id="BR-BT-00026-0191" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0191</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00026-0117" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0117</assert>
		<assert id="BR-BT-00026-0167" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0167</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '38']">
		<assert id="BR-BT-00036-0098" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0098</assert>
		<assert id="BR-BT-00536-0100" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0100</assert>
		<assert id="BR-BT-00536-0139" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0139</assert>
		<assert id="BR-BT-00537-0099" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0099</assert>
		<assert id="BR-BT-00538-0098" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '39']">
		<assert id="BR-BT-00036-0099" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0099</assert>
		<assert id="BR-BT-00536-0101" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0101</assert>
		<assert id="BR-BT-00536-0140" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0140</assert>
		<assert id="BR-BT-00537-0100" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0100</assert>
		<assert id="BR-BT-00538-0099" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0099</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '40']">
		<assert id="BR-BT-00036-0100" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0100</assert>
		<assert id="BR-BT-00536-0102" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0102</assert>
		<assert id="BR-BT-00536-0141" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0141</assert>
		<assert id="BR-BT-00537-0101" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0101</assert>
		<assert id="BR-BT-00538-0100" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0100</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '33']">
		<assert id="BR-BT-00036-0093" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0093</assert>
		<assert id="BR-BT-00536-0095" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0095</assert>
		<assert id="BR-BT-00536-0136" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0136</assert>
		<assert id="BR-BT-00537-0094" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0094</assert>
		<assert id="BR-BT-00538-0093" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0093</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '34']">
		<assert id="BR-BT-00036-0094" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0094</assert>
		<assert id="BR-BT-00536-0096" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0096</assert>
		<assert id="BR-BT-00536-0137" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0137</assert>
		<assert id="BR-BT-00537-0095" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0095</assert>
		<assert id="BR-BT-00538-0094" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '35']">
		<assert id="BR-BT-00036-0095" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0095</assert>
		<assert id="BR-BT-00536-0097" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0097</assert>
		<assert id="BR-BT-00536-0138" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0138</assert>
		<assert id="BR-BT-00537-0096" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0096</assert>
		<assert id="BR-BT-00538-0095" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '29']">
		<assert id="BR-BT-00036-0087" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0087</assert>
		<assert id="BR-BT-00536-0089" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0089</assert>
		<assert id="BR-BT-00536-0131" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0131</assert>
		<assert id="BR-BT-00537-0088" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0088</assert>
		<assert id="BR-BT-00538-0087" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '30']">
		<assert id="BR-BT-00036-0088" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0088</assert>
		<assert id="BR-BT-00536-0090" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0090</assert>
		<assert id="BR-BT-00536-0132" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0132</assert>
		<assert id="BR-BT-00537-0089" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0089</assert>
		<assert id="BR-BT-00538-0088" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '32']">
		<assert id="BR-BT-00036-0090" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0090</assert>
		<assert id="BR-BT-00536-0092" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0092</assert>
		<assert id="BR-BT-00536-0134" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0134</assert>
		<assert id="BR-BT-00537-0091" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0091</assert>
		<assert id="BR-BT-00538-0090" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0090</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '31']">
		<assert id="BR-BT-00036-0089" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0089</assert>
		<assert id="BR-BT-00536-0091" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0091</assert>
		<assert id="BR-BT-00536-0133" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0133</assert>
		<assert id="BR-BT-00537-0090" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0090</assert>
		<assert id="BR-BT-00538-0089" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '20']">
		<assert id="BR-BT-00036-0078" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0078</assert>
		<assert id="BR-BT-00536-0080" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0080</assert>
		<assert id="BR-BT-00536-0125" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0125</assert>
		<assert id="BR-BT-00537-0079" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0079</assert>
		<assert id="BR-BT-00538-0078" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '21']">
		<assert id="BR-BT-00036-0079" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0079</assert>
		<assert id="BR-BT-00536-0081" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0081</assert>
		<assert id="BR-BT-00536-0126" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0126</assert>
		<assert id="BR-BT-00537-0080" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0080</assert>
		<assert id="BR-BT-00538-0079" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '16']">
		<assert id="BR-BT-00036-0073" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0073</assert>
		<assert id="BR-BT-00036-0111" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0111</assert>
		<assert id="BR-BT-00536-0075" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0075</assert>
		<assert id="BR-BT-00536-0113" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0113</assert>
		<assert id="BR-BT-00537-0074" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0074</assert>
		<assert id="BR-BT-00537-0113" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0113</assert>
		<assert id="BR-BT-00538-0073" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0073</assert>
		<assert id="BR-BT-00538-0113" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0113</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '17']">
		<assert id="BR-BT-00036-0074" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0074</assert>
		<assert id="BR-BT-00036-0112" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0112</assert>
		<assert id="BR-BT-00536-0076" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0076</assert>
		<assert id="BR-BT-00536-0114" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0114</assert>
		<assert id="BR-BT-00537-0075" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0075</assert>
		<assert id="BR-BT-00537-0114" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0114</assert>
		<assert id="BR-BT-00538-0074" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0074</assert>
		<assert id="BR-BT-00538-0114" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '19']">
		<assert id="BR-BT-00036-0076" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0076</assert>
		<assert id="BR-BT-00036-0114" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0114</assert>
		<assert id="BR-BT-00536-0078" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0078</assert>
		<assert id="BR-BT-00536-0116" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0116</assert>
		<assert id="BR-BT-00537-0077" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0077</assert>
		<assert id="BR-BT-00537-0116" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0116</assert>
		<assert id="BR-BT-00538-0076" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0076</assert>
		<assert id="BR-BT-00538-0116" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '18']">
		<assert id="BR-BT-00036-0075" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0075</assert>
		<assert id="BR-BT-00036-0113" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0113</assert>
		<assert id="BR-BT-00536-0077" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0077</assert>
		<assert id="BR-BT-00536-0115" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0115</assert>
		<assert id="BR-BT-00537-0076" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0076</assert>
		<assert id="BR-BT-00537-0115" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0115</assert>
		<assert id="BR-BT-00538-0075" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0075</assert>
		<assert id="BR-BT-00538-0115" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0115</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '12']">
		<assert id="BR-BT-00036-0069" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0069</assert>
		<assert id="BR-BT-00536-0071" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0071</assert>
		<assert id="BR-BT-00536-0121" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0121</assert>
		<assert id="BR-BT-00537-0070" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0070</assert>
		<assert id="BR-BT-00538-0069" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '13']">
		<assert id="BR-BT-00036-0070" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0070</assert>
		<assert id="BR-BT-00536-0072" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0072</assert>
		<assert id="BR-BT-00536-0122" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0122</assert>
		<assert id="BR-BT-00537-0071" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0071</assert>
		<assert id="BR-BT-00538-0070" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '14']">
		<assert id="BR-BT-00036-0071" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0071</assert>
		<assert id="BR-BT-00536-0073" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0073</assert>
		<assert id="BR-BT-00536-0123" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0123</assert>
		<assert id="BR-BT-00537-0072" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0072</assert>
		<assert id="BR-BT-00538-0071" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '10']">
		<assert id="BR-BT-00036-0066" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0066</assert>
		<assert id="BR-BT-00036-0107" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0107</assert>
		<assert id="BR-BT-00536-0068" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0068</assert>
		<assert id="BR-BT-00536-0109" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0109</assert>
		<assert id="BR-BT-00537-0067" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0067</assert>
		<assert id="BR-BT-00537-0109" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0109</assert>
		<assert id="BR-BT-00538-0066" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0066</assert>
		<assert id="BR-BT-00538-0109" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0109</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '11']">
		<assert id="BR-BT-00036-0067" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0067</assert>
		<assert id="BR-BT-00036-0108" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0108</assert>
		<assert id="BR-BT-00536-0070" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0070</assert>
		<assert id="BR-BT-00536-0110" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0110</assert>
		<assert id="BR-BT-00537-0068" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0068</assert>
		<assert id="BR-BT-00537-0110" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0110</assert>
		<assert id="BR-BT-00538-0067" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0067</assert>
		<assert id="BR-BT-00538-0110" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0110</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '7']">
		<assert id="BR-BT-00036-0063" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0063</assert>
		<assert id="BR-BT-00036-0104" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0104</assert>
		<assert id="BR-BT-00536-0065" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0065</assert>
		<assert id="BR-BT-00536-0106" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0106</assert>
		<assert id="BR-BT-00537-0064" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0064</assert>
		<assert id="BR-BT-00537-0106" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0106</assert>
		<assert id="BR-BT-00538-0063" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0063</assert>
		<assert id="BR-BT-00538-0106" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '8']">
		<assert id="BR-BT-00036-0064" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0064</assert>
		<assert id="BR-BT-00036-0105" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0105</assert>
		<assert id="BR-BT-00536-0066" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0066</assert>
		<assert id="BR-BT-00536-0107" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0107</assert>
		<assert id="BR-BT-00537-0065" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0065</assert>
		<assert id="BR-BT-00537-0107" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0107</assert>
		<assert id="BR-BT-00538-0064" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0064</assert>
		<assert id="BR-BT-00538-0107" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '9']">
		<assert id="BR-BT-00036-0065" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0065</assert>
		<assert id="BR-BT-00036-0106" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0106</assert>
		<assert id="BR-BT-00536-0067" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0067</assert>
		<assert id="BR-BT-00536-0108" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0108</assert>
		<assert id="BR-BT-00537-0066" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0066</assert>
		<assert id="BR-BT-00537-0108" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0108</assert>
		<assert id="BR-BT-00538-0065" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0065</assert>
		<assert id="BR-BT-00538-0108" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '15']">
		<assert id="BR-BT-00036-0072" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0072</assert>
		<assert id="BR-BT-00036-0110" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0110</assert>
		<assert id="BR-BT-00536-0074" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0074</assert>
		<assert id="BR-BT-00536-0112" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0112</assert>
		<assert id="BR-BT-00537-0073" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0073</assert>
		<assert id="BR-BT-00537-0112" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0112</assert>
		<assert id="BR-BT-00538-0072" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0072</assert>
		<assert id="BR-BT-00538-0112" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0112</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '22']">
		<assert id="BR-BT-00036-0080" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0080</assert>
		<assert id="BR-BT-00036-0115" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0115</assert>
		<assert id="BR-BT-00536-0082" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0082</assert>
		<assert id="BR-BT-00536-0117" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0117</assert>
		<assert id="BR-BT-00537-0081" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0081</assert>
		<assert id="BR-BT-00537-0117" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0117</assert>
		<assert id="BR-BT-00538-0080" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0080</assert>
		<assert id="BR-BT-00538-0117" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '25']">
		<assert id="BR-BT-00036-0083" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0083</assert>
		<assert id="BR-BT-00536-0085" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0085</assert>
		<assert id="BR-BT-00536-0127" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0127</assert>
		<assert id="BR-BT-00537-0084" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0084</assert>
		<assert id="BR-BT-00538-0083" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '26']">
		<assert id="BR-BT-00036-0084" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0084</assert>
		<assert id="BR-BT-00536-0086" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0086</assert>
		<assert id="BR-BT-00536-0128" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0128</assert>
		<assert id="BR-BT-00537-0085" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0085</assert>
		<assert id="BR-BT-00538-0084" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '28']">
		<assert id="BR-BT-00036-0086" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0086</assert>
		<assert id="BR-BT-00536-0088" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0088</assert>
		<assert id="BR-BT-00536-0130" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0130</assert>
		<assert id="BR-BT-00537-0087" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0087</assert>
		<assert id="BR-BT-00538-0086" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = '27']">
		<assert id="BR-BT-00036-0085" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0085</assert>
		<assert id="BR-BT-00536-0087" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0087</assert>
		<assert id="BR-BT-00536-0129" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0129</assert>
		<assert id="BR-BT-00537-0086" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0086</assert>
		<assert id="BR-BT-00538-0085" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = 'T01']">
		<assert id="BR-BT-00036-0062" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0062</assert>
		<assert id="BR-BT-00036-0103" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0103</assert>
		<assert id="BR-BT-00536-0064" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0064</assert>
		<assert id="BR-BT-00536-0105" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0105</assert>
		<assert id="BR-BT-00537-0063" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0063</assert>
		<assert id="BR-BT-00537-0105" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0105</assert>
		<assert id="BR-BT-00538-0062" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0062</assert>
		<assert id="BR-BT-00538-0105" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0105</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = 'T02']">
		<assert id="BR-BT-00036-0092" role="ERROR" test="count(cbc:DurationMeasure) &gt; 0 or not(not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0092</assert>
		<assert id="BR-BT-00036-0116" role="ERROR" test="count(cbc:DurationMeasure) = 0 or (not(cbc:EndDate[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00036-0116</assert>
		<assert id="BR-BT-00536-0094" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0094</assert>
		<assert id="BR-BT-00536-0118" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0118</assert>
		<assert id="BR-BT-00537-0093" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0093</assert>
		<assert id="BR-BT-00537-0118" role="ERROR" test="count(cbc:EndDate) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:DescriptionCode[normalize-space(text())]))">rule|message|BR-BT-00537-0118</assert>
		<assert id="BR-BT-00538-0092" role="ERROR" test="count(cbc:DescriptionCode) &gt; 0 or not(not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0092</assert>
		<assert id="BR-BT-00538-0118" role="ERROR" test="count(cbc:DescriptionCode) = 0 or (not(cbc:DurationMeasure[normalize-space(text())]) and not(cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00538-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00536-0069" role="ERROR" test="count(cbc:StartDate) &gt; 0 or not(cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0069</assert>
		<assert id="BR-BT-00536-0111" role="ERROR" test="count(cbc:StartDate) = 0 or (cbc:DurationMeasure/normalize-space(text())!='' or cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00536-0111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '36']">
		<assert id="BR-BT-00531-0095" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '37']">
		<assert id="BR-BT-00531-0096" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '38']">
		<assert id="BR-BT-00531-0097" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '39']">
		<assert id="BR-BT-00531-0098" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '40']">
		<assert id="BR-BT-00531-0099" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0099</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '33']">
		<assert id="BR-BT-00531-0092" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0092</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '34']">
		<assert id="BR-BT-00531-0093" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0093</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '35']">
		<assert id="BR-BT-00531-0094" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '29']">
		<assert id="BR-BT-00531-0086" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '30']">
		<assert id="BR-BT-00531-0087" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '32']">
		<assert id="BR-BT-00531-0089" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '31']">
		<assert id="BR-BT-00531-0088" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '23']">
		<assert id="BR-BT-00531-0080" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '24']">
		<assert id="BR-BT-00531-0081" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '20']">
		<assert id="BR-BT-00531-0077" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0077</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '21']">
		<assert id="BR-BT-00531-0078" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '16']">
		<assert id="BR-BT-00531-0072" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '17']">
		<assert id="BR-BT-00531-0073" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '19']">
		<assert id="BR-BT-00531-0075" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '18']">
		<assert id="BR-BT-00531-0074" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '1']">
		<assert id="BR-BT-00531-0054" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0054</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '2']">
		<assert id="BR-BT-00531-0055" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0055</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '3']">
		<assert id="BR-BT-00531-0056" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0056</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '12']">
		<assert id="BR-BT-00531-0068" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '13']">
		<assert id="BR-BT-00531-0069" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '14']">
		<assert id="BR-BT-00531-0070" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '10']">
		<assert id="BR-BT-00531-0065" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '11']">
		<assert id="BR-BT-00531-0066" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '4']">
		<assert id="BR-BT-00531-0057" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0057</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '5']">
		<assert id="BR-BT-00531-0058" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0058</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '6']">
		<assert id="BR-BT-00531-0059" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0059</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '7']">
		<assert id="BR-BT-00531-0062" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0062</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '8']">
		<assert id="BR-BT-00531-0063" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '9']">
		<assert id="BR-BT-00531-0064" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '15']">
		<assert id="BR-BT-00531-0071" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '22']">
		<assert id="BR-BT-00531-0079" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '25']">
		<assert id="BR-BT-00531-0082" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '26']">
		<assert id="BR-BT-00531-0083" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '28']">
		<assert id="BR-BT-00531-0085" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '27']">
		<assert id="BR-BT-00531-0084" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'T01']">
		<assert id="BR-BT-00531-0061" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0061</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'T02']">
		<assert id="BR-BT-00531-0091" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0091</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00531-0067" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '36']">
		<assert id="BR-BT-00727-0185" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0185</assert>
		<assert id="BR-BT-00728-0149" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0149</assert>
		<assert id="BR-BT-05071-0147" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0147</assert>
		<assert id="BR-BT-05071-0185" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0185</assert>
		<assert id="BR-BT-05101-0351" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0351</assert>
		<assert id="BR-BT-05101-0402" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0402</assert>
		<assert id="BR-BT-05101-0453" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0453</assert>
		<assert id="BR-BT-05121-0147" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0147</assert>
		<assert id="BR-BT-05121-0297" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0297</assert>
		<assert id="BR-BT-05131-0147" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0147</assert>
		<assert id="BR-BT-05141-0147" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0147</assert>
		<assert id="BR-BT-05141-0185" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0185</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '37']">
		<assert id="BR-BT-00727-0186" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0186</assert>
		<assert id="BR-BT-00728-0150" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0150</assert>
		<assert id="BR-BT-05071-0148" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0148</assert>
		<assert id="BR-BT-05071-0186" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0186</assert>
		<assert id="BR-BT-05101-0352" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0352</assert>
		<assert id="BR-BT-05101-0403" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0403</assert>
		<assert id="BR-BT-05101-0454" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0454</assert>
		<assert id="BR-BT-05121-0148" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0148</assert>
		<assert id="BR-BT-05121-0298" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0298</assert>
		<assert id="BR-BT-05131-0148" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0148</assert>
		<assert id="BR-BT-05141-0148" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0148</assert>
		<assert id="BR-BT-05141-0186" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0186</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '38']">
		<assert id="BR-BT-00728-0151" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0151</assert>
		<assert id="BR-BT-05071-0149" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0149</assert>
		<assert id="BR-BT-05101-0353" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0353</assert>
		<assert id="BR-BT-05101-0404" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0404</assert>
		<assert id="BR-BT-05101-0455" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0455</assert>
		<assert id="BR-BT-05121-0149" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0149</assert>
		<assert id="BR-BT-05121-0299" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0299</assert>
		<assert id="BR-BT-05131-0149" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0149</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '39']">
		<assert id="BR-BT-00728-0152" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0152</assert>
		<assert id="BR-BT-05071-0150" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0150</assert>
		<assert id="BR-BT-05101-0354" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0354</assert>
		<assert id="BR-BT-05101-0405" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0405</assert>
		<assert id="BR-BT-05101-0456" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0456</assert>
		<assert id="BR-BT-05121-0150" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0150</assert>
		<assert id="BR-BT-05121-0300" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0300</assert>
		<assert id="BR-BT-05131-0150" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0150</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '40']">
		<assert id="BR-BT-00728-0153" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0153</assert>
		<assert id="BR-BT-05071-0151" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0151</assert>
		<assert id="BR-BT-05101-0355" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0355</assert>
		<assert id="BR-BT-05101-0406" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0406</assert>
		<assert id="BR-BT-05101-0457" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0457</assert>
		<assert id="BR-BT-05121-0151" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0151</assert>
		<assert id="BR-BT-05121-0301" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0301</assert>
		<assert id="BR-BT-05131-0151" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0151</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '33']">
		<assert id="BR-BT-00727-0182" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0182</assert>
		<assert id="BR-BT-00728-0146" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0146</assert>
		<assert id="BR-BT-05071-0144" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0144</assert>
		<assert id="BR-BT-05071-0182" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0182</assert>
		<assert id="BR-BT-05101-0348" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0348</assert>
		<assert id="BR-BT-05101-0399" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0399</assert>
		<assert id="BR-BT-05101-0450" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0450</assert>
		<assert id="BR-BT-05121-0144" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0144</assert>
		<assert id="BR-BT-05121-0294" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0294</assert>
		<assert id="BR-BT-05131-0144" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0144</assert>
		<assert id="BR-BT-05141-0144" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0144</assert>
		<assert id="BR-BT-05141-0182" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0182</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '34']">
		<assert id="BR-BT-00727-0183" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0183</assert>
		<assert id="BR-BT-00728-0147" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0147</assert>
		<assert id="BR-BT-05071-0145" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0145</assert>
		<assert id="BR-BT-05071-0183" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0183</assert>
		<assert id="BR-BT-05101-0349" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0349</assert>
		<assert id="BR-BT-05101-0400" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0400</assert>
		<assert id="BR-BT-05101-0451" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0451</assert>
		<assert id="BR-BT-05121-0145" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0145</assert>
		<assert id="BR-BT-05121-0295" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0295</assert>
		<assert id="BR-BT-05131-0145" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0145</assert>
		<assert id="BR-BT-05141-0145" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0145</assert>
		<assert id="BR-BT-05141-0183" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0183</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '35']">
		<assert id="BR-BT-00727-0184" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0184</assert>
		<assert id="BR-BT-00728-0148" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0148</assert>
		<assert id="BR-BT-05071-0146" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0146</assert>
		<assert id="BR-BT-05071-0184" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0184</assert>
		<assert id="BR-BT-05101-0350" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0350</assert>
		<assert id="BR-BT-05101-0401" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0401</assert>
		<assert id="BR-BT-05101-0452" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0452</assert>
		<assert id="BR-BT-05121-0146" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0146</assert>
		<assert id="BR-BT-05121-0296" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0296</assert>
		<assert id="BR-BT-05131-0146" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0146</assert>
		<assert id="BR-BT-05141-0146" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0146</assert>
		<assert id="BR-BT-05141-0184" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0184</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '29']">
		<assert id="BR-BT-00727-0177" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0177</assert>
		<assert id="BR-BT-00728-0140" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0140</assert>
		<assert id="BR-BT-05071-0138" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0138</assert>
		<assert id="BR-BT-05071-0177" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0177</assert>
		<assert id="BR-BT-05101-0342" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0342</assert>
		<assert id="BR-BT-05101-0393" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0393</assert>
		<assert id="BR-BT-05101-0444" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0444</assert>
		<assert id="BR-BT-05121-0138" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0138</assert>
		<assert id="BR-BT-05121-0289" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0289</assert>
		<assert id="BR-BT-05131-0138" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0138</assert>
		<assert id="BR-BT-05141-0138" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0138</assert>
		<assert id="BR-BT-05141-0177" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0177</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '30']">
		<assert id="BR-BT-00727-0178" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0178</assert>
		<assert id="BR-BT-00728-0141" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0141</assert>
		<assert id="BR-BT-05071-0139" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0139</assert>
		<assert id="BR-BT-05071-0178" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0178</assert>
		<assert id="BR-BT-05101-0343" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0343</assert>
		<assert id="BR-BT-05101-0394" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0394</assert>
		<assert id="BR-BT-05101-0445" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0445</assert>
		<assert id="BR-BT-05121-0139" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0139</assert>
		<assert id="BR-BT-05121-0290" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0290</assert>
		<assert id="BR-BT-05131-0139" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0139</assert>
		<assert id="BR-BT-05141-0139" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0139</assert>
		<assert id="BR-BT-05141-0178" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0178</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '32']">
		<assert id="BR-BT-00727-0180" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0180</assert>
		<assert id="BR-BT-00728-0143" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0143</assert>
		<assert id="BR-BT-05071-0141" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0141</assert>
		<assert id="BR-BT-05071-0180" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0180</assert>
		<assert id="BR-BT-05101-0345" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0345</assert>
		<assert id="BR-BT-05101-0396" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0396</assert>
		<assert id="BR-BT-05101-0447" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0447</assert>
		<assert id="BR-BT-05121-0141" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0141</assert>
		<assert id="BR-BT-05121-0292" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0292</assert>
		<assert id="BR-BT-05131-0141" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0141</assert>
		<assert id="BR-BT-05141-0141" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0141</assert>
		<assert id="BR-BT-05141-0180" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0180</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '31']">
		<assert id="BR-BT-00727-0179" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0179</assert>
		<assert id="BR-BT-00728-0142" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0142</assert>
		<assert id="BR-BT-05071-0140" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0140</assert>
		<assert id="BR-BT-05071-0179" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0179</assert>
		<assert id="BR-BT-05101-0344" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0344</assert>
		<assert id="BR-BT-05101-0395" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0395</assert>
		<assert id="BR-BT-05101-0446" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0446</assert>
		<assert id="BR-BT-05121-0140" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0140</assert>
		<assert id="BR-BT-05121-0291" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0291</assert>
		<assert id="BR-BT-05131-0140" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0140</assert>
		<assert id="BR-BT-05141-0140" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0140</assert>
		<assert id="BR-BT-05141-0179" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0179</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '23']">
		<assert id="BR-BT-00727-0175" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0175</assert>
		<assert id="BR-BT-00728-0134" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0134</assert>
		<assert id="BR-BT-05071-0132" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0132</assert>
		<assert id="BR-BT-05071-0175" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0175</assert>
		<assert id="BR-BT-05101-0336" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0336</assert>
		<assert id="BR-BT-05101-0387" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0387</assert>
		<assert id="BR-BT-05101-0438" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0438</assert>
		<assert id="BR-BT-05121-0132" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0132</assert>
		<assert id="BR-BT-05121-0283" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0283</assert>
		<assert id="BR-BT-05131-0132" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0132</assert>
		<assert id="BR-BT-05141-0132" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0132</assert>
		<assert id="BR-BT-05141-0175" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0175</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '24']">
		<assert id="BR-BT-00727-0176" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0176</assert>
		<assert id="BR-BT-00728-0135" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0135</assert>
		<assert id="BR-BT-05071-0133" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0133</assert>
		<assert id="BR-BT-05071-0176" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0176</assert>
		<assert id="BR-BT-05101-0337" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0337</assert>
		<assert id="BR-BT-05101-0388" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0388</assert>
		<assert id="BR-BT-05101-0439" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0439</assert>
		<assert id="BR-BT-05121-0133" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0133</assert>
		<assert id="BR-BT-05121-0284" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0284</assert>
		<assert id="BR-BT-05131-0133" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0133</assert>
		<assert id="BR-BT-05141-0133" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0133</assert>
		<assert id="BR-BT-05141-0176" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0176</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '20']">
		<assert id="BR-BT-00727-0172" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0172</assert>
		<assert id="BR-BT-00728-0131" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0131</assert>
		<assert id="BR-BT-05071-0129" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0129</assert>
		<assert id="BR-BT-05071-0172" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0172</assert>
		<assert id="BR-BT-05101-0333" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0333</assert>
		<assert id="BR-BT-05101-0384" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0384</assert>
		<assert id="BR-BT-05101-0435" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0435</assert>
		<assert id="BR-BT-05121-0129" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0129</assert>
		<assert id="BR-BT-05121-0280" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0280</assert>
		<assert id="BR-BT-05131-0129" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0129</assert>
		<assert id="BR-BT-05141-0129" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0129</assert>
		<assert id="BR-BT-05141-0172" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0172</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '21']">
		<assert id="BR-BT-00727-0173" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0173</assert>
		<assert id="BR-BT-00728-0132" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0132</assert>
		<assert id="BR-BT-05071-0130" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0130</assert>
		<assert id="BR-BT-05071-0173" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0173</assert>
		<assert id="BR-BT-05101-0334" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0334</assert>
		<assert id="BR-BT-05101-0385" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0385</assert>
		<assert id="BR-BT-05101-0436" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0436</assert>
		<assert id="BR-BT-05121-0130" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0130</assert>
		<assert id="BR-BT-05121-0281" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0281</assert>
		<assert id="BR-BT-05131-0130" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0130</assert>
		<assert id="BR-BT-05141-0130" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0130</assert>
		<assert id="BR-BT-05141-0173" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0173</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '16']">
		<assert id="BR-BT-00727-0168" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0168</assert>
		<assert id="BR-BT-00728-0126" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0126</assert>
		<assert id="BR-BT-05071-0124" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0124</assert>
		<assert id="BR-BT-05071-0168" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0168</assert>
		<assert id="BR-BT-05101-0328" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0328</assert>
		<assert id="BR-BT-05101-0379" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0379</assert>
		<assert id="BR-BT-05101-0430" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0430</assert>
		<assert id="BR-BT-05121-0124" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0124</assert>
		<assert id="BR-BT-05121-0275" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0275</assert>
		<assert id="BR-BT-05131-0124" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0124</assert>
		<assert id="BR-BT-05141-0124" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0124</assert>
		<assert id="BR-BT-05141-0168" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0168</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '17']">
		<assert id="BR-BT-00727-0169" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0169</assert>
		<assert id="BR-BT-00728-0127" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0127</assert>
		<assert id="BR-BT-05071-0125" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0125</assert>
		<assert id="BR-BT-05071-0169" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0169</assert>
		<assert id="BR-BT-05101-0329" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0329</assert>
		<assert id="BR-BT-05101-0380" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0380</assert>
		<assert id="BR-BT-05101-0431" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0431</assert>
		<assert id="BR-BT-05121-0125" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0125</assert>
		<assert id="BR-BT-05121-0276" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0276</assert>
		<assert id="BR-BT-05131-0125" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0125</assert>
		<assert id="BR-BT-05141-0125" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0125</assert>
		<assert id="BR-BT-05141-0169" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0169</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '19']">
		<assert id="BR-BT-00727-0171" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0171</assert>
		<assert id="BR-BT-00728-0129" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0129</assert>
		<assert id="BR-BT-05071-0127" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0127</assert>
		<assert id="BR-BT-05071-0171" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0171</assert>
		<assert id="BR-BT-05101-0331" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0331</assert>
		<assert id="BR-BT-05101-0382" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0382</assert>
		<assert id="BR-BT-05101-0433" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0433</assert>
		<assert id="BR-BT-05121-0127" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0127</assert>
		<assert id="BR-BT-05121-0278" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0278</assert>
		<assert id="BR-BT-05131-0127" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0127</assert>
		<assert id="BR-BT-05141-0127" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0127</assert>
		<assert id="BR-BT-05141-0171" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0171</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '18']">
		<assert id="BR-BT-00727-0170" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0170</assert>
		<assert id="BR-BT-00728-0128" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0128</assert>
		<assert id="BR-BT-05071-0126" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0126</assert>
		<assert id="BR-BT-05071-0170" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0170</assert>
		<assert id="BR-BT-05101-0330" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0330</assert>
		<assert id="BR-BT-05101-0381" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0381</assert>
		<assert id="BR-BT-05101-0432" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0432</assert>
		<assert id="BR-BT-05121-0126" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0126</assert>
		<assert id="BR-BT-05121-0277" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0277</assert>
		<assert id="BR-BT-05131-0126" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0126</assert>
		<assert id="BR-BT-05141-0126" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0126</assert>
		<assert id="BR-BT-05141-0170" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0170</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '12']">
		<assert id="BR-BT-00727-0164" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0164</assert>
		<assert id="BR-BT-00728-0122" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0122</assert>
		<assert id="BR-BT-05071-0120" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0120</assert>
		<assert id="BR-BT-05071-0164" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0164</assert>
		<assert id="BR-BT-05101-0324" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0324</assert>
		<assert id="BR-BT-05101-0375" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0375</assert>
		<assert id="BR-BT-05101-0426" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0426</assert>
		<assert id="BR-BT-05121-0120" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0120</assert>
		<assert id="BR-BT-05121-0271" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0271</assert>
		<assert id="BR-BT-05131-0120" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0120</assert>
		<assert id="BR-BT-05141-0120" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0120</assert>
		<assert id="BR-BT-05141-0164" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0164</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '13']">
		<assert id="BR-BT-00727-0165" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0165</assert>
		<assert id="BR-BT-00728-0123" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0123</assert>
		<assert id="BR-BT-05071-0121" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0121</assert>
		<assert id="BR-BT-05071-0165" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0165</assert>
		<assert id="BR-BT-05101-0325" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0325</assert>
		<assert id="BR-BT-05101-0376" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0376</assert>
		<assert id="BR-BT-05101-0427" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0427</assert>
		<assert id="BR-BT-05121-0121" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0121</assert>
		<assert id="BR-BT-05121-0272" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0272</assert>
		<assert id="BR-BT-05131-0121" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0121</assert>
		<assert id="BR-BT-05141-0121" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0121</assert>
		<assert id="BR-BT-05141-0165" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0165</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '14']">
		<assert id="BR-BT-00727-0166" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0166</assert>
		<assert id="BR-BT-00728-0124" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0124</assert>
		<assert id="BR-BT-05071-0122" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0122</assert>
		<assert id="BR-BT-05071-0166" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0166</assert>
		<assert id="BR-BT-05101-0326" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0326</assert>
		<assert id="BR-BT-05101-0377" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0377</assert>
		<assert id="BR-BT-05101-0428" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0428</assert>
		<assert id="BR-BT-05121-0122" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0122</assert>
		<assert id="BR-BT-05121-0273" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0273</assert>
		<assert id="BR-BT-05131-0122" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0122</assert>
		<assert id="BR-BT-05141-0122" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0122</assert>
		<assert id="BR-BT-05141-0166" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0166</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '10']">
		<assert id="BR-BT-00727-0161" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0161</assert>
		<assert id="BR-BT-00728-0119" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0119</assert>
		<assert id="BR-BT-05071-0117" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0117</assert>
		<assert id="BR-BT-05071-0161" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0161</assert>
		<assert id="BR-BT-05101-0321" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0321</assert>
		<assert id="BR-BT-05101-0372" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0372</assert>
		<assert id="BR-BT-05101-0423" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0423</assert>
		<assert id="BR-BT-05121-0117" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0117</assert>
		<assert id="BR-BT-05121-0268" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0268</assert>
		<assert id="BR-BT-05131-0117" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0117</assert>
		<assert id="BR-BT-05141-0117" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0117</assert>
		<assert id="BR-BT-05141-0161" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0161</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '11']">
		<assert id="BR-BT-00727-0162" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0162</assert>
		<assert id="BR-BT-00728-0120" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0120</assert>
		<assert id="BR-BT-05071-0118" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0118</assert>
		<assert id="BR-BT-05071-0162" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0162</assert>
		<assert id="BR-BT-05101-0322" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0322</assert>
		<assert id="BR-BT-05101-0373" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0373</assert>
		<assert id="BR-BT-05101-0424" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0424</assert>
		<assert id="BR-BT-05121-0118" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0118</assert>
		<assert id="BR-BT-05121-0269" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0269</assert>
		<assert id="BR-BT-05131-0118" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0118</assert>
		<assert id="BR-BT-05141-0118" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0118</assert>
		<assert id="BR-BT-05141-0162" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0162</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '7']">
		<assert id="BR-BT-00727-0158" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0158</assert>
		<assert id="BR-BT-00728-0116" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0116</assert>
		<assert id="BR-BT-05071-0114" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0114</assert>
		<assert id="BR-BT-05071-0158" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0158</assert>
		<assert id="BR-BT-05101-0318" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0318</assert>
		<assert id="BR-BT-05101-0369" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0369</assert>
		<assert id="BR-BT-05101-0420" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0420</assert>
		<assert id="BR-BT-05121-0114" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0114</assert>
		<assert id="BR-BT-05121-0265" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0265</assert>
		<assert id="BR-BT-05131-0114" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0114</assert>
		<assert id="BR-BT-05141-0114" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0114</assert>
		<assert id="BR-BT-05141-0158" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0158</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '8']">
		<assert id="BR-BT-00727-0159" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0159</assert>
		<assert id="BR-BT-00728-0117" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0117</assert>
		<assert id="BR-BT-05071-0115" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0115</assert>
		<assert id="BR-BT-05071-0159" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0159</assert>
		<assert id="BR-BT-05101-0319" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0319</assert>
		<assert id="BR-BT-05101-0370" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0370</assert>
		<assert id="BR-BT-05101-0421" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0421</assert>
		<assert id="BR-BT-05121-0115" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0115</assert>
		<assert id="BR-BT-05121-0266" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0266</assert>
		<assert id="BR-BT-05131-0115" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0115</assert>
		<assert id="BR-BT-05141-0115" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0115</assert>
		<assert id="BR-BT-05141-0159" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0159</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '9']">
		<assert id="BR-BT-00727-0160" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0160</assert>
		<assert id="BR-BT-00728-0118" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0118</assert>
		<assert id="BR-BT-05071-0116" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0116</assert>
		<assert id="BR-BT-05071-0160" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0160</assert>
		<assert id="BR-BT-05101-0320" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0320</assert>
		<assert id="BR-BT-05101-0371" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0371</assert>
		<assert id="BR-BT-05101-0422" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0422</assert>
		<assert id="BR-BT-05121-0116" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0116</assert>
		<assert id="BR-BT-05121-0267" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0267</assert>
		<assert id="BR-BT-05131-0116" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0116</assert>
		<assert id="BR-BT-05141-0116" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0116</assert>
		<assert id="BR-BT-05141-0160" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0160</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '15']">
		<assert id="BR-BT-00727-0167" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0167</assert>
		<assert id="BR-BT-00728-0125" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0125</assert>
		<assert id="BR-BT-05071-0123" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0123</assert>
		<assert id="BR-BT-05071-0167" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0167</assert>
		<assert id="BR-BT-05101-0327" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0327</assert>
		<assert id="BR-BT-05101-0378" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0378</assert>
		<assert id="BR-BT-05101-0429" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0429</assert>
		<assert id="BR-BT-05121-0123" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0123</assert>
		<assert id="BR-BT-05121-0274" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0274</assert>
		<assert id="BR-BT-05131-0123" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0123</assert>
		<assert id="BR-BT-05141-0123" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0123</assert>
		<assert id="BR-BT-05141-0167" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0167</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '22']">
		<assert id="BR-BT-00727-0174" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0174</assert>
		<assert id="BR-BT-00728-0133" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0133</assert>
		<assert id="BR-BT-05071-0131" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0131</assert>
		<assert id="BR-BT-05071-0174" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0174</assert>
		<assert id="BR-BT-05101-0335" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0335</assert>
		<assert id="BR-BT-05101-0386" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0386</assert>
		<assert id="BR-BT-05101-0437" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0437</assert>
		<assert id="BR-BT-05121-0131" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0131</assert>
		<assert id="BR-BT-05121-0282" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0282</assert>
		<assert id="BR-BT-05131-0131" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0131</assert>
		<assert id="BR-BT-05141-0131" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0131</assert>
		<assert id="BR-BT-05141-0174" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0174</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '25']">
		<assert id="BR-BT-00728-0136" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0136</assert>
		<assert id="BR-BT-05071-0134" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0134</assert>
		<assert id="BR-BT-05101-0338" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0338</assert>
		<assert id="BR-BT-05101-0389" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0389</assert>
		<assert id="BR-BT-05101-0440" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0440</assert>
		<assert id="BR-BT-05121-0134" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0134</assert>
		<assert id="BR-BT-05121-0285" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0285</assert>
		<assert id="BR-BT-05131-0134" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0134</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '26']">
		<assert id="BR-BT-00728-0137" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0137</assert>
		<assert id="BR-BT-05071-0135" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0135</assert>
		<assert id="BR-BT-05101-0339" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0339</assert>
		<assert id="BR-BT-05101-0390" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0390</assert>
		<assert id="BR-BT-05101-0441" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0441</assert>
		<assert id="BR-BT-05121-0135" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0135</assert>
		<assert id="BR-BT-05121-0286" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0286</assert>
		<assert id="BR-BT-05131-0135" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0135</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '28']">
		<assert id="BR-BT-00728-0139" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0139</assert>
		<assert id="BR-BT-05071-0137" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0137</assert>
		<assert id="BR-BT-05101-0341" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0341</assert>
		<assert id="BR-BT-05101-0392" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0392</assert>
		<assert id="BR-BT-05101-0443" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0443</assert>
		<assert id="BR-BT-05121-0137" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0137</assert>
		<assert id="BR-BT-05121-0288" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0288</assert>
		<assert id="BR-BT-05131-0137" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0137</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '27']">
		<assert id="BR-BT-00728-0138" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0138</assert>
		<assert id="BR-BT-05071-0136" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0136</assert>
		<assert id="BR-BT-05101-0340" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0340</assert>
		<assert id="BR-BT-05101-0391" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0391</assert>
		<assert id="BR-BT-05101-0442" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0442</assert>
		<assert id="BR-BT-05121-0136" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0136</assert>
		<assert id="BR-BT-05121-0287" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0287</assert>
		<assert id="BR-BT-05131-0136" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0136</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = 'T01']">
		<assert id="BR-BT-00727-0157" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0157</assert>
		<assert id="BR-BT-05071-0113" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0113</assert>
		<assert id="BR-BT-05071-0157" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0157</assert>
		<assert id="BR-BT-05101-0317" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0317</assert>
		<assert id="BR-BT-05101-0368" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0368</assert>
		<assert id="BR-BT-05101-0419" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0419</assert>
		<assert id="BR-BT-05141-0113" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0113</assert>
		<assert id="BR-BT-05141-0157" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0157</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = 'T02']">
		<assert id="BR-BT-00727-0181" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0181</assert>
		<assert id="BR-BT-05071-0143" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0143</assert>
		<assert id="BR-BT-05071-0181" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0181</assert>
		<assert id="BR-BT-05101-0347" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0347</assert>
		<assert id="BR-BT-05101-0398" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0398</assert>
		<assert id="BR-BT-05101-0449" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0449</assert>
		<assert id="BR-BT-05141-0143" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0143</assert>
		<assert id="BR-BT-05141-0181" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0181</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00727-0163" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0163</assert>
		<assert id="BR-BT-00728-0121" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0121</assert>
		<assert id="BR-BT-05071-0119" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0119</assert>
		<assert id="BR-BT-05071-0163" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0163</assert>
		<assert id="BR-BT-05101-0323" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0323</assert>
		<assert id="BR-BT-05101-0374" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0374</assert>
		<assert id="BR-BT-05101-0425" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0425</assert>
		<assert id="BR-BT-05121-0119" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0119</assert>
		<assert id="BR-BT-05121-0270" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0270</assert>
		<assert id="BR-BT-05131-0119" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0119</assert>
		<assert id="BR-BT-05141-0119" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0119</assert>
		<assert id="BR-BT-05141-0163" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0163</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '36']">
		<assert id="BR-BT-01251-0095" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0095</assert>
		<assert id="BR-BT-01251-0125" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '37']">
		<assert id="BR-BT-01251-0096" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0096</assert>
		<assert id="BR-BT-01251-0126" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '33']">
		<assert id="BR-BT-01251-0092" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0092</assert>
		<assert id="BR-BT-01251-0122" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '34']">
		<assert id="BR-BT-01251-0093" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0093</assert>
		<assert id="BR-BT-01251-0123" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '35']">
		<assert id="BR-BT-01251-0094" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0094</assert>
		<assert id="BR-BT-01251-0124" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '29']">
		<assert id="BR-BT-01251-0086" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0086</assert>
		<assert id="BR-BT-01251-0117" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '30']">
		<assert id="BR-BT-01251-0087" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0087</assert>
		<assert id="BR-BT-01251-0118" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '32']">
		<assert id="BR-BT-00115-0090" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) &gt; 0 or not(/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0090</assert>
		<assert id="BR-BT-00115-0105" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) = 0 or (/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0105</assert>
		<assert id="BR-BT-01251-0089" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0089</assert>
		<assert id="BR-BT-01251-0120" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '31']">
		<assert id="BR-BT-01251-0088" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0088</assert>
		<assert id="BR-BT-01251-0119" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '23']">
		<assert id="BR-BT-00052-0030" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0030</assert>
		<assert id="BR-BT-00131-0030" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0030</assert>
		<assert id="BR-BT-00131-0082" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0082</assert>
		<assert id="BR-BT-00131-0113" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0113</assert>
		<assert id="BR-BT-00131-0123" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0123</assert>
		<assert id="BR-BT-01251-0080" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0080</assert>
		<assert id="BR-BT-01251-0111" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0111</assert>
		<assert id="BR-BT-01311-0030" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0030</assert>
		<assert id="BR-BT-01311-0082" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0082</assert>
		<assert id="BR-BT-01311-0113" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0113</assert>
		<assert id="BR-BT-01311-0123" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '24']">
		<assert id="BR-BT-00052-0031" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0031</assert>
		<assert id="BR-BT-00131-0031" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0031</assert>
		<assert id="BR-BT-00131-0083" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0083</assert>
		<assert id="BR-BT-00131-0114" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0114</assert>
		<assert id="BR-BT-00131-0124" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0124</assert>
		<assert id="BR-BT-01251-0081" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0081</assert>
		<assert id="BR-BT-01251-0112" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0112</assert>
		<assert id="BR-BT-01311-0031" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0031</assert>
		<assert id="BR-BT-01311-0083" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0083</assert>
		<assert id="BR-BT-01311-0114" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0114</assert>
		<assert id="BR-BT-01311-0124" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '20']">
		<assert id="BR-BT-00052-0027" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0027</assert>
		<assert id="BR-BT-00131-0027" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0027</assert>
		<assert id="BR-BT-00131-0079" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0079</assert>
		<assert id="BR-BT-00131-0110" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0110</assert>
		<assert id="BR-BT-00131-0120" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0120</assert>
		<assert id="BR-BT-01251-0077" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0077</assert>
		<assert id="BR-BT-01251-0108" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0108</assert>
		<assert id="BR-BT-01311-0027" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0027</assert>
		<assert id="BR-BT-01311-0079" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0079</assert>
		<assert id="BR-BT-01311-0110" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0110</assert>
		<assert id="BR-BT-01311-0120" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '21']">
		<assert id="BR-BT-00052-0028" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0028</assert>
		<assert id="BR-BT-00131-0028" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0028</assert>
		<assert id="BR-BT-00131-0080" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0080</assert>
		<assert id="BR-BT-00131-0111" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0111</assert>
		<assert id="BR-BT-00131-0121" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0121</assert>
		<assert id="BR-BT-01251-0078" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0078</assert>
		<assert id="BR-BT-01251-0109" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0109</assert>
		<assert id="BR-BT-01311-0028" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0028</assert>
		<assert id="BR-BT-01311-0080" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0080</assert>
		<assert id="BR-BT-01311-0111" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0111</assert>
		<assert id="BR-BT-01311-0121" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0121</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '16']">
		<assert id="BR-BT-00052-0022" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call'))">rule|message|BR-BT-00052-0022</assert>
		<assert id="BR-BT-00052-0052" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0052</assert>
		<assert id="BR-BT-00131-0022" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0022</assert>
		<assert id="BR-BT-00131-0074" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0074</assert>
		<assert id="BR-BT-00131-0105" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0105</assert>
		<assert id="BR-BT-00131-0115" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0115</assert>
		<assert id="BR-BT-01251-0072" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0072</assert>
		<assert id="BR-BT-01251-0103" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0103</assert>
		<assert id="BR-BT-01311-0022" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0022</assert>
		<assert id="BR-BT-01311-0074" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0074</assert>
		<assert id="BR-BT-01311-0105" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0105</assert>
		<assert id="BR-BT-01311-0115" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0115</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '17']">
		<assert id="BR-BT-00052-0023" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0023</assert>
		<assert id="BR-BT-00131-0023" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0023</assert>
		<assert id="BR-BT-00131-0075" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0075</assert>
		<assert id="BR-BT-00131-0106" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0106</assert>
		<assert id="BR-BT-00131-0116" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0116</assert>
		<assert id="BR-BT-01251-0073" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0073</assert>
		<assert id="BR-BT-01251-0104" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0104</assert>
		<assert id="BR-BT-01311-0023" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0023</assert>
		<assert id="BR-BT-01311-0075" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0075</assert>
		<assert id="BR-BT-01311-0106" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0106</assert>
		<assert id="BR-BT-01311-0116" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '19']">
		<assert id="BR-BT-00115-0076" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) &gt; 0 or not(/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0076</assert>
		<assert id="BR-BT-00115-0103" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) = 0 or (/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0103</assert>
		<assert id="BR-BT-00131-0077" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0077</assert>
		<assert id="BR-BT-00131-0108" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0108</assert>
		<assert id="BR-BT-00131-0118" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0118</assert>
		<assert id="BR-BT-01251-0075" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0075</assert>
		<assert id="BR-BT-01251-0106" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0106</assert>
		<assert id="BR-BT-01311-0077" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0077</assert>
		<assert id="BR-BT-01311-0108" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0108</assert>
		<assert id="BR-BT-01311-0118" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '18']">
		<assert id="BR-BT-00052-0024" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0024</assert>
		<assert id="BR-BT-00131-0024" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0024</assert>
		<assert id="BR-BT-00131-0076" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0076</assert>
		<assert id="BR-BT-00131-0107" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0107</assert>
		<assert id="BR-BT-00131-0117" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0117</assert>
		<assert id="BR-BT-01251-0074" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0074</assert>
		<assert id="BR-BT-01251-0105" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0105</assert>
		<assert id="BR-BT-01311-0024" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0024</assert>
		<assert id="BR-BT-01311-0076" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0076</assert>
		<assert id="BR-BT-01311-0107" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0107</assert>
		<assert id="BR-BT-01311-0117" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '12']">
		<assert id="BR-BT-00052-0018" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0018</assert>
		<assert id="BR-BT-01251-0068" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '13']">
		<assert id="BR-BT-00052-0019" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0019</assert>
		<assert id="BR-BT-01251-0069" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '14']">
		<assert id="BR-BT-00052-0020" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0020</assert>
		<assert id="BR-BT-01251-0070" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '10']">
		<assert id="BR-BT-00052-0015" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0015</assert>
		<assert id="BR-BT-01251-0065" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '11']">
		<assert id="BR-BT-00052-0016" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0016</assert>
		<assert id="BR-BT-01251-0066" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '7']">
		<assert id="BR-BT-00052-0012" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0012</assert>
		<assert id="BR-BT-00131-0012" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0012</assert>
		<assert id="BR-BT-00131-0064" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0064</assert>
		<assert id="BR-BT-00131-0125" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0125</assert>
		<assert id="BR-BT-01251-0062" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0062</assert>
		<assert id="BR-BT-01311-0012" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0012</assert>
		<assert id="BR-BT-01311-0064" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0064</assert>
		<assert id="BR-BT-01311-0125" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '8']">
		<assert id="BR-BT-00052-0013" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0013</assert>
		<assert id="BR-BT-01251-0063" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '9']">
		<assert id="BR-BT-00052-0014" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0014</assert>
		<assert id="BR-BT-00131-0014" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0014</assert>
		<assert id="BR-BT-00131-0066" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0066</assert>
		<assert id="BR-BT-00131-0126" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0126</assert>
		<assert id="BR-BT-01251-0064" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0064</assert>
		<assert id="BR-BT-01311-0014" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0014</assert>
		<assert id="BR-BT-01311-0066" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0066</assert>
		<assert id="BR-BT-01311-0126" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '15']">
		<assert id="BR-BT-01251-0071" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '22']">
		<assert id="BR-BT-00052-0029" role="ERROR" test="count(cbc:CandidateReductionConstraintIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00052-0029</assert>
		<assert id="BR-BT-00131-0029" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open' or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-00131-0029</assert>
		<assert id="BR-BT-00131-0081" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) &gt; 0 or not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0081</assert>
		<assert id="BR-BT-00131-0112" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) = 0 or (not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-00131-0112</assert>
		<assert id="BR-BT-00131-0122" role="ERROR" test="count(cac:TenderSubmissionDeadlinePeriod/cbc:EndTime) = 0 or (cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00131-0122</assert>
		<assert id="BR-BT-01251-0079" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0079</assert>
		<assert id="BR-BT-01251-0110" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0110</assert>
		<assert id="BR-BT-01311-0029" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) &gt; 0 or not((/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-mult' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])) or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='oth-single' and not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())])))">rule|message|BR-BT-01311-0029</assert>
		<assert id="BR-BT-01311-0081" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) &gt; 0 or not(cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0081</assert>
		<assert id="BR-BT-01311-0112" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndDate) = 0 or (not(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[normalize-space(text())]))">rule|message|BR-BT-01311-0112</assert>
		<assert id="BR-BT-01311-0122" role="ERROR" test="count(cac:ParticipationRequestReceptionPeriod/cbc:EndTime) = 0 or (cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-01311-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '25']">
		<assert id="BR-BT-01251-0082" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0082</assert>
		<assert id="BR-BT-01251-0113" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0113</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '26']">
		<assert id="BR-BT-01251-0083" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0083</assert>
		<assert id="BR-BT-01251-0114" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '28']">
		<assert id="BR-BT-00115-0086" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) &gt; 0 or not(/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0086</assert>
		<assert id="BR-BT-00115-0104" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) = 0 or (/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0104</assert>
		<assert id="BR-BT-01251-0085" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0085</assert>
		<assert id="BR-BT-01251-0116" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess[$noticeSubType = '27']">
		<assert id="BR-BT-01251-0084" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0084</assert>
		<assert id="BR-BT-01251-0115" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) = 0 or (cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0115</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '23']">
		<assert id="BR-BT-00050-0030" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0030</assert>
		<assert id="BR-BT-00051-0030" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0030</assert>
		<assert id="BR-BT-00051-0067" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0067</assert>
		<assert id="BR-BT-00661-0030" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '24']">
		<assert id="BR-BT-00050-0031" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0031</assert>
		<assert id="BR-BT-00051-0031" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0031</assert>
		<assert id="BR-BT-00051-0068" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0068</assert>
		<assert id="BR-BT-00661-0031" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '20']">
		<assert id="BR-BT-00050-0027" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0027</assert>
		<assert id="BR-BT-00051-0027" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0027</assert>
		<assert id="BR-BT-00051-0064" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0064</assert>
		<assert id="BR-BT-00661-0027" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '21']">
		<assert id="BR-BT-00050-0028" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0028</assert>
		<assert id="BR-BT-00051-0028" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0028</assert>
		<assert id="BR-BT-00051-0065" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0065</assert>
		<assert id="BR-BT-00661-0028" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '16']">
		<assert id="BR-BT-00050-0022" role="ERROR" test="count(cbc:MinimumQuantity) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0022</assert>
		<assert id="BR-BT-00050-0052" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0052</assert>
		<assert id="BR-BT-00051-0022" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0022</assert>
		<assert id="BR-BT-00051-0052" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0052</assert>
		<assert id="BR-BT-00661-0022" role="ERROR" test="count(cbc:LimitationDescription) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0022</assert>
		<assert id="BR-BT-00661-0052" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0052</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '17']">
		<assert id="BR-BT-00050-0023" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0023</assert>
		<assert id="BR-BT-00051-0023" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0023</assert>
		<assert id="BR-BT-00051-0061" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0061</assert>
		<assert id="BR-BT-00661-0023" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '18']">
		<assert id="BR-BT-00050-0024" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0024</assert>
		<assert id="BR-BT-00051-0024" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0024</assert>
		<assert id="BR-BT-00051-0062" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0062</assert>
		<assert id="BR-BT-00661-0024" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '12']">
		<assert id="BR-BT-00050-0018" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0018</assert>
		<assert id="BR-BT-00051-0018" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0018</assert>
		<assert id="BR-BT-00051-0058" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0058</assert>
		<assert id="BR-BT-00661-0018" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '13']">
		<assert id="BR-BT-00050-0019" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0019</assert>
		<assert id="BR-BT-00051-0019" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0019</assert>
		<assert id="BR-BT-00051-0059" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0059</assert>
		<assert id="BR-BT-00661-0019" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '14']">
		<assert id="BR-BT-00050-0020" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0020</assert>
		<assert id="BR-BT-00051-0020" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0020</assert>
		<assert id="BR-BT-00051-0060" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0060</assert>
		<assert id="BR-BT-00661-0020" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '10']">
		<assert id="BR-BT-00050-0015" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0015</assert>
		<assert id="BR-BT-00051-0015" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0015</assert>
		<assert id="BR-BT-00051-0056" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0056</assert>
		<assert id="BR-BT-00661-0015" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '11']">
		<assert id="BR-BT-00050-0016" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0016</assert>
		<assert id="BR-BT-00051-0016" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0016</assert>
		<assert id="BR-BT-00051-0057" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0057</assert>
		<assert id="BR-BT-00661-0016" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '7']">
		<assert id="BR-BT-00050-0012" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0012</assert>
		<assert id="BR-BT-00051-0012" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0012</assert>
		<assert id="BR-BT-00051-0053" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0053</assert>
		<assert id="BR-BT-00661-0012" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '8']">
		<assert id="BR-BT-00050-0013" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0013</assert>
		<assert id="BR-BT-00051-0013" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0013</assert>
		<assert id="BR-BT-00051-0054" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0054</assert>
		<assert id="BR-BT-00661-0013" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '9']">
		<assert id="BR-BT-00050-0014" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0014</assert>
		<assert id="BR-BT-00051-0014" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0014</assert>
		<assert id="BR-BT-00051-0055" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0055</assert>
		<assert id="BR-BT-00661-0014" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList[$noticeSubType = '22']">
		<assert id="BR-BT-00050-0029" role="ERROR" test="count(cbc:MinimumQuantity) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00050-0029</assert>
		<assert id="BR-BT-00051-0029" role="ERROR" test="count(cbc:MaximumQuantity) = 0 or (cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0029</assert>
		<assert id="BR-BT-00051-0066" role="ERROR" test="count(cbc:MaximumQuantity) &gt; 0 or not(cbc:LimitationDescription/normalize-space(text())='true')">rule|message|BR-BT-00051-0066</assert>
		<assert id="BR-BT-00661-0029" role="ERROR" test="count(cbc:LimitationDescription) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='open' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='oth-single' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call')">rule|message|BR-BT-00661-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:FrameworkAgreement[$noticeSubType = '16']">
		<assert id="BR-BT-00113-0022" role="ERROR" test="count(cbc:MaximumOperatorQuantity) &gt; 0 or not(../cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00113-0022</assert>
		<assert id="BR-BT-00113-0052" role="ERROR" test="count(cbc:MaximumOperatorQuantity) = 0 or (../cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00113-0052</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:FrameworkAgreement[$noticeSubType = '18']">
		<assert id="BR-BT-00113-0024" role="ERROR" test="count(cbc:MaximumOperatorQuantity) &gt; 0 or not(../cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00113-0024</assert>
		<assert id="BR-BT-00113-0053" role="ERROR" test="count(cbc:MaximumOperatorQuantity) = 0 or (../cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00113-0053</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent[$noticeSubType = '16']">
		<assert id="BR-BT-00132-0022" role="ERROR" test="count(cbc:OccurrenceDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0022</assert>
		<assert id="BR-BT-00132-0074" role="ERROR" test="count(cbc:OccurrenceTime) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0074</assert>
		<assert id="BR-BT-00132-0105" role="ERROR" test="count(cbc:OccurrenceDate) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0105</assert>
		<assert id="BR-BT-00132-0107" role="ERROR" test="count(cbc:OccurrenceTime) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0107</assert>
		<assert id="BR-BT-00133-0022" role="ERROR" test="count(cac:OccurenceLocation/cbc:Description) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00133-0022</assert>
		<assert id="BR-BT-00133-0054" role="ERROR" test="count(cac:OccurenceLocation/cbc:Description) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00133-0054</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent[$noticeSubType = '17']">
		<assert id="BR-BT-00132-0023" role="ERROR" test="count(cbc:OccurrenceDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0023</assert>
		<assert id="BR-BT-00132-0075" role="ERROR" test="count(cbc:OccurrenceTime) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0075</assert>
		<assert id="BR-BT-00132-0106" role="ERROR" test="count(cbc:OccurrenceDate) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0106</assert>
		<assert id="BR-BT-00132-0108" role="ERROR" test="count(cbc:OccurrenceTime) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00132-0108</assert>
		<assert id="BR-BT-00133-0023" role="ERROR" test="count(cac:OccurenceLocation/cbc:Description) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00133-0023</assert>
		<assert id="BR-BT-00133-0055" role="ERROR" test="count(cac:OccurenceLocation/cbc:Description) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00133-0055</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod[$noticeSubType = '20']">
		<assert id="BR-BT-00630-0027" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00630-0027</assert>
		<assert id="BR-BT-00630-0079" role="ERROR" test="count(cbc:EndTime) &gt; 0 or not(cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00630-0079</assert>
		<assert id="BR-BT-00630-0105" role="ERROR" test="count(cbc:EndDate) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00630-0105</assert>
		<assert id="BR-BT-00630-0107" role="ERROR" test="count(cbc:EndTime) = 0 or (cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00630-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod[$noticeSubType = '21']">
		<assert id="BR-BT-00630-0028" role="ERROR" test="count(cbc:EndDate) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00630-0028</assert>
		<assert id="BR-BT-00630-0080" role="ERROR" test="count(cbc:EndTime) &gt; 0 or not(cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00630-0080</assert>
		<assert id="BR-BT-00630-0106" role="ERROR" test="count(cbc:EndDate) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00630-0106</assert>
		<assert id="BR-BT-00630-0108" role="ERROR" test="count(cbc:EndTime) = 0 or (cbc:EndDate/normalize-space(text())!='')">rule|message|BR-BT-00630-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '23']">
		<assert id="BR-BT-00708-0125" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0125</assert>
		<assert id="BR-BT-00737-0125" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '24']">
		<assert id="BR-BT-00708-0126" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0126</assert>
		<assert id="BR-BT-00737-0126" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '20']">
		<assert id="BR-BT-00708-0122" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0122</assert>
		<assert id="BR-BT-00737-0122" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '21']">
		<assert id="BR-BT-00708-0123" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0123</assert>
		<assert id="BR-BT-00737-0123" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '16']">
		<assert id="BR-BT-00098-0022" role="ERROR" test="count(cac:TenderValidityPeriod/cbc:DurationMeasure) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00098-0022</assert>
		<assert id="BR-BT-00098-0052" role="ERROR" test="count(cac:TenderValidityPeriod/cbc:DurationMeasure) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00098-0052</assert>
		<assert id="BR-BT-00708-0117" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0117</assert>
		<assert id="BR-BT-00737-0117" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0117</assert>
		<assert id="BR-OPT-00301-0980" role="ERROR" test="count(cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(../cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='' or ../cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-OPT-00301-0980</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '17']">
		<assert id="BR-BT-00075-0023" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) &gt; 0 or not(cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0023</assert>
		<assert id="BR-BT-00075-0054" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) = 0 or (cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0054</assert>
		<assert id="BR-BT-00076-0023" role="ERROR" test="count(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalForm) &gt; 0 or not(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalFormCode/normalize-space(text())='true')">rule|message|BR-BT-00076-0023</assert>
		<assert id="BR-BT-00076-0054" role="ERROR" test="count(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalForm) = 0 or (cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalFormCode/normalize-space(text())='true')">rule|message|BR-BT-00076-0054</assert>
		<assert id="BR-BT-00079-0023" role="ERROR" test="count(cbc:RequiredCurriculaCode) &gt; 0 or not(../cac:ProcurementProject/cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())='services')">rule|message|BR-BT-00079-0023</assert>
		<assert id="BR-BT-00079-0053" role="ERROR" test="count(cbc:RequiredCurriculaCode) = 0 or (../cac:ProcurementProject/cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())='services')">rule|message|BR-BT-00079-0053</assert>
		<assert id="BR-BT-00098-0023" role="ERROR" test="count(cac:TenderValidityPeriod/cbc:DurationMeasure) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00098-0023</assert>
		<assert id="BR-BT-00098-0053" role="ERROR" test="count(cac:TenderValidityPeriod/cbc:DurationMeasure) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='open')">rule|message|BR-BT-00098-0053</assert>
		<assert id="BR-BT-00708-0118" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0118</assert>
		<assert id="BR-BT-00737-0118" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '19']">
		<assert id="BR-BT-00708-0120" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0120</assert>
		<assert id="BR-BT-00737-0120" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0120</assert>
		<assert id="BR-OPT-00301-0983" role="ERROR" test="count(cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(../cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='' or ../cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-OPT-00301-0983</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '18']">
		<assert id="BR-BT-00075-0024" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) &gt; 0 or not(cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0024</assert>
		<assert id="BR-BT-00075-0055" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) = 0 or (cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0055</assert>
		<assert id="BR-BT-00076-0024" role="ERROR" test="count(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalForm) &gt; 0 or not(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalFormCode/normalize-space(text())='true')">rule|message|BR-BT-00076-0024</assert>
		<assert id="BR-BT-00076-0055" role="ERROR" test="count(cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalForm) = 0 or (cac:TendererQualificationRequest[not(cac:SpecificTendererRequirement)]/cbc:CompanyLegalFormCode/normalize-space(text())='true')">rule|message|BR-BT-00076-0055</assert>
		<assert id="BR-BT-00708-0119" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0119</assert>
		<assert id="BR-BT-00737-0119" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '12']">
		<assert id="BR-BT-00708-0113" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0113</assert>
		<assert id="BR-BT-00737-0113" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0113</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '13']">
		<assert id="BR-BT-00708-0114" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0114</assert>
		<assert id="BR-BT-00737-0114" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '14']">
		<assert id="BR-BT-00708-0115" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0115</assert>
		<assert id="BR-BT-00737-0115" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0115</assert>
		<assert id="BR-OPT-00301-0978" role="ERROR" test="count(cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(../cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/normalize-space(text())!='' or ../cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate/normalize-space(text())!='')">rule|message|BR-OPT-00301-0978</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '10']">
		<assert id="BR-BT-00708-0111" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0111</assert>
		<assert id="BR-BT-00737-0111" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '11']">
		<assert id="BR-BT-00708-0112" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0112</assert>
		<assert id="BR-BT-00737-0112" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0112</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '7']">
		<assert id="BR-BT-00708-0108" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0108</assert>
		<assert id="BR-BT-00737-0108" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '8']">
		<assert id="BR-BT-00708-0109" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0109</assert>
		<assert id="BR-BT-00737-0109" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0109</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '9']">
		<assert id="BR-BT-00708-0110" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0110</assert>
		<assert id="BR-BT-00737-0110" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0110</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '15']">
		<assert id="BR-BT-00708-0116" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0116</assert>
		<assert id="BR-BT-00737-0116" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms[$noticeSubType = '22']">
		<assert id="BR-BT-00075-0029" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) &gt; 0 or not(cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0029</assert>
		<assert id="BR-BT-00075-0056" role="ERROR" test="count(cac:RequiredFinancialGuarantee[cbc:GuaranteeTypeCode/text()='true']/cbc:Description) = 0 or (cac:RequiredFinancialGuarantee/cbc:GuaranteeTypeCode[@listName='tender-guarantee-required']/normalize-space(text())='true')">rule|message|BR-BT-00075-0056</assert>
		<assert id="BR-BT-00708-0124" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0124</assert>
		<assert id="BR-BT-00737-0124" role="ERROR" test="count(cac:CallForTendersDocumentReference/cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cac:CallForTendersDocumentReference/cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AllowedSubcontractTerms[$noticeSubType = '18']">
		<assert id="BR-BT-00064-0024" role="ERROR" test="count(cbc:MinimumPercent) &gt; 0 or not(cbc:SubcontractingConditionsCode[@listName='subcontracting-obligation']/normalize-space(text())='subc-min')">rule|message|BR-BT-00064-0024</assert>
		<assert id="BR-BT-00064-0053" role="ERROR" test="count(cbc:MinimumPercent) = 0 or (cbc:SubcontractingConditionsCode[@listName='subcontracting-obligation']/normalize-space(text())='subc-min')">rule|message|BR-BT-00064-0053</assert>
		<assert id="BR-BT-00729-0024" role="ERROR" test="count(cbc:MaximumPercent) &gt; 0 or not(cbc:SubcontractingConditionsCode[@listName='subcontracting-obligation']/normalize-space(text())='subc-min')">rule|message|BR-BT-00729-0024</assert>
		<assert id="BR-BT-00729-0053" role="ERROR" test="count(cbc:MaximumPercent) = 0 or (cbc:SubcontractingConditionsCode[@listName='subcontracting-obligation']/normalize-space(text())='subc-min')">rule|message|BR-BT-00729-0053</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '16']">
		<assert id="BR-OPT-00301-1130" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1130</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '17']">
		<assert id="BR-OPT-00301-1131" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1131</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '19']">
		<assert id="BR-OPT-00301-1133" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1133</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '14']">
		<assert id="BR-OPT-00301-1128" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1128</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '10']">
		<assert id="BR-OPT-00301-1123" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '7']">
		<assert id="BR-OPT-00301-1120" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = 'CEI']">
		<assert id="BR-OPT-00301-1125" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) = 0 or (cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-1125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms[$noticeSubType = '20']">
		<assert id="BR-BT-00120-0027" role="ERROR" test="count(cbc:NoFurtherNegotiationIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00120-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms[$noticeSubType = '16']">
		<assert id="BR-BT-00120-0022" role="ERROR" test="count(cbc:NoFurtherNegotiationIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00120-0022</assert>
		<assert id="BR-BT-00120-0052" role="ERROR" test="count(cbc:NoFurtherNegotiationIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())='neg-w-call')">rule|message|BR-BT-00120-0052</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '36']">
		<assert id="BR-BT-00543-0097" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '37']">
		<assert id="BR-BT-00543-0098" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '33']">
		<assert id="BR-BT-00543-0094" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '34']">
		<assert id="BR-BT-00543-0095" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '35']">
		<assert id="BR-BT-00543-0096" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '29']">
		<assert id="BR-BT-00543-0088" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '30']">
		<assert id="BR-BT-00543-0089" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '32']">
		<assert id="BR-BT-00543-0091" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0091</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '31']">
		<assert id="BR-BT-00543-0090" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0090</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '23']">
		<assert id="BR-BT-00543-0082" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '24']">
		<assert id="BR-BT-00543-0083" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '20']">
		<assert id="BR-BT-00543-0079" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '21']">
		<assert id="BR-BT-00543-0080" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '16']">
		<assert id="BR-BT-00543-0074" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '17']">
		<assert id="BR-BT-00543-0075" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '19']">
		<assert id="BR-BT-00543-0077" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0077</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '18']">
		<assert id="BR-BT-00543-0076" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '12']">
		<assert id="BR-BT-00543-0070" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '13']">
		<assert id="BR-BT-00543-0071" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '14']">
		<assert id="BR-BT-00543-0072" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '10']">
		<assert id="BR-BT-00543-0067" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '11']">
		<assert id="BR-BT-00543-0068" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '7']">
		<assert id="BR-BT-00543-0064" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '8']">
		<assert id="BR-BT-00543-0065" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '9']">
		<assert id="BR-BT-00543-0066" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '15']">
		<assert id="BR-BT-00543-0073" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '22']">
		<assert id="BR-BT-00543-0081" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '25']">
		<assert id="BR-BT-00543-0084" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '26']">
		<assert id="BR-BT-00543-0085" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '28']">
		<assert id="BR-BT-00543-0087" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '27']">
		<assert id="BR-BT-00543-0086" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '36']">
		<assert id="BR-BT-00539-0096" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0096</assert>
		<assert id="BR-BT-00734-0097" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '37']">
		<assert id="BR-BT-00539-0097" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0097</assert>
		<assert id="BR-BT-00734-0098" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '33']">
		<assert id="BR-BT-00539-0093" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0093</assert>
		<assert id="BR-BT-00734-0094" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '34']">
		<assert id="BR-BT-00539-0094" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0094</assert>
		<assert id="BR-BT-00734-0095" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '35']">
		<assert id="BR-BT-00539-0095" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0095</assert>
		<assert id="BR-BT-00734-0096" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '29']">
		<assert id="BR-BT-00539-0087" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0087</assert>
		<assert id="BR-BT-00539-0190" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0190</assert>
		<assert id="BR-BT-00734-0088" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '30']">
		<assert id="BR-BT-00539-0088" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0088</assert>
		<assert id="BR-BT-00734-0089" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '32']">
		<assert id="BR-BT-00539-0090" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0090</assert>
		<assert id="BR-BT-00539-0193" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0193</assert>
		<assert id="BR-BT-00734-0091" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0091</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '31']">
		<assert id="BR-BT-00539-0089" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0089</assert>
		<assert id="BR-BT-00539-0192" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0192</assert>
		<assert id="BR-BT-00734-0090" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0090</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '23']">
		<assert id="BR-BT-00539-0081" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0081</assert>
		<assert id="BR-BT-00734-0082" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '24']">
		<assert id="BR-BT-00539-0082" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0082</assert>
		<assert id="BR-BT-00734-0083" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '20']">
		<assert id="BR-BT-00539-0078" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0078</assert>
		<assert id="BR-BT-00734-0079" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '21']">
		<assert id="BR-BT-00539-0079" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0079</assert>
		<assert id="BR-BT-00734-0080" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '16']">
		<assert id="BR-BT-00539-0073" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0073</assert>
		<assert id="BR-BT-00734-0074" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '17']">
		<assert id="BR-BT-00539-0074" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0074</assert>
		<assert id="BR-BT-00734-0075" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '19']">
		<assert id="BR-BT-00539-0076" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0076</assert>
		<assert id="BR-BT-00734-0077" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0077</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '18']">
		<assert id="BR-BT-00539-0075" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0075</assert>
		<assert id="BR-BT-00734-0076" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '12']">
		<assert id="BR-BT-00539-0069" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0069</assert>
		<assert id="BR-BT-00734-0070" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '13']">
		<assert id="BR-BT-00539-0070" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0070</assert>
		<assert id="BR-BT-00734-0071" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '14']">
		<assert id="BR-BT-00539-0071" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0071</assert>
		<assert id="BR-BT-00734-0072" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '10']">
		<assert id="BR-BT-00539-0066" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0066</assert>
		<assert id="BR-BT-00734-0067" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '11']">
		<assert id="BR-BT-00539-0067" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0067</assert>
		<assert id="BR-BT-00734-0068" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '7']">
		<assert id="BR-BT-00539-0063" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0063</assert>
		<assert id="BR-BT-00734-0064" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '8']">
		<assert id="BR-BT-00539-0064" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0064</assert>
		<assert id="BR-BT-00734-0065" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '9']">
		<assert id="BR-BT-00539-0065" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0065</assert>
		<assert id="BR-BT-00734-0066" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '15']">
		<assert id="BR-BT-00539-0072" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0072</assert>
		<assert id="BR-BT-00734-0073" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '22']">
		<assert id="BR-BT-00539-0080" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0080</assert>
		<assert id="BR-BT-00734-0081" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '25']">
		<assert id="BR-BT-00539-0083" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0083</assert>
		<assert id="BR-BT-00734-0084" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '26']">
		<assert id="BR-BT-00539-0084" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0084</assert>
		<assert id="BR-BT-00734-0085" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '28']">
		<assert id="BR-BT-00539-0086" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0086</assert>
		<assert id="BR-BT-00734-0087" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '27']">
		<assert id="BR-BT-00539-0085" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0085</assert>
		<assert id="BR-BT-00734-0086" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '36']">
		<assert id="BR-BT-00541-0096" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '37']">
		<assert id="BR-BT-00541-0097" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '33']">
		<assert id="BR-BT-00541-0093" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0093</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '34']">
		<assert id="BR-BT-00541-0094" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '35']">
		<assert id="BR-BT-00541-0095" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '29']">
		<assert id="BR-BT-00541-0087" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0087</assert>
		<assert id="BR-BT-00541-0188" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0188</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '30']">
		<assert id="BR-BT-00541-0088" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '32']">
		<assert id="BR-BT-00541-0090" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0090</assert>
		<assert id="BR-BT-00541-0191" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0191</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '31']">
		<assert id="BR-BT-00541-0089" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0089</assert>
		<assert id="BR-BT-00541-0190" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0190</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '23']">
		<assert id="BR-BT-00541-0081" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '24']">
		<assert id="BR-BT-00541-0082" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '20']">
		<assert id="BR-BT-00541-0078" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '21']">
		<assert id="BR-BT-00541-0079" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '16']">
		<assert id="BR-BT-00541-0073" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '17']">
		<assert id="BR-BT-00541-0074" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '19']">
		<assert id="BR-BT-00541-0076" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '18']">
		<assert id="BR-BT-00541-0075" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '12']">
		<assert id="BR-BT-00541-0069" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '13']">
		<assert id="BR-BT-00541-0070" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '14']">
		<assert id="BR-BT-00541-0071" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '10']">
		<assert id="BR-BT-00541-0066" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '11']">
		<assert id="BR-BT-00541-0067" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '7']">
		<assert id="BR-BT-00541-0063" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '8']">
		<assert id="BR-BT-00541-0064" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '9']">
		<assert id="BR-BT-00541-0065" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '15']">
		<assert id="BR-BT-00541-0072" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '22']">
		<assert id="BR-BT-00541-0080" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '25']">
		<assert id="BR-BT-00541-0083" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '26']">
		<assert id="BR-BT-00541-0084" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '28']">
		<assert id="BR-BT-00541-0086" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '27']">
		<assert id="BR-BT-00541-0085" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '36']">
		<assert id="BR-BT-05421-0096" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0096</assert>
		<assert id="BR-BT-05421-0199" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0199</assert>
		<assert id="BR-BT-05422-0096" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0096</assert>
		<assert id="BR-BT-05422-0199" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0199</assert>
		<assert id="BR-BT-05423-0096" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0096</assert>
		<assert id="BR-BT-05423-0199" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0199</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '37']">
		<assert id="BR-BT-05421-0097" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0097</assert>
		<assert id="BR-BT-05421-0200" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0200</assert>
		<assert id="BR-BT-05422-0097" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0097</assert>
		<assert id="BR-BT-05422-0200" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0200</assert>
		<assert id="BR-BT-05423-0097" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0097</assert>
		<assert id="BR-BT-05423-0200" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0200</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '33']">
		<assert id="BR-BT-05421-0093" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0093</assert>
		<assert id="BR-BT-05421-0196" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0196</assert>
		<assert id="BR-BT-05422-0093" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0093</assert>
		<assert id="BR-BT-05422-0196" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0196</assert>
		<assert id="BR-BT-05423-0093" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0093</assert>
		<assert id="BR-BT-05423-0196" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0196</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '34']">
		<assert id="BR-BT-05421-0094" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0094</assert>
		<assert id="BR-BT-05421-0197" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0197</assert>
		<assert id="BR-BT-05422-0094" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0094</assert>
		<assert id="BR-BT-05422-0197" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0197</assert>
		<assert id="BR-BT-05423-0094" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0094</assert>
		<assert id="BR-BT-05423-0197" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0197</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '35']">
		<assert id="BR-BT-05421-0095" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0095</assert>
		<assert id="BR-BT-05421-0198" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0198</assert>
		<assert id="BR-BT-05422-0095" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0095</assert>
		<assert id="BR-BT-05422-0198" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0198</assert>
		<assert id="BR-BT-05423-0095" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0095</assert>
		<assert id="BR-BT-05423-0198" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0198</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '29']">
		<assert id="BR-BT-05421-0087" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0087</assert>
		<assert id="BR-BT-05421-0190" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0190</assert>
		<assert id="BR-BT-05422-0087" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0087</assert>
		<assert id="BR-BT-05422-0190" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0190</assert>
		<assert id="BR-BT-05423-0087" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0087</assert>
		<assert id="BR-BT-05423-0190" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0190</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '30']">
		<assert id="BR-BT-05421-0088" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0088</assert>
		<assert id="BR-BT-05421-0191" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0191</assert>
		<assert id="BR-BT-05422-0088" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0088</assert>
		<assert id="BR-BT-05422-0191" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0191</assert>
		<assert id="BR-BT-05423-0088" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0088</assert>
		<assert id="BR-BT-05423-0191" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0191</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '32']">
		<assert id="BR-BT-05421-0090" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0090</assert>
		<assert id="BR-BT-05421-0193" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0193</assert>
		<assert id="BR-BT-05422-0090" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0090</assert>
		<assert id="BR-BT-05422-0193" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0193</assert>
		<assert id="BR-BT-05423-0090" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0090</assert>
		<assert id="BR-BT-05423-0193" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0193</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '31']">
		<assert id="BR-BT-05421-0089" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0089</assert>
		<assert id="BR-BT-05421-0192" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0192</assert>
		<assert id="BR-BT-05422-0089" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0089</assert>
		<assert id="BR-BT-05422-0192" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0192</assert>
		<assert id="BR-BT-05423-0089" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0089</assert>
		<assert id="BR-BT-05423-0192" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0192</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '23']">
		<assert id="BR-BT-05421-0081" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0081</assert>
		<assert id="BR-BT-05421-0184" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0184</assert>
		<assert id="BR-BT-05422-0081" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0081</assert>
		<assert id="BR-BT-05422-0184" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0184</assert>
		<assert id="BR-BT-05423-0081" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0081</assert>
		<assert id="BR-BT-05423-0184" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0184</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '24']">
		<assert id="BR-BT-05421-0082" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0082</assert>
		<assert id="BR-BT-05421-0185" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0185</assert>
		<assert id="BR-BT-05422-0082" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0082</assert>
		<assert id="BR-BT-05422-0185" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0185</assert>
		<assert id="BR-BT-05423-0082" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0082</assert>
		<assert id="BR-BT-05423-0185" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0185</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '20']">
		<assert id="BR-BT-05421-0078" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0078</assert>
		<assert id="BR-BT-05421-0181" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0181</assert>
		<assert id="BR-BT-05422-0078" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0078</assert>
		<assert id="BR-BT-05422-0181" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0181</assert>
		<assert id="BR-BT-05423-0078" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0078</assert>
		<assert id="BR-BT-05423-0181" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0181</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '21']">
		<assert id="BR-BT-05421-0079" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0079</assert>
		<assert id="BR-BT-05421-0182" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0182</assert>
		<assert id="BR-BT-05422-0079" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0079</assert>
		<assert id="BR-BT-05422-0182" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0182</assert>
		<assert id="BR-BT-05423-0079" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0079</assert>
		<assert id="BR-BT-05423-0182" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0182</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '16']">
		<assert id="BR-BT-05421-0073" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0073</assert>
		<assert id="BR-BT-05421-0176" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0176</assert>
		<assert id="BR-BT-05422-0073" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0073</assert>
		<assert id="BR-BT-05422-0176" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0176</assert>
		<assert id="BR-BT-05423-0073" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0073</assert>
		<assert id="BR-BT-05423-0176" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0176</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '17']">
		<assert id="BR-BT-05421-0074" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0074</assert>
		<assert id="BR-BT-05421-0177" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0177</assert>
		<assert id="BR-BT-05422-0074" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0074</assert>
		<assert id="BR-BT-05422-0177" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0177</assert>
		<assert id="BR-BT-05423-0074" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0074</assert>
		<assert id="BR-BT-05423-0177" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0177</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '19']">
		<assert id="BR-BT-05421-0076" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0076</assert>
		<assert id="BR-BT-05421-0179" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0179</assert>
		<assert id="BR-BT-05422-0076" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0076</assert>
		<assert id="BR-BT-05422-0179" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0179</assert>
		<assert id="BR-BT-05423-0076" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0076</assert>
		<assert id="BR-BT-05423-0179" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0179</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '18']">
		<assert id="BR-BT-05421-0075" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0075</assert>
		<assert id="BR-BT-05421-0178" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0178</assert>
		<assert id="BR-BT-05422-0075" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0075</assert>
		<assert id="BR-BT-05422-0178" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0178</assert>
		<assert id="BR-BT-05423-0075" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0075</assert>
		<assert id="BR-BT-05423-0178" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0178</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '12']">
		<assert id="BR-BT-05421-0069" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0069</assert>
		<assert id="BR-BT-05421-0172" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0172</assert>
		<assert id="BR-BT-05422-0069" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0069</assert>
		<assert id="BR-BT-05422-0172" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0172</assert>
		<assert id="BR-BT-05423-0069" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0069</assert>
		<assert id="BR-BT-05423-0172" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0172</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '13']">
		<assert id="BR-BT-05421-0070" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0070</assert>
		<assert id="BR-BT-05421-0173" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0173</assert>
		<assert id="BR-BT-05422-0070" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0070</assert>
		<assert id="BR-BT-05422-0173" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0173</assert>
		<assert id="BR-BT-05423-0070" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0070</assert>
		<assert id="BR-BT-05423-0173" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0173</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '14']">
		<assert id="BR-BT-05421-0071" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0071</assert>
		<assert id="BR-BT-05421-0174" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0174</assert>
		<assert id="BR-BT-05422-0071" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0071</assert>
		<assert id="BR-BT-05422-0174" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0174</assert>
		<assert id="BR-BT-05423-0071" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0071</assert>
		<assert id="BR-BT-05423-0174" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0174</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '10']">
		<assert id="BR-BT-05421-0066" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0066</assert>
		<assert id="BR-BT-05421-0169" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0169</assert>
		<assert id="BR-BT-05422-0066" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0066</assert>
		<assert id="BR-BT-05422-0169" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0169</assert>
		<assert id="BR-BT-05423-0066" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0066</assert>
		<assert id="BR-BT-05423-0169" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0169</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '11']">
		<assert id="BR-BT-05421-0067" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0067</assert>
		<assert id="BR-BT-05421-0170" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0170</assert>
		<assert id="BR-BT-05422-0067" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0067</assert>
		<assert id="BR-BT-05422-0170" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0170</assert>
		<assert id="BR-BT-05423-0067" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0067</assert>
		<assert id="BR-BT-05423-0170" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0170</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '7']">
		<assert id="BR-BT-05421-0063" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0063</assert>
		<assert id="BR-BT-05421-0166" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0166</assert>
		<assert id="BR-BT-05422-0063" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0063</assert>
		<assert id="BR-BT-05422-0166" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0166</assert>
		<assert id="BR-BT-05423-0063" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0063</assert>
		<assert id="BR-BT-05423-0166" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0166</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '8']">
		<assert id="BR-BT-05421-0064" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0064</assert>
		<assert id="BR-BT-05421-0167" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0167</assert>
		<assert id="BR-BT-05422-0064" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0064</assert>
		<assert id="BR-BT-05422-0167" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0167</assert>
		<assert id="BR-BT-05423-0064" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0064</assert>
		<assert id="BR-BT-05423-0167" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0167</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '9']">
		<assert id="BR-BT-05421-0065" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0065</assert>
		<assert id="BR-BT-05421-0168" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0168</assert>
		<assert id="BR-BT-05422-0065" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0065</assert>
		<assert id="BR-BT-05422-0168" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0168</assert>
		<assert id="BR-BT-05423-0065" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0065</assert>
		<assert id="BR-BT-05423-0168" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0168</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '15']">
		<assert id="BR-BT-05421-0072" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0072</assert>
		<assert id="BR-BT-05421-0175" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0175</assert>
		<assert id="BR-BT-05422-0072" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0072</assert>
		<assert id="BR-BT-05422-0175" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0175</assert>
		<assert id="BR-BT-05423-0072" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0072</assert>
		<assert id="BR-BT-05423-0175" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0175</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '22']">
		<assert id="BR-BT-05421-0080" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0080</assert>
		<assert id="BR-BT-05421-0183" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0183</assert>
		<assert id="BR-BT-05422-0080" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0080</assert>
		<assert id="BR-BT-05422-0183" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0183</assert>
		<assert id="BR-BT-05423-0080" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0080</assert>
		<assert id="BR-BT-05423-0183" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0183</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '25']">
		<assert id="BR-BT-05421-0083" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0083</assert>
		<assert id="BR-BT-05421-0186" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0186</assert>
		<assert id="BR-BT-05422-0083" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0083</assert>
		<assert id="BR-BT-05422-0186" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0186</assert>
		<assert id="BR-BT-05423-0083" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0083</assert>
		<assert id="BR-BT-05423-0186" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0186</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '26']">
		<assert id="BR-BT-05421-0084" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0084</assert>
		<assert id="BR-BT-05421-0187" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0187</assert>
		<assert id="BR-BT-05422-0084" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0084</assert>
		<assert id="BR-BT-05422-0187" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0187</assert>
		<assert id="BR-BT-05423-0084" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0084</assert>
		<assert id="BR-BT-05423-0187" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0187</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '28']">
		<assert id="BR-BT-05421-0086" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0086</assert>
		<assert id="BR-BT-05421-0189" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0189</assert>
		<assert id="BR-BT-05422-0086" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0086</assert>
		<assert id="BR-BT-05422-0189" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0189</assert>
		<assert id="BR-BT-05423-0086" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0086</assert>
		<assert id="BR-BT-05423-0189" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0189</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '27']">
		<assert id="BR-BT-05421-0085" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0085</assert>
		<assert id="BR-BT-05421-0188" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0188</assert>
		<assert id="BR-BT-05422-0085" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0085</assert>
		<assert id="BR-BT-05422-0188" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0188</assert>
		<assert id="BR-BT-05423-0085" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0085</assert>
		<assert id="BR-BT-05423-0188" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0188</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:Prize[$noticeSubType = '23']">
		<assert id="BR-BT-00044-0030" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(cbc:ValueAmount/normalize-space(text())!='')">rule|message|BR-BT-00044-0030</assert>
		<assert id="BR-BT-00044-0052" role="ERROR" test="count(cbc:RankCode) = 0 or (cbc:ValueAmount/normalize-space(text())!='')">rule|message|BR-BT-00044-0052</assert>
		<assert id="BR-BT-00644-0030" role="ERROR" test="count(cbc:ValueAmount) &gt; 0 or not(../cbc:FollowupContractIndicator/normalize-space(text())!='true')">rule|message|BR-BT-00644-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:Prize[$noticeSubType = '24']">
		<assert id="BR-BT-00044-0031" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(cbc:ValueAmount/normalize-space(text())!='')">rule|message|BR-BT-00044-0031</assert>
		<assert id="BR-BT-00044-0053" role="ERROR" test="count(cbc:RankCode) = 0 or (cbc:ValueAmount/normalize-space(text())!='')">rule|message|BR-BT-00044-0053</assert>
		<assert id="BR-BT-00644-0031" role="ERROR" test="count(cbc:ValueAmount) &gt; 0 or not(../cbc:FollowupContractIndicator/normalize-space(text())!='true')">rule|message|BR-BT-00644-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '23']">
		<assert id="BR-OPT-00140-0081" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0081</assert>
		<assert id="BR-OPT-00140-0126" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '24']">
		<assert id="BR-OPT-00140-0082" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0082</assert>
		<assert id="BR-OPT-00140-0127" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0127</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '20']">
		<assert id="BR-OPT-00140-0078" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0078</assert>
		<assert id="BR-OPT-00140-0116" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '21']">
		<assert id="BR-OPT-00140-0079" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0079</assert>
		<assert id="BR-OPT-00140-0117" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '16']">
		<assert id="BR-OPT-00140-0073" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0073</assert>
		<assert id="BR-OPT-00140-0123" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '17']">
		<assert id="BR-OPT-00140-0074" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0074</assert>
		<assert id="BR-OPT-00140-0124" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '19']">
		<assert id="BR-OPT-00140-0076" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0076</assert>
		<assert id="BR-OPT-00140-0125" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '18']">
		<assert id="BR-OPT-00140-0075" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0075</assert>
		<assert id="BR-OPT-00140-0114" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '12']">
		<assert id="BR-OPT-00140-0069" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0069</assert>
		<assert id="BR-OPT-00140-0110" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0110</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '13']">
		<assert id="BR-OPT-00140-0070" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0070</assert>
		<assert id="BR-OPT-00140-0111" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '14']">
		<assert id="BR-OPT-00140-0071" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0071</assert>
		<assert id="BR-OPT-00140-0112" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0112</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '10']">
		<assert id="BR-OPT-00140-0066" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0066</assert>
		<assert id="BR-OPT-00140-0108" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '11']">
		<assert id="BR-OPT-00140-0067" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0067</assert>
		<assert id="BR-OPT-00140-0109" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0109</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '7']">
		<assert id="BR-OPT-00140-0063" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0063</assert>
		<assert id="BR-OPT-00140-0105" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0105</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '8']">
		<assert id="BR-OPT-00140-0064" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0064</assert>
		<assert id="BR-OPT-00140-0106" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '9']">
		<assert id="BR-OPT-00140-0065" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0065</assert>
		<assert id="BR-OPT-00140-0107" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '15']">
		<assert id="BR-OPT-00140-0072" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0072</assert>
		<assert id="BR-OPT-00140-0113" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0113</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '22']">
		<assert id="BR-OPT-00140-0080" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0080</assert>
		<assert id="BR-OPT-00140-0118" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = 'CEI']">
		<assert id="BR-OPT-00140-0068" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0068</assert>
		<assert id="BR-OPT-00140-0122" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '23']">
		<assert id="BR-BT-00615-0081" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0081</assert>
		<assert id="BR-BT-00615-0110" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0110</assert>
		<assert id="BR-BT-00707-0081" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '24']">
		<assert id="BR-BT-00615-0082" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0082</assert>
		<assert id="BR-BT-00615-0111" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0111</assert>
		<assert id="BR-BT-00707-0082" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '20']">
		<assert id="BR-BT-00615-0078" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0078</assert>
		<assert id="BR-BT-00615-0129" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0129</assert>
		<assert id="BR-BT-00707-0078" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '21']">
		<assert id="BR-BT-00615-0079" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0079</assert>
		<assert id="BR-BT-00615-0130" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0130</assert>
		<assert id="BR-BT-00707-0079" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '16']">
		<assert id="BR-BT-00615-0073" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0073</assert>
		<assert id="BR-BT-00615-0106" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0106</assert>
		<assert id="BR-BT-00707-0073" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '17']">
		<assert id="BR-BT-00615-0074" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0074</assert>
		<assert id="BR-BT-00615-0107" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0107</assert>
		<assert id="BR-BT-00707-0074" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '19']">
		<assert id="BR-BT-00615-0076" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0076</assert>
		<assert id="BR-BT-00615-0108" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0108</assert>
		<assert id="BR-BT-00707-0076" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '18']">
		<assert id="BR-BT-00615-0075" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0075</assert>
		<assert id="BR-BT-00615-0128" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0128</assert>
		<assert id="BR-BT-00707-0075" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '12']">
		<assert id="BR-BT-00615-0069" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0069</assert>
		<assert id="BR-BT-00615-0124" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0124</assert>
		<assert id="BR-BT-00707-0069" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '13']">
		<assert id="BR-BT-00615-0070" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0070</assert>
		<assert id="BR-BT-00615-0125" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0125</assert>
		<assert id="BR-BT-00707-0070" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '14']">
		<assert id="BR-BT-00615-0071" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0071</assert>
		<assert id="BR-BT-00615-0126" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0126</assert>
		<assert id="BR-BT-00707-0071" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '10']">
		<assert id="BR-BT-00615-0066" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0066</assert>
		<assert id="BR-BT-00615-0122" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0122</assert>
		<assert id="BR-BT-00707-0066" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '11']">
		<assert id="BR-BT-00615-0067" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0067</assert>
		<assert id="BR-BT-00615-0123" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0123</assert>
		<assert id="BR-BT-00707-0067" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '7']">
		<assert id="BR-BT-00615-0119" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0119</assert>
		<assert id="BR-BT-00707-0063" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '8']">
		<assert id="BR-BT-00615-0064" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0064</assert>
		<assert id="BR-BT-00615-0120" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0120</assert>
		<assert id="BR-BT-00707-0064" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '9']">
		<assert id="BR-BT-00615-0065" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0065</assert>
		<assert id="BR-BT-00615-0121" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0121</assert>
		<assert id="BR-BT-00707-0065" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '15']">
		<assert id="BR-BT-00615-0072" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0072</assert>
		<assert id="BR-BT-00615-0127" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0127</assert>
		<assert id="BR-BT-00707-0072" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '22']">
		<assert id="BR-BT-00615-0080" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0080</assert>
		<assert id="BR-BT-00615-0131" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0131</assert>
		<assert id="BR-BT-00707-0080" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = 'CEI']">
		<assert id="BR-BT-00615-0068" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0068</assert>
		<assert id="BR-BT-00615-0105" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0105</assert>
		<assert id="BR-BT-00707-0068" role="ERROR" test="count(cbc:DocumentTypeCode) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0068</assert>
		<assert id="BR-BT-00707-0105" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0105</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '23']">
		<assert id="BR-BT-00015-0081" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0081</assert>
		<assert id="BR-BT-00015-0110" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0110</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '24']">
		<assert id="BR-BT-00015-0082" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0082</assert>
		<assert id="BR-BT-00015-0111" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '20']">
		<assert id="BR-BT-00015-0078" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0078</assert>
		<assert id="BR-BT-00015-0134" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0134</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '21']">
		<assert id="BR-BT-00015-0079" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0079</assert>
		<assert id="BR-BT-00015-0135" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0135</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '16']">
		<assert id="BR-BT-00015-0073" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0073</assert>
		<assert id="BR-BT-00015-0106" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '17']">
		<assert id="BR-BT-00015-0074" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0074</assert>
		<assert id="BR-BT-00015-0107" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '19']">
		<assert id="BR-BT-00015-0076" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0076</assert>
		<assert id="BR-BT-00015-0108" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '18']">
		<assert id="BR-BT-00015-0075" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0075</assert>
		<assert id="BR-BT-00015-0131" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0131</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '12']">
		<assert id="BR-BT-00015-0069" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0069</assert>
		<assert id="BR-BT-00015-0125" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '13']">
		<assert id="BR-BT-00015-0070" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0070</assert>
		<assert id="BR-BT-00015-0126" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '14']">
		<assert id="BR-BT-00015-0071" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0071</assert>
		<assert id="BR-BT-00015-0127" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0127</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '10']">
		<assert id="BR-BT-00015-0066" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0066</assert>
		<assert id="BR-BT-00015-0122" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '11']">
		<assert id="BR-BT-00015-0067" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0067</assert>
		<assert id="BR-BT-00015-0123" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '7']">
		<assert id="BR-BT-00015-0063" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0063</assert>
		<assert id="BR-BT-00015-0119" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '8']">
		<assert id="BR-BT-00015-0064" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0064</assert>
		<assert id="BR-BT-00015-0120" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '9']">
		<assert id="BR-BT-00015-0065" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0065</assert>
		<assert id="BR-BT-00015-0121" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0121</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '15']">
		<assert id="BR-BT-00015-0072" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0072</assert>
		<assert id="BR-BT-00015-0128" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0128</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '22']">
		<assert id="BR-BT-00015-0080" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0080</assert>
		<assert id="BR-BT-00015-0136" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0136</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = 'CEI']">
		<assert id="BR-BT-00015-0068" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0068</assert>
		<assert id="BR-BT-00015-0105" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0105</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:ContractExecutionRequirement[cbc:ExecutionRequirementCode/@listName='reserved-execution'][$noticeSubType = 'CEI']">
		<assert id="BR-OPT-00070-0067" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ExecutionRequirementCode[@listName='reserved-execution']/normalize-space(text())='true')">rule|message|BR-OPT-00070-0067</assert>
		<assert id="BR-OPT-00070-0104" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ExecutionRequirementCode[@listName='reserved-execution']/normalize-space(text())='true')">rule|message|BR-OPT-00070-0104</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '23']">
		<assert id="BR-BT-00040-0030" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0030</assert>
		<assert id="BR-BT-00040-0058" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0058</assert>
		<assert id="BR-BT-00750-0030" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0030</assert>
		<assert id="BR-BT-00750-0071" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0071</assert>
		<assert id="BR-BT-00752-0030" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '24']">
		<assert id="BR-BT-00040-0031" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0031</assert>
		<assert id="BR-BT-00040-0059" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0059</assert>
		<assert id="BR-BT-00750-0031" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0031</assert>
		<assert id="BR-BT-00750-0072" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0072</assert>
		<assert id="BR-BT-00752-0031" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '20']">
		<assert id="BR-BT-00040-0027" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0027</assert>
		<assert id="BR-BT-00040-0055" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0055</assert>
		<assert id="BR-BT-00750-0027" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0027</assert>
		<assert id="BR-BT-00750-0068" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0068</assert>
		<assert id="BR-BT-00752-0027" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '21']">
		<assert id="BR-BT-00040-0028" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0028</assert>
		<assert id="BR-BT-00040-0056" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0056</assert>
		<assert id="BR-BT-00750-0028" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0028</assert>
		<assert id="BR-BT-00750-0069" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0069</assert>
		<assert id="BR-BT-00752-0028" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '16']">
		<assert id="BR-BT-00040-0022" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0022</assert>
		<assert id="BR-BT-00040-0052" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0052</assert>
		<assert id="BR-BT-00750-0022" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0022</assert>
		<assert id="BR-BT-00750-0064" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0064</assert>
		<assert id="BR-BT-00752-0022" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '17']">
		<assert id="BR-BT-00040-0023" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0023</assert>
		<assert id="BR-BT-00040-0053" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0053</assert>
		<assert id="BR-BT-00750-0023" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0023</assert>
		<assert id="BR-BT-00750-0065" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0065</assert>
		<assert id="BR-BT-00752-0023" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '19']">
		<assert id="BR-BT-00750-0025" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0025</assert>
		<assert id="BR-BT-00750-0067" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '18']">
		<assert id="BR-BT-00040-0024" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0024</assert>
		<assert id="BR-BT-00040-0054" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0054</assert>
		<assert id="BR-BT-00750-0024" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0024</assert>
		<assert id="BR-BT-00750-0066" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0066</assert>
		<assert id="BR-BT-00752-0024" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '12']">
		<assert id="BR-BT-00750-0018" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0018</assert>
		<assert id="BR-BT-00750-0060" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0060</assert>
		<assert id="BR-BT-00752-0018" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '13']">
		<assert id="BR-BT-00750-0019" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0019</assert>
		<assert id="BR-BT-00750-0061" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0061</assert>
		<assert id="BR-BT-00752-0019" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '14']">
		<assert id="BR-BT-00750-0020" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0020</assert>
		<assert id="BR-BT-00750-0062" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0062</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '10']">
		<assert id="BR-BT-00750-0015" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0015</assert>
		<assert id="BR-BT-00750-0057" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0057</assert>
		<assert id="BR-BT-00752-0015" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '11']">
		<assert id="BR-BT-00750-0016" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0016</assert>
		<assert id="BR-BT-00750-0058" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0058</assert>
		<assert id="BR-BT-00752-0016" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '7']">
		<assert id="BR-BT-00750-0012" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0012</assert>
		<assert id="BR-BT-00750-0054" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0054</assert>
		<assert id="BR-BT-00752-0012" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '8']">
		<assert id="BR-BT-00750-0013" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0013</assert>
		<assert id="BR-BT-00750-0055" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0055</assert>
		<assert id="BR-BT-00752-0013" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '9']">
		<assert id="BR-BT-00750-0014" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0014</assert>
		<assert id="BR-BT-00750-0056" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0056</assert>
		<assert id="BR-BT-00752-0014" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '15']">
		<assert id="BR-BT-00750-0021" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0021</assert>
		<assert id="BR-BT-00750-0063" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0063</assert>
		<assert id="BR-BT-00752-0021" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = '22']">
		<assert id="BR-BT-00040-0029" role="ERROR" test="count(efbc:SecondStageIndicator) &gt; 0 or not(/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0029</assert>
		<assert id="BR-BT-00040-0057" role="ERROR" test="count(efbc:SecondStageIndicator) = 0 or (/*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())=('comp-dial','innovation','neg-w-call','oth-mult','restricted'))">rule|message|BR-BT-00040-0057</assert>
		<assert id="BR-BT-00750-0029" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0029</assert>
		<assert id="BR-BT-00750-0070" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0070</assert>
		<assert id="BR-BT-00752-0029" role="ERROR" test="count(efac:CriterionParameter/efbc:ParameterNumeric) = 0 or (efbc:SecondStageIndicator/normalize-space(text())='true')">rule|message|BR-BT-00752-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00750-0017" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:CalculationExpressionCode[@listName='usage']/normalize-space(text())='used')">rule|message|BR-BT-00750-0017</assert>
		<assert id="BR-BT-00750-0059" role="ERROR" test="count(cbc:Description) = 0 or (cbc:CriterionTypeCode[@listName='selection-criterion']/normalize-space(text())!='')">rule|message|BR-BT-00750-0059</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '23']">
		<assert id="BR-BT-07531-0030" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0030</assert>
		<assert id="BR-BT-07531-0082" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0082</assert>
		<assert id="BR-BT-07532-0030" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0030</assert>
		<assert id="BR-BT-07532-0082" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '24']">
		<assert id="BR-BT-07531-0031" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0031</assert>
		<assert id="BR-BT-07531-0083" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0083</assert>
		<assert id="BR-BT-07532-0031" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0031</assert>
		<assert id="BR-BT-07532-0083" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '20']">
		<assert id="BR-BT-07531-0027" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0027</assert>
		<assert id="BR-BT-07531-0079" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0079</assert>
		<assert id="BR-BT-07532-0027" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0027</assert>
		<assert id="BR-BT-07532-0079" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '21']">
		<assert id="BR-BT-07531-0028" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0028</assert>
		<assert id="BR-BT-07531-0080" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0080</assert>
		<assert id="BR-BT-07532-0028" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0028</assert>
		<assert id="BR-BT-07532-0080" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '16']">
		<assert id="BR-BT-07531-0022" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0022</assert>
		<assert id="BR-BT-07531-0074" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0074</assert>
		<assert id="BR-BT-07532-0022" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0022</assert>
		<assert id="BR-BT-07532-0074" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '17']">
		<assert id="BR-BT-07531-0023" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0023</assert>
		<assert id="BR-BT-07531-0075" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0075</assert>
		<assert id="BR-BT-07532-0023" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0023</assert>
		<assert id="BR-BT-07532-0075" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '18']">
		<assert id="BR-BT-07531-0024" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0024</assert>
		<assert id="BR-BT-07531-0076" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0076</assert>
		<assert id="BR-BT-07532-0024" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0024</assert>
		<assert id="BR-BT-07532-0076" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '12']">
		<assert id="BR-BT-07531-0018" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0018</assert>
		<assert id="BR-BT-07531-0070" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0070</assert>
		<assert id="BR-BT-07532-0018" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0018</assert>
		<assert id="BR-BT-07532-0070" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '13']">
		<assert id="BR-BT-07531-0019" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0019</assert>
		<assert id="BR-BT-07531-0071" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0071</assert>
		<assert id="BR-BT-07532-0019" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0019</assert>
		<assert id="BR-BT-07532-0071" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '10']">
		<assert id="BR-BT-07531-0015" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0015</assert>
		<assert id="BR-BT-07531-0067" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0067</assert>
		<assert id="BR-BT-07532-0015" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0015</assert>
		<assert id="BR-BT-07532-0067" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '11']">
		<assert id="BR-BT-07531-0016" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0016</assert>
		<assert id="BR-BT-07531-0068" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0068</assert>
		<assert id="BR-BT-07532-0016" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0016</assert>
		<assert id="BR-BT-07532-0068" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0068</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '7']">
		<assert id="BR-BT-07531-0012" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0012</assert>
		<assert id="BR-BT-07531-0064" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0064</assert>
		<assert id="BR-BT-07532-0012" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0012</assert>
		<assert id="BR-BT-07532-0064" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '8']">
		<assert id="BR-BT-07531-0013" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0013</assert>
		<assert id="BR-BT-07531-0065" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0065</assert>
		<assert id="BR-BT-07532-0013" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0013</assert>
		<assert id="BR-BT-07532-0065" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '9']">
		<assert id="BR-BT-07531-0014" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0014</assert>
		<assert id="BR-BT-07531-0066" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0066</assert>
		<assert id="BR-BT-07532-0014" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0014</assert>
		<assert id="BR-BT-07532-0066" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '15']">
		<assert id="BR-BT-07531-0021" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0021</assert>
		<assert id="BR-BT-07531-0073" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0073</assert>
		<assert id="BR-BT-07532-0021" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0021</assert>
		<assert id="BR-BT-07532-0073" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efac:CriterionParameter[$noticeSubType = '22']">
		<assert id="BR-BT-07531-0029" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0029</assert>
		<assert id="BR-BT-07531-0081" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-07531-0081</assert>
		<assert id="BR-BT-07532-0029" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0029</assert>
		<assert id="BR-BT-07532-0081" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(../efbc:SecondStageIndicator/normalize-space(text())='true' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]))">rule|message|BR-BT-07532-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '36']">
		<assert id="BR-BT-00137-0096" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0096</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '37']">
		<assert id="BR-BT-00137-0097" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0097</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '38']">
		<assert id="BR-BT-00137-0098" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0098</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '39']">
		<assert id="BR-BT-00137-0099" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0099</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '40']">
		<assert id="BR-BT-00137-0100" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0100</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '33']">
		<assert id="BR-BT-00137-0093" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0093</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '34']">
		<assert id="BR-BT-00137-0094" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0094</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '35']">
		<assert id="BR-BT-00137-0095" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0095</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '29']">
		<assert id="BR-BT-00137-0087" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0087</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '30']">
		<assert id="BR-BT-00137-0088" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0088</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '32']">
		<assert id="BR-BT-00137-0090" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0090</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '31']">
		<assert id="BR-BT-00137-0089" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0089</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '23']">
		<assert id="BR-BT-00137-0081" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0081</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '24']">
		<assert id="BR-BT-00137-0082" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0082</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '20']">
		<assert id="BR-BT-00137-0078" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0078</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '21']">
		<assert id="BR-BT-00137-0079" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0079</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '16']">
		<assert id="BR-BT-00137-0073" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0073</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '17']">
		<assert id="BR-BT-00137-0074" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0074</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '19']">
		<assert id="BR-BT-00137-0076" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0076</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '18']">
		<assert id="BR-BT-00137-0075" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0075</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '12']">
		<assert id="BR-BT-00137-0069" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0069</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '13']">
		<assert id="BR-BT-00137-0070" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0070</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '14']">
		<assert id="BR-BT-00137-0071" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0071</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '10']">
		<assert id="BR-BT-00137-0066" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0066</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '11']">
		<assert id="BR-BT-00137-0067" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0067</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '7']">
		<assert id="BR-BT-00137-0063" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0063</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '8']">
		<assert id="BR-BT-00137-0064" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0064</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '9']">
		<assert id="BR-BT-00137-0065" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0065</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '15']">
		<assert id="BR-BT-00137-0072" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0072</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '22']">
		<assert id="BR-BT-00137-0080" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0080</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '25']">
		<assert id="BR-BT-00137-0083" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0083</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '26']">
		<assert id="BR-BT-00137-0084" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0084</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '28']">
		<assert id="BR-BT-00137-0086" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0086</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup'][$noticeSubType = '27']">
		<assert id="BR-BT-00137-0085" role="ERROR" test="count(cbc:ID) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00137-0085</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '36']">
		<assert id="BR-BT-00543-0045" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '37']">
		<assert id="BR-BT-00543-0046" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '33']">
		<assert id="BR-BT-00543-0042" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0042</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '34']">
		<assert id="BR-BT-00543-0043" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '35']">
		<assert id="BR-BT-00543-0044" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '29']">
		<assert id="BR-BT-00543-0036" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0036</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '30']">
		<assert id="BR-BT-00543-0037" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0037</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '32']">
		<assert id="BR-BT-00543-0039" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0039</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '31']">
		<assert id="BR-BT-00543-0038" role="ERROR" test="count(cbc:CalculationExpression) &gt; 0 or not(not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0038</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '23']">
		<assert id="BR-BT-00543-0030" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '24']">
		<assert id="BR-BT-00543-0031" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '20']">
		<assert id="BR-BT-00543-0027" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '21']">
		<assert id="BR-BT-00543-0028" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '16']">
		<assert id="BR-BT-00543-0022" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '17']">
		<assert id="BR-BT-00543-0023" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '19']">
		<assert id="BR-BT-00543-0025" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '18']">
		<assert id="BR-BT-00543-0024" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '12']">
		<assert id="BR-BT-00543-0018" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '13']">
		<assert id="BR-BT-00543-0019" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '14']">
		<assert id="BR-BT-00543-0020" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '10']">
		<assert id="BR-BT-00543-0015" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '11']">
		<assert id="BR-BT-00543-0016" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '7']">
		<assert id="BR-BT-00543-0012" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '8']">
		<assert id="BR-BT-00543-0013" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '9']">
		<assert id="BR-BT-00543-0014" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '15']">
		<assert id="BR-BT-00543-0021" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '22']">
		<assert id="BR-BT-00543-0029" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '25']">
		<assert id="BR-BT-00543-0032" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '26']">
		<assert id="BR-BT-00543-0033" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '28']">
		<assert id="BR-BT-00543-0035" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion[$noticeSubType = '27']">
		<assert id="BR-BT-00543-0034" role="ERROR" test="count(cbc:CalculationExpression) = 0 or (not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter/efbc:ParameterNumeric[normalize-space(text())]))">rule|message|BR-BT-00543-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '36']">
		<assert id="BR-BT-00539-0045" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0045</assert>
		<assert id="BR-BT-00734-0045" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '37']">
		<assert id="BR-BT-00539-0046" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0046</assert>
		<assert id="BR-BT-00734-0046" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '33']">
		<assert id="BR-BT-00539-0042" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0042</assert>
		<assert id="BR-BT-00734-0042" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0042</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '34']">
		<assert id="BR-BT-00539-0043" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0043</assert>
		<assert id="BR-BT-00734-0043" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '35']">
		<assert id="BR-BT-00539-0044" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0044</assert>
		<assert id="BR-BT-00734-0044" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '29']">
		<assert id="BR-BT-00539-0036" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0036</assert>
		<assert id="BR-BT-00539-0140" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0140</assert>
		<assert id="BR-BT-00734-0036" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0036</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '30']">
		<assert id="BR-BT-00539-0037" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0037</assert>
		<assert id="BR-BT-00734-0037" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0037</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '32']">
		<assert id="BR-BT-00539-0039" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0039</assert>
		<assert id="BR-BT-00539-0143" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0143</assert>
		<assert id="BR-BT-00734-0039" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0039</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '31']">
		<assert id="BR-BT-00539-0038" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0038</assert>
		<assert id="BR-BT-00539-0142" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) &gt; 0 or not(cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0142</assert>
		<assert id="BR-BT-00734-0038" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0038</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '23']">
		<assert id="BR-BT-00539-0030" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0030</assert>
		<assert id="BR-BT-00734-0030" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '24']">
		<assert id="BR-BT-00539-0031" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0031</assert>
		<assert id="BR-BT-00734-0031" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '20']">
		<assert id="BR-BT-00539-0027" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0027</assert>
		<assert id="BR-BT-00734-0027" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '21']">
		<assert id="BR-BT-00539-0028" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0028</assert>
		<assert id="BR-BT-00734-0028" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '16']">
		<assert id="BR-BT-00539-0022" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0022</assert>
		<assert id="BR-BT-00734-0022" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '17']">
		<assert id="BR-BT-00539-0023" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0023</assert>
		<assert id="BR-BT-00734-0023" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '19']">
		<assert id="BR-BT-00539-0025" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0025</assert>
		<assert id="BR-BT-00734-0025" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '18']">
		<assert id="BR-BT-00539-0024" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0024</assert>
		<assert id="BR-BT-00734-0024" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '12']">
		<assert id="BR-BT-00539-0018" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0018</assert>
		<assert id="BR-BT-00734-0018" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '13']">
		<assert id="BR-BT-00539-0019" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0019</assert>
		<assert id="BR-BT-00734-0019" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '14']">
		<assert id="BR-BT-00539-0020" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0020</assert>
		<assert id="BR-BT-00734-0020" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '10']">
		<assert id="BR-BT-00539-0015" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0015</assert>
		<assert id="BR-BT-00734-0015" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '11']">
		<assert id="BR-BT-00539-0016" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0016</assert>
		<assert id="BR-BT-00734-0016" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '7']">
		<assert id="BR-BT-00539-0012" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0012</assert>
		<assert id="BR-BT-00734-0012" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '8']">
		<assert id="BR-BT-00539-0013" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0013</assert>
		<assert id="BR-BT-00734-0013" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '9']">
		<assert id="BR-BT-00539-0014" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0014</assert>
		<assert id="BR-BT-00734-0014" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '15']">
		<assert id="BR-BT-00539-0021" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0021</assert>
		<assert id="BR-BT-00734-0021" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '22']">
		<assert id="BR-BT-00539-0029" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0029</assert>
		<assert id="BR-BT-00734-0029" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '25']">
		<assert id="BR-BT-00539-0032" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0032</assert>
		<assert id="BR-BT-00734-0032" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '26']">
		<assert id="BR-BT-00539-0033" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0033</assert>
		<assert id="BR-BT-00734-0033" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '28']">
		<assert id="BR-BT-00539-0035" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0035</assert>
		<assert id="BR-BT-00734-0035" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion[$noticeSubType = '27']">
		<assert id="BR-BT-00539-0034" role="ERROR" test="count(cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00539-0034</assert>
		<assert id="BR-BT-00734-0034" role="ERROR" test="count(cbc:Name) = 0 or (cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00734-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '36']">
		<assert id="BR-BT-00541-0045" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '37']">
		<assert id="BR-BT-00541-0046" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '33']">
		<assert id="BR-BT-00541-0042" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0042</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '34']">
		<assert id="BR-BT-00541-0043" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '35']">
		<assert id="BR-BT-00541-0044" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '29']">
		<assert id="BR-BT-00541-0036" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0036</assert>
		<assert id="BR-BT-00541-0138" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0138</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '30']">
		<assert id="BR-BT-00541-0037" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0037</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '32']">
		<assert id="BR-BT-00541-0039" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0039</assert>
		<assert id="BR-BT-00541-0141" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0141</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '31']">
		<assert id="BR-BT-00541-0038" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0038</assert>
		<assert id="BR-BT-00541-0140" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) &gt; 0 or not(../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0140</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '23']">
		<assert id="BR-BT-00541-0030" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '24']">
		<assert id="BR-BT-00541-0031" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '20']">
		<assert id="BR-BT-00541-0027" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '21']">
		<assert id="BR-BT-00541-0028" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '16']">
		<assert id="BR-BT-00541-0022" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0022</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '17']">
		<assert id="BR-BT-00541-0023" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0023</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '19']">
		<assert id="BR-BT-00541-0025" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '18']">
		<assert id="BR-BT-00541-0024" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '12']">
		<assert id="BR-BT-00541-0018" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '13']">
		<assert id="BR-BT-00541-0019" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '14']">
		<assert id="BR-BT-00541-0020" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '10']">
		<assert id="BR-BT-00541-0015" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0015</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '11']">
		<assert id="BR-BT-00541-0016" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0016</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '7']">
		<assert id="BR-BT-00541-0012" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0012</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '8']">
		<assert id="BR-BT-00541-0013" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0013</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '9']">
		<assert id="BR-BT-00541-0014" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0014</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '15']">
		<assert id="BR-BT-00541-0021" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '22']">
		<assert id="BR-BT-00541-0029" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '25']">
		<assert id="BR-BT-00541-0032" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0032</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '26']">
		<assert id="BR-BT-00541-0033" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0033</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '28']">
		<assert id="BR-BT-00541-0035" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0035</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension[$noticeSubType = '27']">
		<assert id="BR-BT-00541-0034" role="ERROR" test="count(efac:AwardCriterionParameter/efbc:ParameterNumeric) = 0 or (../../../../cbc:Description/normalize-space(text())!='')">rule|message|BR-BT-00541-0034</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '36']">
		<assert id="BR-BT-05421-0045" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0045</assert>
		<assert id="BR-BT-05421-0149" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0149</assert>
		<assert id="BR-BT-05422-0045" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0045</assert>
		<assert id="BR-BT-05422-0149" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0149</assert>
		<assert id="BR-BT-05423-0045" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0045</assert>
		<assert id="BR-BT-05423-0149" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0149</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '37']">
		<assert id="BR-BT-05421-0046" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0046</assert>
		<assert id="BR-BT-05421-0150" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0150</assert>
		<assert id="BR-BT-05422-0046" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0046</assert>
		<assert id="BR-BT-05422-0150" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0150</assert>
		<assert id="BR-BT-05423-0046" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0046</assert>
		<assert id="BR-BT-05423-0150" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0150</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '33']">
		<assert id="BR-BT-05421-0042" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0042</assert>
		<assert id="BR-BT-05421-0146" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0146</assert>
		<assert id="BR-BT-05422-0042" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0042</assert>
		<assert id="BR-BT-05422-0146" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0146</assert>
		<assert id="BR-BT-05423-0042" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0042</assert>
		<assert id="BR-BT-05423-0146" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0146</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '34']">
		<assert id="BR-BT-05421-0043" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0043</assert>
		<assert id="BR-BT-05421-0147" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0147</assert>
		<assert id="BR-BT-05422-0043" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0043</assert>
		<assert id="BR-BT-05422-0147" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0147</assert>
		<assert id="BR-BT-05423-0043" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0043</assert>
		<assert id="BR-BT-05423-0147" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0147</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '35']">
		<assert id="BR-BT-05421-0044" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0044</assert>
		<assert id="BR-BT-05421-0148" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0148</assert>
		<assert id="BR-BT-05422-0044" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0044</assert>
		<assert id="BR-BT-05422-0148" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0148</assert>
		<assert id="BR-BT-05423-0044" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0044</assert>
		<assert id="BR-BT-05423-0148" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0148</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '29']">
		<assert id="BR-BT-05421-0036" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0036</assert>
		<assert id="BR-BT-05421-0140" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0140</assert>
		<assert id="BR-BT-05422-0036" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0036</assert>
		<assert id="BR-BT-05422-0140" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0140</assert>
		<assert id="BR-BT-05423-0036" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0036</assert>
		<assert id="BR-BT-05423-0140" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0140</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '30']">
		<assert id="BR-BT-05421-0037" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0037</assert>
		<assert id="BR-BT-05421-0141" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0141</assert>
		<assert id="BR-BT-05422-0037" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0037</assert>
		<assert id="BR-BT-05422-0141" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0141</assert>
		<assert id="BR-BT-05423-0037" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0037</assert>
		<assert id="BR-BT-05423-0141" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0141</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '32']">
		<assert id="BR-BT-05421-0039" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0039</assert>
		<assert id="BR-BT-05421-0143" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0143</assert>
		<assert id="BR-BT-05422-0039" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0039</assert>
		<assert id="BR-BT-05422-0143" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0143</assert>
		<assert id="BR-BT-05423-0039" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0039</assert>
		<assert id="BR-BT-05423-0143" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0143</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '31']">
		<assert id="BR-BT-05421-0038" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0038</assert>
		<assert id="BR-BT-05421-0142" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0142</assert>
		<assert id="BR-BT-05422-0038" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0038</assert>
		<assert id="BR-BT-05422-0142" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0142</assert>
		<assert id="BR-BT-05423-0038" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0038</assert>
		<assert id="BR-BT-05423-0142" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0142</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '23']">
		<assert id="BR-BT-05421-0030" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0030</assert>
		<assert id="BR-BT-05421-0134" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0134</assert>
		<assert id="BR-BT-05422-0030" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0030</assert>
		<assert id="BR-BT-05422-0134" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0134</assert>
		<assert id="BR-BT-05423-0030" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0030</assert>
		<assert id="BR-BT-05423-0134" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0134</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '24']">
		<assert id="BR-BT-05421-0031" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0031</assert>
		<assert id="BR-BT-05421-0135" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0135</assert>
		<assert id="BR-BT-05422-0031" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0031</assert>
		<assert id="BR-BT-05422-0135" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0135</assert>
		<assert id="BR-BT-05423-0031" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0031</assert>
		<assert id="BR-BT-05423-0135" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0135</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '20']">
		<assert id="BR-BT-05421-0027" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0027</assert>
		<assert id="BR-BT-05421-0131" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0131</assert>
		<assert id="BR-BT-05422-0027" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0027</assert>
		<assert id="BR-BT-05422-0131" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0131</assert>
		<assert id="BR-BT-05423-0027" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0027</assert>
		<assert id="BR-BT-05423-0131" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0131</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '21']">
		<assert id="BR-BT-05421-0028" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0028</assert>
		<assert id="BR-BT-05421-0132" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0132</assert>
		<assert id="BR-BT-05422-0028" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0028</assert>
		<assert id="BR-BT-05422-0132" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0132</assert>
		<assert id="BR-BT-05423-0028" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0028</assert>
		<assert id="BR-BT-05423-0132" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0132</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '16']">
		<assert id="BR-BT-05421-0022" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0022</assert>
		<assert id="BR-BT-05421-0126" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0126</assert>
		<assert id="BR-BT-05422-0022" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0022</assert>
		<assert id="BR-BT-05422-0126" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0126</assert>
		<assert id="BR-BT-05423-0022" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0022</assert>
		<assert id="BR-BT-05423-0126" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0126</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '17']">
		<assert id="BR-BT-05421-0023" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0023</assert>
		<assert id="BR-BT-05421-0127" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0127</assert>
		<assert id="BR-BT-05422-0023" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0023</assert>
		<assert id="BR-BT-05422-0127" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0127</assert>
		<assert id="BR-BT-05423-0023" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0023</assert>
		<assert id="BR-BT-05423-0127" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0127</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '19']">
		<assert id="BR-BT-05421-0025" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0025</assert>
		<assert id="BR-BT-05421-0129" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0129</assert>
		<assert id="BR-BT-05422-0025" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0025</assert>
		<assert id="BR-BT-05422-0129" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0129</assert>
		<assert id="BR-BT-05423-0025" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0025</assert>
		<assert id="BR-BT-05423-0129" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0129</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '18']">
		<assert id="BR-BT-05421-0024" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0024</assert>
		<assert id="BR-BT-05421-0128" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0128</assert>
		<assert id="BR-BT-05422-0024" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0024</assert>
		<assert id="BR-BT-05422-0128" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0128</assert>
		<assert id="BR-BT-05423-0024" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0024</assert>
		<assert id="BR-BT-05423-0128" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0128</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '12']">
		<assert id="BR-BT-05421-0018" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0018</assert>
		<assert id="BR-BT-05421-0122" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0122</assert>
		<assert id="BR-BT-05422-0018" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0018</assert>
		<assert id="BR-BT-05422-0122" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0122</assert>
		<assert id="BR-BT-05423-0018" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0018</assert>
		<assert id="BR-BT-05423-0122" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '13']">
		<assert id="BR-BT-05421-0019" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0019</assert>
		<assert id="BR-BT-05421-0123" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0123</assert>
		<assert id="BR-BT-05422-0019" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0019</assert>
		<assert id="BR-BT-05422-0123" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0123</assert>
		<assert id="BR-BT-05423-0019" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0019</assert>
		<assert id="BR-BT-05423-0123" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '14']">
		<assert id="BR-BT-05421-0020" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0020</assert>
		<assert id="BR-BT-05421-0124" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0124</assert>
		<assert id="BR-BT-05422-0020" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0020</assert>
		<assert id="BR-BT-05422-0124" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0124</assert>
		<assert id="BR-BT-05423-0020" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0020</assert>
		<assert id="BR-BT-05423-0124" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '10']">
		<assert id="BR-BT-05421-0015" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0015</assert>
		<assert id="BR-BT-05421-0119" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0119</assert>
		<assert id="BR-BT-05422-0015" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0015</assert>
		<assert id="BR-BT-05422-0119" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0119</assert>
		<assert id="BR-BT-05423-0015" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0015</assert>
		<assert id="BR-BT-05423-0119" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '11']">
		<assert id="BR-BT-05421-0016" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0016</assert>
		<assert id="BR-BT-05421-0120" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0120</assert>
		<assert id="BR-BT-05422-0016" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0016</assert>
		<assert id="BR-BT-05422-0120" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0120</assert>
		<assert id="BR-BT-05423-0016" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0016</assert>
		<assert id="BR-BT-05423-0120" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '7']">
		<assert id="BR-BT-05421-0012" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0012</assert>
		<assert id="BR-BT-05421-0116" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0116</assert>
		<assert id="BR-BT-05422-0012" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0012</assert>
		<assert id="BR-BT-05422-0116" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0116</assert>
		<assert id="BR-BT-05423-0012" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0012</assert>
		<assert id="BR-BT-05423-0116" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '8']">
		<assert id="BR-BT-05421-0013" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0013</assert>
		<assert id="BR-BT-05421-0117" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0117</assert>
		<assert id="BR-BT-05422-0013" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0013</assert>
		<assert id="BR-BT-05422-0117" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0117</assert>
		<assert id="BR-BT-05423-0013" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0013</assert>
		<assert id="BR-BT-05423-0117" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '9']">
		<assert id="BR-BT-05421-0014" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0014</assert>
		<assert id="BR-BT-05421-0118" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0118</assert>
		<assert id="BR-BT-05422-0014" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0014</assert>
		<assert id="BR-BT-05422-0118" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0118</assert>
		<assert id="BR-BT-05423-0014" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0014</assert>
		<assert id="BR-BT-05423-0118" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '15']">
		<assert id="BR-BT-05421-0021" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0021</assert>
		<assert id="BR-BT-05421-0125" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0125</assert>
		<assert id="BR-BT-05422-0021" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0021</assert>
		<assert id="BR-BT-05422-0125" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0125</assert>
		<assert id="BR-BT-05423-0021" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0021</assert>
		<assert id="BR-BT-05423-0125" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '22']">
		<assert id="BR-BT-05421-0029" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0029</assert>
		<assert id="BR-BT-05421-0133" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0133</assert>
		<assert id="BR-BT-05422-0029" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0029</assert>
		<assert id="BR-BT-05422-0133" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0133</assert>
		<assert id="BR-BT-05423-0029" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0029</assert>
		<assert id="BR-BT-05423-0133" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0133</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '25']">
		<assert id="BR-BT-05421-0032" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0032</assert>
		<assert id="BR-BT-05421-0136" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0136</assert>
		<assert id="BR-BT-05422-0032" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0032</assert>
		<assert id="BR-BT-05422-0136" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0136</assert>
		<assert id="BR-BT-05423-0032" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0032</assert>
		<assert id="BR-BT-05423-0136" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0136</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '26']">
		<assert id="BR-BT-05421-0033" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0033</assert>
		<assert id="BR-BT-05421-0137" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0137</assert>
		<assert id="BR-BT-05422-0033" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0033</assert>
		<assert id="BR-BT-05422-0137" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0137</assert>
		<assert id="BR-BT-05423-0033" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0033</assert>
		<assert id="BR-BT-05423-0137" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0137</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '28']">
		<assert id="BR-BT-05421-0035" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0035</assert>
		<assert id="BR-BT-05421-0139" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0139</assert>
		<assert id="BR-BT-05422-0035" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0035</assert>
		<assert id="BR-BT-05422-0139" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0139</assert>
		<assert id="BR-BT-05423-0035" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0035</assert>
		<assert id="BR-BT-05423-0139" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0139</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[$noticeSubType = '27']">
		<assert id="BR-BT-05421-0034" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0034</assert>
		<assert id="BR-BT-05421-0138" role="ERROR" test="count(efbc:ParameterCode[@listName='number-weight']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]))">rule|message|BR-BT-05421-0138</assert>
		<assert id="BR-BT-05422-0034" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0034</assert>
		<assert id="BR-BT-05422-0138" role="ERROR" test="count(efbc:ParameterCode[@listName='number-fixed']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-threshold'][normalize-space(text())]) and ../../../../../cbc:AwardingCriterionTypeCode[@listName='award-criterion-type']/normalize-space(text())!='quality')">rule|message|BR-BT-05422-0138</assert>
		<assert id="BR-BT-05423-0034" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) = 0 or (efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0034</assert>
		<assert id="BR-BT-05423-0138" role="ERROR" test="count(efbc:ParameterCode[@listName='number-threshold']) &gt; 0 or not(efbc:ParameterNumeric/normalize-space(text())!='' and not(efbc:ParameterCode[@listName='number-weight'][normalize-space(text())]) and not(efbc:ParameterCode[@listName='number-fixed'][normalize-space(text())]))">rule|message|BR-BT-05423-0138</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '4']">
		<assert id="BR-BT-00026-0507" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0507</assert>
		<assert id="BR-BT-00026-0557" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0557</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '5']">
		<assert id="BR-BT-00026-0508" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0508</assert>
		<assert id="BR-BT-00026-0558" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0558</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:AdditionalCommodityClassification[$noticeSubType = '6']">
		<assert id="BR-BT-00026-0509" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) &gt; 0 or not(cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0509</assert>
		<assert id="BR-BT-00026-0559" role="ERROR" test="count(cbc:ItemClassificationCode/@listName) = 0 or (cbc:ItemClassificationCode/normalize-space(text())!='')">rule|message|BR-BT-00026-0559</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '4']">
		<assert id="BR-BT-00026-0207" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0207</assert>
		<assert id="BR-BT-00026-0257" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0257</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '5']">
		<assert id="BR-BT-00026-0208" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0208</assert>
		<assert id="BR-BT-00026-0258" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0258</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:MainCommodityClassification/cbc:ItemClassificationCode[$noticeSubType = '6']">
		<assert id="BR-BT-00026-0209" role="ERROR" test="count(@listName) &gt; 0 or not(./normalize-space(text())!='')">rule|message|BR-BT-00026-0209</assert>
		<assert id="BR-BT-00026-0259" role="ERROR" test="count(@listName) = 0 or (./normalize-space(text())!='')">rule|message|BR-BT-00026-0259</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '36']">
		<assert id="BR-BT-00531-0145" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0145</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '37']">
		<assert id="BR-BT-00531-0146" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0146</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '38']">
		<assert id="BR-BT-00531-0147" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0147</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '39']">
		<assert id="BR-BT-00531-0148" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0148</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '40']">
		<assert id="BR-BT-00531-0149" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0149</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '33']">
		<assert id="BR-BT-00531-0142" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0142</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '34']">
		<assert id="BR-BT-00531-0143" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0143</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '35']">
		<assert id="BR-BT-00531-0144" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0144</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '29']">
		<assert id="BR-BT-00531-0136" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0136</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '30']">
		<assert id="BR-BT-00531-0137" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0137</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '32']">
		<assert id="BR-BT-00531-0139" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0139</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '31']">
		<assert id="BR-BT-00531-0138" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0138</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '23']">
		<assert id="BR-BT-00531-0130" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0130</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '24']">
		<assert id="BR-BT-00531-0131" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0131</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '20']">
		<assert id="BR-BT-00531-0127" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0127</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '21']">
		<assert id="BR-BT-00531-0128" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0128</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '16']">
		<assert id="BR-BT-00531-0122" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0122</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '17']">
		<assert id="BR-BT-00531-0123" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0123</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '19']">
		<assert id="BR-BT-00531-0125" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0125</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '18']">
		<assert id="BR-BT-00531-0124" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0124</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '1']">
		<assert id="BR-BT-00531-0104" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0104</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '2']">
		<assert id="BR-BT-00531-0105" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0105</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '3']">
		<assert id="BR-BT-00531-0106" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '12']">
		<assert id="BR-BT-00531-0118" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0118</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '13']">
		<assert id="BR-BT-00531-0119" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '14']">
		<assert id="BR-BT-00531-0120" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '10']">
		<assert id="BR-BT-00531-0115" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0115</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '11']">
		<assert id="BR-BT-00531-0116" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0116</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '4']">
		<assert id="BR-BT-00531-0107" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '5']">
		<assert id="BR-BT-00531-0108" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '6']">
		<assert id="BR-BT-00531-0109" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0109</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '7']">
		<assert id="BR-BT-00531-0112" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0112</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '8']">
		<assert id="BR-BT-00531-0113" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0113</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '9']">
		<assert id="BR-BT-00531-0114" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '15']">
		<assert id="BR-BT-00531-0121" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0121</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '22']">
		<assert id="BR-BT-00531-0129" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0129</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '25']">
		<assert id="BR-BT-00531-0132" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0132</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '26']">
		<assert id="BR-BT-00531-0133" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0133</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '28']">
		<assert id="BR-BT-00531-0135" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0135</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = '27']">
		<assert id="BR-BT-00531-0134" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0134</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'T01']">
		<assert id="BR-BT-00531-0111" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'T02']">
		<assert id="BR-BT-00531-0141" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0141</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:ProcurementAdditionalType[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00531-0117" role="ERROR" test="count(cbc:ProcurementTypeCode[@listName='contract-nature']) = 0 or (../cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text())!='')">rule|message|BR-BT-00531-0117</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '4']">
		<assert id="BR-BT-00727-0187" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0187</assert>
		<assert id="BR-BT-00728-0059" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0059</assert>
		<assert id="BR-BT-05071-0058" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0058</assert>
		<assert id="BR-BT-05071-0187" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0187</assert>
		<assert id="BR-BT-05101-0160" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0160</assert>
		<assert id="BR-BT-05101-0211" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0211</assert>
		<assert id="BR-BT-05101-0262" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0262</assert>
		<assert id="BR-BT-05121-0058" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0058</assert>
		<assert id="BR-BT-05121-0213" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0213</assert>
		<assert id="BR-BT-05131-0058" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0058</assert>
		<assert id="BR-BT-05141-0058" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0058</assert>
		<assert id="BR-BT-05141-0187" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0187</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '5']">
		<assert id="BR-BT-00727-0188" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0188</assert>
		<assert id="BR-BT-00728-0060" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0060</assert>
		<assert id="BR-BT-05071-0059" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0059</assert>
		<assert id="BR-BT-05071-0188" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0188</assert>
		<assert id="BR-BT-05101-0161" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0161</assert>
		<assert id="BR-BT-05101-0212" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0212</assert>
		<assert id="BR-BT-05101-0263" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0263</assert>
		<assert id="BR-BT-05121-0059" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0059</assert>
		<assert id="BR-BT-05121-0214" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0214</assert>
		<assert id="BR-BT-05131-0059" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0059</assert>
		<assert id="BR-BT-05141-0059" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0059</assert>
		<assert id="BR-BT-05141-0188" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0188</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:RealizedLocation[$noticeSubType = '6']">
		<assert id="BR-BT-00727-0189" role="ERROR" test="count(cac:Address/cbc:Region) = 0 or (not(cac:Address/cbc:CountrySubentityCode[normalize-space(text())]))">rule|message|BR-BT-00727-0189</assert>
		<assert id="BR-BT-00728-0061" role="ERROR" test="count(cbc:Description) = 0 or (cac:Address/cbc:Region/normalize-space(text())!='' or cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-00728-0061</assert>
		<assert id="BR-BT-05071-0060" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) &gt; 0 or not(not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-05071-0060</assert>
		<assert id="BR-BT-05071-0189" role="ERROR" test="count(cac:Address/cbc:CountrySubentityCode) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05071-0189</assert>
		<assert id="BR-BT-05101-0162" role="ERROR" test="count(cac:Address/cbc:StreetName) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05101-0162</assert>
		<assert id="BR-BT-05101-0213" role="ERROR" test="count(cac:Address/cbc:AdditionalStreetName) = 0 or (cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0213</assert>
		<assert id="BR-BT-05101-0264" role="ERROR" test="count(cac:Address/cac:AddressLine/cbc:Line) = 0 or (cac:Address/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-05101-0264</assert>
		<assert id="BR-BT-05121-0060" role="ERROR" test="count(cac:Address/cbc:PostalZone) = 0 or (cac:Address/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-05121-0060</assert>
		<assert id="BR-BT-05121-0215" role="ERROR" test="count(cac:Address/cbc:PostalZone) &gt; 0 or not(cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF') and cac:Address/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-05121-0215</assert>
		<assert id="BR-BT-05131-0060" role="ERROR" test="count(cac:Address/cbc:CityName) = 0 or (not(cac:Address/cbc:Region[normalize-space(text())]) and cac:Address/cac:Country/cbc:IdentificationCode/normalize-space(text())!='')">rule|message|BR-BT-05131-0060</assert>
		<assert id="BR-BT-05141-0060" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0060</assert>
		<assert id="BR-BT-05141-0189" role="ERROR" test="count(cac:Address/cac:Country/cbc:IdentificationCode) = 0 or (cac:Address/cbc:Region/normalize-space(text())='anyw-cou' or not(cac:Address/cbc:Region[normalize-space(text())]))">rule|message|BR-BT-05141-0189</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingProcess[$noticeSubType = '4']">
		<assert id="BR-BT-00115-0007" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) &gt; 0 or not(/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0007</assert>
		<assert id="BR-BT-00115-0106" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) = 0 or (/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0106</assert>
		<assert id="BR-BT-01251-0007" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0007</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingProcess[$noticeSubType = '5']">
		<assert id="BR-BT-00115-0008" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) &gt; 0 or not(/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0008</assert>
		<assert id="BR-BT-00115-0107" role="ERROR" test="count(cbc:GovernmentAgreementConstraintIndicator) = 0 or (/*/cac:ContractingParty/cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text())=('cga','ra','la','body-pl','body-pl-cga','body-pl-ra','body-pl-la','pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','org-sub-cga','org-sub-ra','org-sub-la','def-cont','int-org','eu-ins-bod-ag','rl-aut','eu-int-org'))">rule|message|BR-BT-00115-0107</assert>
		<assert id="BR-BT-01251-0008" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0008</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingProcess[$noticeSubType = '6']">
		<assert id="BR-BT-01251-0009" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ReferencedDocumentInternalAddress) &gt; 0 or not(cac:NoticeDocumentReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01251-0009</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '4']">
		<assert id="BR-OPT-00301-0613" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-0613</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms[$noticeSubType = '5']">
		<assert id="BR-OPT-00301-0614" role="ERROR" test="count(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:PresentationPeriod/cbc:Description/normalize-space(text())!='')">rule|message|BR-OPT-00301-0614</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '4']">
		<assert id="BR-BT-00708-0103" role="ERROR" test="count(cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0103</assert>
		<assert id="BR-BT-00737-0103" role="ERROR" test="count(cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0103</assert>
		<assert id="BR-OPT-00140-0007" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0007</assert>
		<assert id="BR-OPT-00140-0119" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0119</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '5']">
		<assert id="BR-BT-00708-0104" role="ERROR" test="count(cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0104</assert>
		<assert id="BR-BT-00737-0104" role="ERROR" test="count(cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0104</assert>
		<assert id="BR-OPT-00140-0008" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0008</assert>
		<assert id="BR-OPT-00140-0120" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0120</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[$noticeSubType = '6']">
		<assert id="BR-BT-00708-0105" role="ERROR" test="count(cbc:LanguageID[not(../cbc:DocumentStatusCode/text()='non-official')]) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00708-0105</assert>
		<assert id="BR-BT-00737-0105" role="ERROR" test="count(cbc:LanguageID[../cbc:DocumentStatusCode/text()='non-official']) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-BT-00737-0105</assert>
		<assert id="BR-OPT-00140-0009" role="ERROR" test="count(cbc:ID) &gt; 0 or not(cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0009</assert>
		<assert id="BR-OPT-00140-0121" role="ERROR" test="count(cbc:ID) = 0 or (cbc:DocumentType/normalize-space(text())!='')">rule|message|BR-OPT-00140-0121</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '4']">
		<assert id="BR-BT-00615-0007" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0007</assert>
		<assert id="BR-BT-00615-0114" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0114</assert>
		<assert id="BR-BT-00707-0106" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '5']">
		<assert id="BR-BT-00615-0008" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0008</assert>
		<assert id="BR-BT-00615-0115" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0115</assert>
		<assert id="BR-BT-00707-0107" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[cbc:DocumentType/text()='restricted-document'][$noticeSubType = '6']">
		<assert id="BR-BT-00615-0009" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0009</assert>
		<assert id="BR-BT-00615-0116" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00615-0116</assert>
		<assert id="BR-BT-00707-0108" role="ERROR" test="count(cbc:DocumentTypeCode) = 0 or (cbc:DocumentType/normalize-space(text())='restricted-document')">rule|message|BR-BT-00707-0108</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '4']">
		<assert id="BR-BT-00015-0007" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0007</assert>
		<assert id="BR-BT-00015-0114" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0114</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '5']">
		<assert id="BR-BT-00015-0008" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0008</assert>
		<assert id="BR-BT-00015-0115" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0115</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:CallForTendersDocumentReference[not(cbc:DocumentType/text()='restricted-document')][$noticeSubType = '6']">
		<assert id="BR-BT-00015-0009" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) &gt; 0 or not(cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0009</assert>
		<assert id="BR-BT-00015-0116" role="ERROR" test="count(cac:Attachment/cac:ExternalReference/cbc:URI) = 0 or (cbc:DocumentType/normalize-space(text())='non-restricted-document')">rule|message|BR-BT-00015-0116</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '23']">
		<assert id="BR-BT-00763-0030" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0030</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '24']">
		<assert id="BR-BT-00763-0031" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0031</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '20']">
		<assert id="BR-BT-00763-0027" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0027</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '21']">
		<assert id="BR-BT-00763-0028" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0028</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '16']">
		<assert id="BR-BT-00763-0022" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0022</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '17']">
		<assert id="BR-BT-00763-0023" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0023</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '19']">
		<assert id="BR-BT-00763-0025" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0025</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '18']">
		<assert id="BR-BT-00763-0024" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0024</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '12']">
		<assert id="BR-BT-00763-0018" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0018</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '13']">
		<assert id="BR-BT-00763-0019" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0019</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '14']">
		<assert id="BR-BT-00763-0020" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0020</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '10']">
		<assert id="BR-BT-00763-0015" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0015</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '11']">
		<assert id="BR-BT-00763-0016" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0016</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '7']">
		<assert id="BR-BT-00763-0012" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0012</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '8']">
		<assert id="BR-BT-00763-0013" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0013</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '9']">
		<assert id="BR-BT-00763-0014" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0014</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = '22']">
		<assert id="BR-BT-00763-0029" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0029</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00763-0017" role="ERROR" test="count(cbc:PartPresentationCode) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00763-0017</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[$noticeSubType = '16']">
		<assert id="BR-BT-00106-0022" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0022</assert>
		<assert id="BR-BT-00106-0053" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) = 0 or (../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0053</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[$noticeSubType = '17']">
		<assert id="BR-BT-00106-0023" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0023</assert>
		<assert id="BR-BT-00106-0054" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) = 0 or (../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0054</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[$noticeSubType = '18']">
		<assert id="BR-BT-00106-0024" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0024</assert>
		<assert id="BR-BT-00106-0055" role="ERROR" test="count(cbc:ProcessReasonCode[@listName='accelerated-procedure']) = 0 or (../cbc:ProcedureCode/normalize-space(text())=('open','restricted','neg-w-call'))">rule|message|BR-BT-00106-0055</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure'][$noticeSubType = '16']">
		<assert id="BR-BT-01351-0022" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(cbc:ProcessReasonCode[@listName='accelerated-procedure']/normalize-space(text())='accelerated-procedure-justification')">rule|message|BR-BT-01351-0022</assert>
		<assert id="BR-BT-01351-0054" role="ERROR" test="count(cbc:ProcessReason) = 0 or (cbc:ProcessReasonCode[@listName='accelerated-procedure']/normalize-space(text())='accelerated-procedure-justification')">rule|message|BR-BT-01351-0054</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure'][$noticeSubType = '18']">
		<assert id="BR-BT-01351-0024" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(cbc:ProcessReasonCode[@listName='accelerated-procedure']/normalize-space(text())='accelerated-procedure-justification')">rule|message|BR-BT-01351-0024</assert>
		<assert id="BR-BT-01351-0055" role="ERROR" test="count(cbc:ProcessReason) = 0 or (cbc:ProcessReasonCode[@listName='accelerated-procedure']/normalize-space(text())='accelerated-procedure-justification')">rule|message|BR-BT-01351-0055</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '33']">
		<assert id="BR-BT-00135-0042" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0042</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '34']">
		<assert id="BR-BT-00135-0043" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0043</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '35']">
		<assert id="BR-BT-00136-0044" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0044</assert>
		<assert id="BR-BT-00136-0062" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0062</assert>
		<assert id="BR-BT-01252-0044" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0044</assert>
		<assert id="BR-BT-01252-0062" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0062</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '29']">
		<assert id="BR-BT-00135-0036" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0036</assert>
		<assert id="BR-BT-00135-0058" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0058</assert>
		<assert id="BR-BT-00136-0036" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0036</assert>
		<assert id="BR-BT-00136-0058" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0058</assert>
		<assert id="BR-BT-01252-0036" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0036</assert>
		<assert id="BR-BT-01252-0058" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0058</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '30']">
		<assert id="BR-BT-00135-0037" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0037</assert>
		<assert id="BR-BT-00135-0059" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0059</assert>
		<assert id="BR-BT-00136-0037" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0037</assert>
		<assert id="BR-BT-00136-0059" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0059</assert>
		<assert id="BR-BT-01252-0037" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0037</assert>
		<assert id="BR-BT-01252-0059" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0059</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '32']">
		<assert id="BR-BT-00136-0039" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0039</assert>
		<assert id="BR-BT-00136-0061" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0061</assert>
		<assert id="BR-BT-01252-0039" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0039</assert>
		<assert id="BR-BT-01252-0061" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0061</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '31']">
		<assert id="BR-BT-00135-0038" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0038</assert>
		<assert id="BR-BT-00135-0060" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0060</assert>
		<assert id="BR-BT-00136-0038" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0038</assert>
		<assert id="BR-BT-00136-0060" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0060</assert>
		<assert id="BR-BT-01252-0038" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0038</assert>
		<assert id="BR-BT-01252-0060" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0060</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '25']">
		<assert id="BR-BT-00135-0032" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0032</assert>
		<assert id="BR-BT-00135-0054" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0054</assert>
		<assert id="BR-BT-00136-0032" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0032</assert>
		<assert id="BR-BT-00136-0054" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0054</assert>
		<assert id="BR-BT-01252-0032" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0032</assert>
		<assert id="BR-BT-01252-0054" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0054</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '26']">
		<assert id="BR-BT-00135-0033" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0033</assert>
		<assert id="BR-BT-00135-0055" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0055</assert>
		<assert id="BR-BT-00136-0033" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0033</assert>
		<assert id="BR-BT-00136-0055" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0055</assert>
		<assert id="BR-BT-01252-0033" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0033</assert>
		<assert id="BR-BT-01252-0055" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0055</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '28']">
		<assert id="BR-BT-00135-0035" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0035</assert>
		<assert id="BR-BT-00135-0057" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0057</assert>
		<assert id="BR-BT-00136-0035" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0035</assert>
		<assert id="BR-BT-00136-0057" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0057</assert>
		<assert id="BR-BT-01252-0035" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0035</assert>
		<assert id="BR-BT-01252-0057" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0057</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = '27']">
		<assert id="BR-BT-00135-0034" role="ERROR" test="count(cbc:ProcessReason) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0034</assert>
		<assert id="BR-BT-00135-0056" role="ERROR" test="count(cbc:ProcessReason) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00135-0056</assert>
		<assert id="BR-BT-00136-0034" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0034</assert>
		<assert id="BR-BT-00136-0056" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0056</assert>
		<assert id="BR-BT-01252-0034" role="ERROR" test="count(cbc:Description) &gt; 0 or not(cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0034</assert>
		<assert id="BR-BT-01252-0056" role="ERROR" test="count(cbc:Description) = 0 or (cbc:ProcessReasonCode/normalize-space(text())=('irregular', 'additional', 'repetition', 'unsuitable', 'existing', 'contest'))">rule|message|BR-BT-01252-0056</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification'][$noticeSubType = 'T01']">
		<assert id="BR-BT-00136-0011" role="ERROR" test="count(cbc:ProcessReasonCode) &gt; 0 or not(../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0011</assert>
		<assert id="BR-BT-00136-0053" role="ERROR" test="count(cbc:ProcessReasonCode) = 0 or (../cbc:ProcedureCode/normalize-space(text())='neg-wo-call')">rule|message|BR-BT-00136-0053</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '23']">
		<assert id="BR-BT-00031-0030" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0030</assert>
		<assert id="BR-BT-00031-0081" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0081</assert>
		<assert id="BR-BT-00033-0030" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0030</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '24']">
		<assert id="BR-BT-00031-0031" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0031</assert>
		<assert id="BR-BT-00031-0082" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0082</assert>
		<assert id="BR-BT-00033-0031" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0031</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '20']">
		<assert id="BR-BT-00031-0027" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0027</assert>
		<assert id="BR-BT-00031-0078" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0078</assert>
		<assert id="BR-BT-00033-0027" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0027</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '21']">
		<assert id="BR-BT-00031-0028" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0028</assert>
		<assert id="BR-BT-00031-0079" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0079</assert>
		<assert id="BR-BT-00033-0028" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0028</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '16']">
		<assert id="BR-BT-00031-0022" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0022</assert>
		<assert id="BR-BT-00031-0073" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All' or /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0073</assert>
		<assert id="BR-BT-00033-0022" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0022</assert>
		<assert id="BR-BT-00033-0053" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0053</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '17']">
		<assert id="BR-BT-00031-0023" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0023</assert>
		<assert id="BR-BT-00031-0074" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All' or /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0074</assert>
		<assert id="BR-BT-00033-0023" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0023</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '19']">
		<assert id="BR-BT-00031-0025" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0025</assert>
		<assert id="BR-BT-00031-0076" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0076</assert>
		<assert id="BR-BT-00033-0025" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0025</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '18']">
		<assert id="BR-BT-00031-0024" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0024</assert>
		<assert id="BR-BT-00031-0075" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0075</assert>
		<assert id="BR-BT-00033-0024" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0024</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '12']">
		<assert id="BR-BT-00031-0018" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0018</assert>
		<assert id="BR-BT-00031-0069" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0069</assert>
		<assert id="BR-BT-00033-0018" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0018</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '13']">
		<assert id="BR-BT-00031-0019" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0019</assert>
		<assert id="BR-BT-00031-0070" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0070</assert>
		<assert id="BR-BT-00033-0019" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0019</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '14']">
		<assert id="BR-BT-00031-0020" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0020</assert>
		<assert id="BR-BT-00031-0071" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0071</assert>
		<assert id="BR-BT-00033-0020" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0020</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '10']">
		<assert id="BR-BT-00031-0015" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0015</assert>
		<assert id="BR-BT-00031-0066" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0066</assert>
		<assert id="BR-BT-00033-0015" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0015</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '11']">
		<assert id="BR-BT-00031-0016" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0016</assert>
		<assert id="BR-BT-00031-0067" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0067</assert>
		<assert id="BR-BT-00033-0016" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0016</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '7']">
		<assert id="BR-BT-00031-0012" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0012</assert>
		<assert id="BR-BT-00031-0063" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0063</assert>
		<assert id="BR-BT-00033-0012" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0012</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '8']">
		<assert id="BR-BT-00031-0013" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0013</assert>
		<assert id="BR-BT-00031-0064" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0064</assert>
		<assert id="BR-BT-00033-0013" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0013</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '9']">
		<assert id="BR-BT-00031-0014" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0014</assert>
		<assert id="BR-BT-00031-0065" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0065</assert>
		<assert id="BR-BT-00033-0014" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0014</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = '22']">
		<assert id="BR-BT-00031-0029" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0029</assert>
		<assert id="BR-BT-00031-0080" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0080</assert>
		<assert id="BR-BT-00033-0029" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0029</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00031-0017" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00031-0017</assert>
		<assert id="BR-BT-00031-0068" role="ERROR" test="count(cbc:MaximumLotsSubmittedNumeric) &gt; 0 or not(/*/cac:TenderingProcess/cbc:PartPresentationCode/normalize-space(text())='All')">rule|message|BR-BT-00031-0068</assert>
		<assert id="BR-BT-00033-0017" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0017</assert>
		<assert id="BR-BT-00033-0052" role="ERROR" test="count(cbc:MaximumLotsAwardedNumeric) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())!='LOT-0000')">rule|message|BR-BT-00033-0052</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '36']">
		<assert id="BR-BT-00141-0045" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0045</assert>
		<assert id="BR-BT-00718-0045" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0045</assert>
		<assert id="BR-BT-00719-0045" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0045</assert>
		<assert id="BR-BT-00719-0095" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0095</assert>
		<assert id="BR-BT-13716-0094" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0094</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '37']">
		<assert id="BR-BT-00141-0046" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0046</assert>
		<assert id="BR-BT-00718-0046" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0046</assert>
		<assert id="BR-BT-00719-0046" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0046</assert>
		<assert id="BR-BT-00719-0096" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0096</assert>
		<assert id="BR-BT-13716-0095" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0095</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '38']">
		<assert id="BR-BT-00141-0047" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0047</assert>
		<assert id="BR-BT-00718-0047" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0047</assert>
		<assert id="BR-BT-00719-0047" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0047</assert>
		<assert id="BR-BT-00719-0097" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0097</assert>
		<assert id="BR-BT-13716-0096" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0096</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '39']">
		<assert id="BR-BT-00141-0048" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0048</assert>
		<assert id="BR-BT-00718-0048" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0048</assert>
		<assert id="BR-BT-00719-0048" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0048</assert>
		<assert id="BR-BT-00719-0098" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0098</assert>
		<assert id="BR-BT-13716-0097" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0097</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '40']">
		<assert id="BR-BT-00141-0049" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0049</assert>
		<assert id="BR-BT-00718-0049" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0049</assert>
		<assert id="BR-BT-00719-0049" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0049</assert>
		<assert id="BR-BT-00719-0099" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0099</assert>
		<assert id="BR-BT-13716-0098" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0098</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '33']">
		<assert id="BR-BT-00141-0042" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0042</assert>
		<assert id="BR-BT-00718-0042" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0042</assert>
		<assert id="BR-BT-00719-0042" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0042</assert>
		<assert id="BR-BT-00719-0092" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0092</assert>
		<assert id="BR-BT-13716-0091" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0091</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '34']">
		<assert id="BR-BT-00141-0043" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0043</assert>
		<assert id="BR-BT-00718-0043" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0043</assert>
		<assert id="BR-BT-00719-0043" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0043</assert>
		<assert id="BR-BT-00719-0093" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0093</assert>
		<assert id="BR-BT-13716-0092" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0092</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '35']">
		<assert id="BR-BT-00141-0044" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0044</assert>
		<assert id="BR-BT-00718-0044" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0044</assert>
		<assert id="BR-BT-00719-0044" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0044</assert>
		<assert id="BR-BT-00719-0094" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0094</assert>
		<assert id="BR-BT-13716-0093" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0093</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '29']">
		<assert id="BR-BT-00141-0036" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0036</assert>
		<assert id="BR-BT-00718-0036" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0036</assert>
		<assert id="BR-BT-00719-0036" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0036</assert>
		<assert id="BR-BT-00719-0086" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0086</assert>
		<assert id="BR-BT-13716-0085" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0085</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '30']">
		<assert id="BR-BT-00141-0037" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0037</assert>
		<assert id="BR-BT-00718-0037" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0037</assert>
		<assert id="BR-BT-00719-0037" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0037</assert>
		<assert id="BR-BT-00719-0087" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0087</assert>
		<assert id="BR-BT-13716-0086" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0086</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '32']">
		<assert id="BR-BT-00141-0039" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0039</assert>
		<assert id="BR-BT-00718-0039" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0039</assert>
		<assert id="BR-BT-00719-0039" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0039</assert>
		<assert id="BR-BT-00719-0089" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0089</assert>
		<assert id="BR-BT-13716-0088" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0088</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '31']">
		<assert id="BR-BT-00141-0038" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0038</assert>
		<assert id="BR-BT-00718-0038" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0038</assert>
		<assert id="BR-BT-00719-0038" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0038</assert>
		<assert id="BR-BT-00719-0088" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0088</assert>
		<assert id="BR-BT-13716-0087" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0087</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '23']">
		<assert id="BR-BT-00141-0030" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0030</assert>
		<assert id="BR-BT-00718-0030" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0030</assert>
		<assert id="BR-BT-00719-0030" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0030</assert>
		<assert id="BR-BT-00719-0080" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0080</assert>
		<assert id="BR-BT-13716-0079" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0079</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '24']">
		<assert id="BR-BT-00141-0031" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0031</assert>
		<assert id="BR-BT-00718-0031" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0031</assert>
		<assert id="BR-BT-00719-0031" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0031</assert>
		<assert id="BR-BT-00719-0081" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0081</assert>
		<assert id="BR-BT-13716-0080" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0080</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '20']">
		<assert id="BR-BT-00141-0027" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0027</assert>
		<assert id="BR-BT-00718-0027" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0027</assert>
		<assert id="BR-BT-00719-0027" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0027</assert>
		<assert id="BR-BT-00719-0077" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0077</assert>
		<assert id="BR-BT-13716-0076" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0076</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '21']">
		<assert id="BR-BT-00141-0028" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0028</assert>
		<assert id="BR-BT-00718-0028" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0028</assert>
		<assert id="BR-BT-00719-0028" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0028</assert>
		<assert id="BR-BT-00719-0078" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0078</assert>
		<assert id="BR-BT-13716-0077" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0077</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '16']">
		<assert id="BR-BT-00141-0022" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0022</assert>
		<assert id="BR-BT-00718-0022" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0022</assert>
		<assert id="BR-BT-00719-0022" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0022</assert>
		<assert id="BR-BT-00719-0072" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0072</assert>
		<assert id="BR-BT-13716-0071" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0071</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '17']">
		<assert id="BR-BT-00141-0023" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0023</assert>
		<assert id="BR-BT-00718-0023" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0023</assert>
		<assert id="BR-BT-00719-0023" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0023</assert>
		<assert id="BR-BT-00719-0073" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0073</assert>
		<assert id="BR-BT-13716-0072" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0072</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '19']">
		<assert id="BR-BT-00141-0025" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0025</assert>
		<assert id="BR-BT-00718-0025" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0025</assert>
		<assert id="BR-BT-00719-0025" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0025</assert>
		<assert id="BR-BT-00719-0075" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0075</assert>
		<assert id="BR-BT-13716-0074" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0074</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '18']">
		<assert id="BR-BT-00141-0024" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0024</assert>
		<assert id="BR-BT-00718-0024" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0024</assert>
		<assert id="BR-BT-00719-0024" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0024</assert>
		<assert id="BR-BT-00719-0074" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0074</assert>
		<assert id="BR-BT-13716-0073" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0073</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '1']">
		<assert id="BR-BT-00141-0004" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0004</assert>
		<assert id="BR-BT-00718-0004" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0004</assert>
		<assert id="BR-BT-00719-0004" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0004</assert>
		<assert id="BR-BT-00719-0054" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0054</assert>
		<assert id="BR-BT-13716-0053" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '2']">
		<assert id="BR-BT-00141-0005" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0005</assert>
		<assert id="BR-BT-00718-0005" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0005</assert>
		<assert id="BR-BT-00719-0005" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0005</assert>
		<assert id="BR-BT-00719-0055" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0055</assert>
		<assert id="BR-BT-13716-0054" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '3']">
		<assert id="BR-BT-00141-0006" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0006</assert>
		<assert id="BR-BT-00718-0006" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0006</assert>
		<assert id="BR-BT-00719-0006" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0006</assert>
		<assert id="BR-BT-00719-0056" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0056</assert>
		<assert id="BR-BT-13716-0055" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0055</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '12']">
		<assert id="BR-BT-00141-0018" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0018</assert>
		<assert id="BR-BT-00718-0018" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0018</assert>
		<assert id="BR-BT-00719-0018" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0018</assert>
		<assert id="BR-BT-00719-0068" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0068</assert>
		<assert id="BR-BT-13716-0067" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0067</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '13']">
		<assert id="BR-BT-00141-0019" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0019</assert>
		<assert id="BR-BT-00718-0019" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0019</assert>
		<assert id="BR-BT-00719-0019" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0019</assert>
		<assert id="BR-BT-00719-0069" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0069</assert>
		<assert id="BR-BT-13716-0068" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0068</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '14']">
		<assert id="BR-BT-00141-0020" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0020</assert>
		<assert id="BR-BT-00718-0020" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0020</assert>
		<assert id="BR-BT-00719-0020" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0020</assert>
		<assert id="BR-BT-00719-0070" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0070</assert>
		<assert id="BR-BT-13716-0069" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0069</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '10']">
		<assert id="BR-BT-00141-0015" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0015</assert>
		<assert id="BR-BT-00718-0015" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0015</assert>
		<assert id="BR-BT-00719-0015" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0015</assert>
		<assert id="BR-BT-00719-0065" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0065</assert>
		<assert id="BR-BT-13716-0064" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0064</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '11']">
		<assert id="BR-BT-00141-0016" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0016</assert>
		<assert id="BR-BT-00718-0016" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0016</assert>
		<assert id="BR-BT-00719-0016" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0016</assert>
		<assert id="BR-BT-00719-0066" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0066</assert>
		<assert id="BR-BT-13716-0065" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0065</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '4']">
		<assert id="BR-BT-00141-0007" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0007</assert>
		<assert id="BR-BT-00718-0007" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0007</assert>
		<assert id="BR-BT-00719-0007" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0007</assert>
		<assert id="BR-BT-00719-0057" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0057</assert>
		<assert id="BR-BT-13716-0056" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '5']">
		<assert id="BR-BT-00141-0008" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0008</assert>
		<assert id="BR-BT-00718-0008" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0008</assert>
		<assert id="BR-BT-00719-0008" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0008</assert>
		<assert id="BR-BT-00719-0058" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0058</assert>
		<assert id="BR-BT-13716-0057" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0057</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '6']">
		<assert id="BR-BT-00141-0009" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0009</assert>
		<assert id="BR-BT-00718-0009" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0009</assert>
		<assert id="BR-BT-00719-0009" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0009</assert>
		<assert id="BR-BT-00719-0059" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0059</assert>
		<assert id="BR-BT-13716-0058" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0058</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '7']">
		<assert id="BR-BT-00141-0012" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0012</assert>
		<assert id="BR-BT-00718-0012" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0012</assert>
		<assert id="BR-BT-00719-0012" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0012</assert>
		<assert id="BR-BT-00719-0062" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0062</assert>
		<assert id="BR-BT-13716-0061" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0061</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '8']">
		<assert id="BR-BT-00141-0013" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0013</assert>
		<assert id="BR-BT-00718-0013" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0013</assert>
		<assert id="BR-BT-00719-0013" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0013</assert>
		<assert id="BR-BT-00719-0063" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0063</assert>
		<assert id="BR-BT-13716-0062" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0062</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '9']">
		<assert id="BR-BT-00141-0014" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0014</assert>
		<assert id="BR-BT-00718-0014" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0014</assert>
		<assert id="BR-BT-00719-0014" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0014</assert>
		<assert id="BR-BT-00719-0064" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0064</assert>
		<assert id="BR-BT-13716-0063" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0063</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '15']">
		<assert id="BR-BT-00141-0021" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0021</assert>
		<assert id="BR-BT-00718-0021" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0021</assert>
		<assert id="BR-BT-00719-0021" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0021</assert>
		<assert id="BR-BT-00719-0071" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0071</assert>
		<assert id="BR-BT-13716-0070" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0070</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '22']">
		<assert id="BR-BT-00141-0029" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0029</assert>
		<assert id="BR-BT-00718-0029" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0029</assert>
		<assert id="BR-BT-00719-0029" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0029</assert>
		<assert id="BR-BT-00719-0079" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0079</assert>
		<assert id="BR-BT-13716-0078" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0078</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '25']">
		<assert id="BR-BT-00141-0032" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0032</assert>
		<assert id="BR-BT-00718-0032" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0032</assert>
		<assert id="BR-BT-00719-0032" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0032</assert>
		<assert id="BR-BT-00719-0082" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0082</assert>
		<assert id="BR-BT-13716-0081" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0081</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '26']">
		<assert id="BR-BT-00141-0033" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0033</assert>
		<assert id="BR-BT-00718-0033" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0033</assert>
		<assert id="BR-BT-00719-0033" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0033</assert>
		<assert id="BR-BT-00719-0083" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0083</assert>
		<assert id="BR-BT-13716-0082" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0082</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '28']">
		<assert id="BR-BT-00141-0035" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0035</assert>
		<assert id="BR-BT-00718-0035" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0035</assert>
		<assert id="BR-BT-00719-0035" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0035</assert>
		<assert id="BR-BT-00719-0085" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0085</assert>
		<assert id="BR-BT-13716-0084" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0084</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = '27']">
		<assert id="BR-BT-00141-0034" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0034</assert>
		<assert id="BR-BT-00718-0034" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0034</assert>
		<assert id="BR-BT-00719-0034" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0034</assert>
		<assert id="BR-BT-00719-0084" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0084</assert>
		<assert id="BR-BT-13716-0083" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0083</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = 'T01']">
		<assert id="BR-BT-00141-0011" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0011</assert>
		<assert id="BR-BT-00718-0011" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0011</assert>
		<assert id="BR-BT-00719-0011" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0011</assert>
		<assert id="BR-BT-00719-0061" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0061</assert>
		<assert id="BR-BT-13716-0060" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0060</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = 'T02']">
		<assert id="BR-BT-00141-0041" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0041</assert>
		<assert id="BR-BT-00718-0041" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0041</assert>
		<assert id="BR-BT-00719-0041" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0041</assert>
		<assert id="BR-BT-00719-0091" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0091</assert>
		<assert id="BR-BT-13716-0090" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0090</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:Change[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00141-0017" role="ERROR" test="count(efbc:ChangeDescription) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00141-0017</assert>
		<assert id="BR-BT-00718-0017" role="ERROR" test="count(efbc:ProcurementDocumentsChangeIndicator) = 0 or (efbc:ChangedSectionIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00718-0017</assert>
		<assert id="BR-BT-00719-0017" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) &gt; 0 or not(efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0017</assert>
		<assert id="BR-BT-00719-0067" role="ERROR" test="count(efbc:ProcurementDocumentsChangeDate) = 0 or (efbc:ProcurementDocumentsChangeIndicator/normalize-space(text())='true')">rule|message|BR-BT-00719-0067</assert>
		<assert id="BR-BT-13716-0066" role="ERROR" test="count(efbc:ChangedSectionIdentifier) = 0 or (/*/cbc:NoticeTypeCode/normalize-space(text())='corr')">rule|message|BR-BT-13716-0066</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '36']">
		<assert id="BR-BT-00140-0045" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0045</assert>
		<assert id="BR-BT-00140-0095" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0095</assert>
		<assert id="BR-BT-00762-0045" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0045</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '37']">
		<assert id="BR-BT-00140-0046" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0046</assert>
		<assert id="BR-BT-00140-0096" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0096</assert>
		<assert id="BR-BT-00762-0046" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0046</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '38']">
		<assert id="BR-BT-00140-0047" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0047</assert>
		<assert id="BR-BT-00140-0097" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0097</assert>
		<assert id="BR-BT-00762-0047" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0047</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '39']">
		<assert id="BR-BT-00140-0048" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0048</assert>
		<assert id="BR-BT-00140-0098" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0098</assert>
		<assert id="BR-BT-00762-0048" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0048</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '40']">
		<assert id="BR-BT-00140-0049" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0049</assert>
		<assert id="BR-BT-00140-0099" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0099</assert>
		<assert id="BR-BT-00762-0049" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0049</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '33']">
		<assert id="BR-BT-00140-0042" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0042</assert>
		<assert id="BR-BT-00140-0092" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0092</assert>
		<assert id="BR-BT-00762-0042" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0042</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '34']">
		<assert id="BR-BT-00140-0043" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0043</assert>
		<assert id="BR-BT-00140-0093" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0093</assert>
		<assert id="BR-BT-00762-0043" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0043</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '35']">
		<assert id="BR-BT-00140-0044" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0044</assert>
		<assert id="BR-BT-00140-0094" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0094</assert>
		<assert id="BR-BT-00762-0044" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0044</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '29']">
		<assert id="BR-BT-00140-0036" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0036</assert>
		<assert id="BR-BT-00140-0086" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0086</assert>
		<assert id="BR-BT-00762-0036" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0036</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '30']">
		<assert id="BR-BT-00140-0037" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0037</assert>
		<assert id="BR-BT-00140-0087" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0087</assert>
		<assert id="BR-BT-00762-0037" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0037</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '32']">
		<assert id="BR-BT-00140-0039" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0039</assert>
		<assert id="BR-BT-00140-0089" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0089</assert>
		<assert id="BR-BT-00762-0039" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0039</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '31']">
		<assert id="BR-BT-00140-0038" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0038</assert>
		<assert id="BR-BT-00140-0088" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0088</assert>
		<assert id="BR-BT-00762-0038" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0038</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '23']">
		<assert id="BR-BT-00140-0030" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0030</assert>
		<assert id="BR-BT-00140-0080" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0080</assert>
		<assert id="BR-BT-00762-0030" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0030</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '24']">
		<assert id="BR-BT-00140-0031" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0031</assert>
		<assert id="BR-BT-00140-0081" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0081</assert>
		<assert id="BR-BT-00762-0031" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0031</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '20']">
		<assert id="BR-BT-00140-0027" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0027</assert>
		<assert id="BR-BT-00140-0077" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0077</assert>
		<assert id="BR-BT-00762-0027" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0027</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '21']">
		<assert id="BR-BT-00140-0028" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0028</assert>
		<assert id="BR-BT-00140-0078" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0078</assert>
		<assert id="BR-BT-00762-0028" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0028</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '16']">
		<assert id="BR-BT-00140-0022" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0022</assert>
		<assert id="BR-BT-00140-0072" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0072</assert>
		<assert id="BR-BT-00762-0022" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0022</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '17']">
		<assert id="BR-BT-00140-0023" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0023</assert>
		<assert id="BR-BT-00140-0073" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0073</assert>
		<assert id="BR-BT-00762-0023" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0023</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '19']">
		<assert id="BR-BT-00140-0025" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0025</assert>
		<assert id="BR-BT-00140-0075" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0075</assert>
		<assert id="BR-BT-00762-0025" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0025</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '18']">
		<assert id="BR-BT-00140-0024" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0024</assert>
		<assert id="BR-BT-00140-0074" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0074</assert>
		<assert id="BR-BT-00762-0024" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0024</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '1']">
		<assert id="BR-BT-00140-0004" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0004</assert>
		<assert id="BR-BT-00140-0054" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0054</assert>
		<assert id="BR-BT-00762-0004" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0004</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '2']">
		<assert id="BR-BT-00140-0005" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0005</assert>
		<assert id="BR-BT-00140-0055" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0055</assert>
		<assert id="BR-BT-00762-0005" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0005</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '3']">
		<assert id="BR-BT-00140-0006" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0006</assert>
		<assert id="BR-BT-00140-0056" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0056</assert>
		<assert id="BR-BT-00762-0006" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0006</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '12']">
		<assert id="BR-BT-00140-0018" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0018</assert>
		<assert id="BR-BT-00140-0068" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0068</assert>
		<assert id="BR-BT-00762-0018" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0018</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '13']">
		<assert id="BR-BT-00140-0019" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0019</assert>
		<assert id="BR-BT-00140-0069" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0069</assert>
		<assert id="BR-BT-00762-0019" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0019</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '14']">
		<assert id="BR-BT-00140-0020" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0020</assert>
		<assert id="BR-BT-00140-0070" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0070</assert>
		<assert id="BR-BT-00762-0020" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0020</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '10']">
		<assert id="BR-BT-00140-0015" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0015</assert>
		<assert id="BR-BT-00140-0065" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0065</assert>
		<assert id="BR-BT-00762-0015" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0015</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '11']">
		<assert id="BR-BT-00140-0016" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0016</assert>
		<assert id="BR-BT-00140-0066" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0066</assert>
		<assert id="BR-BT-00762-0016" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0016</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '4']">
		<assert id="BR-BT-00140-0007" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0007</assert>
		<assert id="BR-BT-00140-0057" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0057</assert>
		<assert id="BR-BT-00762-0007" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0007</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '5']">
		<assert id="BR-BT-00140-0008" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0008</assert>
		<assert id="BR-BT-00140-0058" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0058</assert>
		<assert id="BR-BT-00762-0008" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0008</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '6']">
		<assert id="BR-BT-00140-0009" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0009</assert>
		<assert id="BR-BT-00140-0059" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0059</assert>
		<assert id="BR-BT-00762-0009" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0009</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '7']">
		<assert id="BR-BT-00140-0012" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0012</assert>
		<assert id="BR-BT-00140-0062" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0062</assert>
		<assert id="BR-BT-00762-0012" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0012</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '8']">
		<assert id="BR-BT-00140-0013" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0013</assert>
		<assert id="BR-BT-00140-0063" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0063</assert>
		<assert id="BR-BT-00762-0013" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0013</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '9']">
		<assert id="BR-BT-00140-0014" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0014</assert>
		<assert id="BR-BT-00140-0064" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0064</assert>
		<assert id="BR-BT-00762-0014" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0014</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '15']">
		<assert id="BR-BT-00140-0021" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0021</assert>
		<assert id="BR-BT-00140-0071" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0071</assert>
		<assert id="BR-BT-00762-0021" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0021</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '22']">
		<assert id="BR-BT-00140-0029" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0029</assert>
		<assert id="BR-BT-00140-0079" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0079</assert>
		<assert id="BR-BT-00762-0029" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0029</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '25']">
		<assert id="BR-BT-00140-0032" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0032</assert>
		<assert id="BR-BT-00140-0082" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0082</assert>
		<assert id="BR-BT-00762-0032" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0032</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '26']">
		<assert id="BR-BT-00140-0033" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0033</assert>
		<assert id="BR-BT-00140-0083" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0083</assert>
		<assert id="BR-BT-00762-0033" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0033</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '28']">
		<assert id="BR-BT-00140-0035" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0035</assert>
		<assert id="BR-BT-00140-0085" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0085</assert>
		<assert id="BR-BT-00762-0035" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0035</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = '27']">
		<assert id="BR-BT-00140-0034" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0034</assert>
		<assert id="BR-BT-00140-0084" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0084</assert>
		<assert id="BR-BT-00762-0034" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0034</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = 'T01']">
		<assert id="BR-BT-00140-0011" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0011</assert>
		<assert id="BR-BT-00140-0061" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0061</assert>
		<assert id="BR-BT-00762-0011" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0011</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = 'T02']">
		<assert id="BR-BT-00140-0041" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0041</assert>
		<assert id="BR-BT-00140-0091" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0091</assert>
		<assert id="BR-BT-00762-0041" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0041</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00140-0017" role="ERROR" test="count(cbc:ReasonCode) &gt; 0 or not(../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0017</assert>
		<assert id="BR-BT-00140-0067" role="ERROR" test="count(cbc:ReasonCode) = 0 or (../efbc:ChangedNoticeIdentifier/normalize-space(text())!='')">rule|message|BR-BT-00140-0067</assert>
		<assert id="BR-BT-00762-0017" role="ERROR" test="count(efbc:ReasonDescription) = 0 or (cbc:ReasonCode/normalize-space(text())!='')">rule|message|BR-BT-00762-0017</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult[$noticeSubType = '33']">
		<assert id="BR-BT-00118-0042" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) &gt; 0 or not(efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0042</assert>
		<assert id="BR-BT-00118-0055" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) = 0 or (efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0055</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult[$noticeSubType = '34']">
		<assert id="BR-BT-00118-0043" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) &gt; 0 or not(efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0043</assert>
		<assert id="BR-BT-00118-0056" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) = 0 or (efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult[$noticeSubType = '29']">
		<assert id="BR-BT-00118-0036" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) &gt; 0 or not(efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0036</assert>
		<assert id="BR-BT-00118-0052" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) = 0 or (efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0052</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult[$noticeSubType = '30']">
		<assert id="BR-BT-00118-0037" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) &gt; 0 or not(efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0037</assert>
		<assert id="BR-BT-00118-0053" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) = 0 or (efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult[$noticeSubType = '31']">
		<assert id="BR-BT-00118-0038" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) &gt; 0 or not(efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0038</assert>
		<assert id="BR-BT-00118-0054" role="ERROR" test="count(cbc:EstimatedOverallFrameworkContractsAmount) = 0 or (efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00118-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '36']">
		<assert id="BR-BT-00144-0045" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0045</assert>
		<assert id="BR-BT-00144-0060" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0060</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '37']">
		<assert id="BR-BT-00144-0046" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0046</assert>
		<assert id="BR-BT-00144-0061" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0061</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '33']">
		<assert id="BR-BT-00144-0042" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0042</assert>
		<assert id="BR-BT-00144-0057" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0057</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '34']">
		<assert id="BR-BT-00144-0043" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0043</assert>
		<assert id="BR-BT-00144-0058" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0058</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '35']">
		<assert id="BR-BT-00144-0044" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0044</assert>
		<assert id="BR-BT-00144-0059" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0059</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '29']">
		<assert id="BR-BT-00119-0036" role="ERROR" test="count(efbc:DPSTerminationIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='dps-usage']/normalize-space(text())=('dps-list','dps-nlist'))">rule|message|BR-BT-00119-0036</assert>
		<assert id="BR-BT-00119-0052" role="ERROR" test="count(efbc:DPSTerminationIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='dps-usage']/normalize-space(text())=('dps-list','dps-nlist'))">rule|message|BR-BT-00119-0052</assert>
		<assert id="BR-BT-00144-0036" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0036</assert>
		<assert id="BR-BT-00144-0053" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0053</assert>
		<assert id="BR-BT-00710-0036" role="ERROR" test="count(cbc:LowerTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0036</assert>
		<assert id="BR-BT-00710-0052" role="ERROR" test="count(cbc:LowerTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0052</assert>
		<assert id="BR-BT-00711-0036" role="ERROR" test="count(cbc:HigherTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0036</assert>
		<assert id="BR-BT-00711-0052" role="ERROR" test="count(cbc:HigherTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0052</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '30']">
		<assert id="BR-BT-00119-0037" role="ERROR" test="count(efbc:DPSTerminationIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='dps-usage']/normalize-space(text())=('dps-list','dps-nlist'))">rule|message|BR-BT-00119-0037</assert>
		<assert id="BR-BT-00119-0053" role="ERROR" test="count(efbc:DPSTerminationIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='dps-usage']/normalize-space(text())=('dps-list','dps-nlist'))">rule|message|BR-BT-00119-0053</assert>
		<assert id="BR-BT-00144-0037" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0037</assert>
		<assert id="BR-BT-00144-0054" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0054</assert>
		<assert id="BR-BT-00710-0037" role="ERROR" test="count(cbc:LowerTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0037</assert>
		<assert id="BR-BT-00710-0053" role="ERROR" test="count(cbc:LowerTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0053</assert>
		<assert id="BR-BT-00711-0037" role="ERROR" test="count(cbc:HigherTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0037</assert>
		<assert id="BR-BT-00711-0053" role="ERROR" test="count(cbc:HigherTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '32']">
		<assert id="BR-BT-00144-0039" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0039</assert>
		<assert id="BR-BT-00144-0056" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = '31']">
		<assert id="BR-BT-00144-0038" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0038</assert>
		<assert id="BR-BT-00144-0055" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0055</assert>
		<assert id="BR-BT-00710-0038" role="ERROR" test="count(cbc:LowerTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0038</assert>
		<assert id="BR-BT-00710-0054" role="ERROR" test="count(cbc:LowerTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00710-0054</assert>
		<assert id="BR-BT-00711-0038" role="ERROR" test="count(cbc:HigherTenderAmount) &gt; 0 or not(../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0038</assert>
		<assert id="BR-BT-00711-0054" role="ERROR" test="count(cbc:HigherTenderAmount) = 0 or (../efac:LotTender/efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00711-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult[$noticeSubType = 'T02']">
		<assert id="BR-BT-00144-0041" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) &gt; 0 or not(cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0041</assert>
		<assert id="BR-BT-00144-0062" role="ERROR" test="count(efac:DecisionReason/efbc:DecisionReasonCode) = 0 or (cbc:TenderResultCode/normalize-space(text())='clos-nw')">rule|message|BR-BT-00144-0062</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues[$noticeSubType = '33']">
		<assert id="BR-BT-00660-0042" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0042</assert>
		<assert id="BR-BT-00660-0055" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0055</assert>
		<assert id="BR-BT-00709-0042" role="ERROR" test="count(cbc:MaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0042</assert>
		<assert id="BR-BT-00709-0055" role="ERROR" test="count(cbc:MaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0055</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues[$noticeSubType = '34']">
		<assert id="BR-BT-00660-0043" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0043</assert>
		<assert id="BR-BT-00660-0056" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0056</assert>
		<assert id="BR-BT-00709-0043" role="ERROR" test="count(cbc:MaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0043</assert>
		<assert id="BR-BT-00709-0056" role="ERROR" test="count(cbc:MaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues[$noticeSubType = '29']">
		<assert id="BR-BT-00660-0036" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0036</assert>
		<assert id="BR-BT-00660-0052" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0052</assert>
		<assert id="BR-BT-00709-0036" role="ERROR" test="count(cbc:MaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0036</assert>
		<assert id="BR-BT-00709-0052" role="ERROR" test="count(cbc:MaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0052</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues[$noticeSubType = '30']">
		<assert id="BR-BT-00660-0037" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0037</assert>
		<assert id="BR-BT-00660-0053" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0053</assert>
		<assert id="BR-BT-00709-0037" role="ERROR" test="count(cbc:MaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0037</assert>
		<assert id="BR-BT-00709-0053" role="ERROR" test="count(cbc:MaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues[$noticeSubType = '31']">
		<assert id="BR-BT-00660-0038" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0038</assert>
		<assert id="BR-BT-00660-0054" role="ERROR" test="count(cbc:EstimatedMaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00660-0054</assert>
		<assert id="BR-BT-00709-0038" role="ERROR" test="count(cbc:MaximumValueAmount) &gt; 0 or not(../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0038</assert>
		<assert id="BR-BT-00709-0054" role="ERROR" test="count(cbc:MaximumValueAmount) = 0 or (../cbc:TenderResultCode/normalize-space(text())='selec-w' and /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00709-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '36']">
		<assert id="BR-BT-00171-0045" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0045</assert>
		<assert id="BR-BT-00171-0057" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0057</assert>
		<assert id="BR-BT-13714-0045" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0045</assert>
		<assert id="BR-BT-13714-0065" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0065</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '37']">
		<assert id="BR-BT-00171-0046" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0046</assert>
		<assert id="BR-BT-00171-0058" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0058</assert>
		<assert id="BR-BT-13714-0046" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0046</assert>
		<assert id="BR-BT-13714-0066" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0066</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '38']">
		<assert id="BR-BT-13714-0047" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0047</assert>
		<assert id="BR-BT-13714-0067" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0067</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '39']">
		<assert id="BR-BT-13714-0048" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0048</assert>
		<assert id="BR-BT-13714-0068" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0068</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '40']">
		<assert id="BR-BT-13714-0049" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0049</assert>
		<assert id="BR-BT-13714-0069" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0069</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '33']">
		<assert id="BR-BT-00171-0042" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0042</assert>
		<assert id="BR-BT-00171-0055" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0055</assert>
		<assert id="BR-BT-00720-0042" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0042</assert>
		<assert id="BR-BT-00720-0056" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0056</assert>
		<assert id="BR-BT-13714-0042" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0042</assert>
		<assert id="BR-BT-13714-0062" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0062</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '34']">
		<assert id="BR-BT-00171-0043" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0043</assert>
		<assert id="BR-BT-00171-0056" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0056</assert>
		<assert id="BR-BT-00720-0043" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0043</assert>
		<assert id="BR-BT-00720-0057" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0057</assert>
		<assert id="BR-BT-13714-0043" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0043</assert>
		<assert id="BR-BT-13714-0063" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0063</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '35']">
		<assert id="BR-BT-00720-0044" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0044</assert>
		<assert id="BR-BT-00720-0058" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0058</assert>
		<assert id="BR-BT-13714-0044" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0044</assert>
		<assert id="BR-BT-13714-0064" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0064</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '29']">
		<assert id="BR-BT-00171-0036" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0036</assert>
		<assert id="BR-BT-00171-0052" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0052</assert>
		<assert id="BR-BT-00720-0036" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0036</assert>
		<assert id="BR-BT-00720-0052" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0052</assert>
		<assert id="BR-BT-13714-0036" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0036</assert>
		<assert id="BR-BT-13714-0057" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0057</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '30']">
		<assert id="BR-BT-00171-0037" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0037</assert>
		<assert id="BR-BT-00171-0053" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0053</assert>
		<assert id="BR-BT-00720-0037" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0037</assert>
		<assert id="BR-BT-00720-0053" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0053</assert>
		<assert id="BR-BT-13714-0037" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0037</assert>
		<assert id="BR-BT-13714-0058" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0058</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '32']">
		<assert id="BR-BT-00720-0039" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0039</assert>
		<assert id="BR-BT-00720-0055" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0055</assert>
		<assert id="BR-BT-13714-0039" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0039</assert>
		<assert id="BR-BT-13714-0060" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0060</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '31']">
		<assert id="BR-BT-00171-0038" role="ERROR" test="count(cbc:RankCode) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0038</assert>
		<assert id="BR-BT-00171-0054" role="ERROR" test="count(cbc:RankCode) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00171-0054</assert>
		<assert id="BR-BT-00720-0038" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0038</assert>
		<assert id="BR-BT-00720-0054" role="ERROR" test="count(cac:LegalMonetaryTotal/cbc:PayableAmount) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00720-0054</assert>
		<assert id="BR-BT-13714-0038" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0038</assert>
		<assert id="BR-BT-13714-0059" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0059</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '25']">
		<assert id="BR-BT-13714-0032" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0032</assert>
		<assert id="BR-BT-13714-0053" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '26']">
		<assert id="BR-BT-13714-0033" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0033</assert>
		<assert id="BR-BT-13714-0054" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '28']">
		<assert id="BR-BT-13714-0035" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0035</assert>
		<assert id="BR-BT-13714-0056" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender[$noticeSubType = '27']">
		<assert id="BR-BT-13714-0034" role="ERROR" test="count(efac:TenderLot/cbc:ID) &gt; 0 or not(efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0034</assert>
		<assert id="BR-BT-13714-0055" role="ERROR" test="count(efac:TenderLot/cbc:ID) = 0 or (efac:TenderReference/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-13714-0055</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[$noticeSubType = '29']">
		<assert id="BR-BT-00553-0036" role="ERROR" test="count(efbc:TermAmount) &gt; 0 or not(efbc:ValueKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00553-0036</assert>
		<assert id="BR-BT-00553-0052" role="ERROR" test="count(efbc:TermAmount) = 0 or (efbc:ValueKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00553-0052</assert>
		<assert id="BR-BT-00555-0036" role="ERROR" test="count(efbc:TermPercent) &gt; 0 or not(efbc:PercentageKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00555-0036</assert>
		<assert id="BR-BT-00555-0052" role="ERROR" test="count(efbc:TermPercent) = 0 or (efbc:PercentageKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00555-0052</assert>
		<assert id="BR-BT-00730-0036" role="ERROR" test="count(efbc:ValueKnownIndicator) &gt; 0 or not(../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00730-0036</assert>
		<assert id="BR-BT-00730-0052" role="ERROR" test="count(efbc:ValueKnownIndicator) = 0 or (../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00730-0052</assert>
		<assert id="BR-BT-00731-0036" role="ERROR" test="count(efbc:PercentageKnownIndicator) &gt; 0 or not(../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00731-0036</assert>
		<assert id="BR-BT-00731-0052" role="ERROR" test="count(efbc:PercentageKnownIndicator) = 0 or (../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00731-0052</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[$noticeSubType = '31']">
		<assert id="BR-BT-00553-0038" role="ERROR" test="count(efbc:TermAmount) &gt; 0 or not(efbc:ValueKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00553-0038</assert>
		<assert id="BR-BT-00553-0053" role="ERROR" test="count(efbc:TermAmount) = 0 or (efbc:ValueKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00553-0053</assert>
		<assert id="BR-BT-00555-0038" role="ERROR" test="count(efbc:TermPercent) &gt; 0 or not(efbc:PercentageKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00555-0038</assert>
		<assert id="BR-BT-00555-0053" role="ERROR" test="count(efbc:TermPercent) = 0 or (efbc:PercentageKnownIndicator/normalize-space(text())='true')">rule|message|BR-BT-00555-0053</assert>
		<assert id="BR-BT-00730-0038" role="ERROR" test="count(efbc:ValueKnownIndicator) &gt; 0 or not(../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00730-0038</assert>
		<assert id="BR-BT-00730-0053" role="ERROR" test="count(efbc:ValueKnownIndicator) = 0 or (../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00730-0053</assert>
		<assert id="BR-BT-00731-0038" role="ERROR" test="count(efbc:PercentageKnownIndicator) &gt; 0 or not(../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00731-0038</assert>
		<assert id="BR-BT-00731-0053" role="ERROR" test="count(efbc:PercentageKnownIndicator) = 0 or (../efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efbc:TermCode/normalize-space(text())='yes')">rule|message|BR-BT-00731-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '36']">
		<assert id="BR-BT-00145-0045" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0045</assert>
		<assert id="BR-BT-00721-0045" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0045</assert>
		<assert id="BR-BT-03202-0045" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0045</assert>
		<assert id="BR-BT-03202-0068" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0068</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '37']">
		<assert id="BR-BT-00145-0046" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0046</assert>
		<assert id="BR-BT-00151-0046" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0046</assert>
		<assert id="BR-BT-00721-0046" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0046</assert>
		<assert id="BR-BT-01451-0046" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0046</assert>
		<assert id="BR-BT-03202-0046" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0046</assert>
		<assert id="BR-BT-03202-0069" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0069</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '38']">
		<assert id="BR-BT-00151-0047" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0047</assert>
		<assert id="BR-BT-00721-0047" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0047</assert>
		<assert id="BR-BT-01451-0047" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0047</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '39']">
		<assert id="BR-BT-00151-0048" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0048</assert>
		<assert id="BR-BT-00721-0048" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0048</assert>
		<assert id="BR-BT-01451-0048" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0048</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '40']">
		<assert id="BR-BT-00151-0049" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0049</assert>
		<assert id="BR-BT-00721-0049" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0049</assert>
		<assert id="BR-BT-01451-0049" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0049</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '33']">
		<assert id="BR-BT-00145-0042" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0042</assert>
		<assert id="BR-BT-00145-0058" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0058</assert>
		<assert id="BR-BT-00150-0042" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0042</assert>
		<assert id="BR-BT-00150-0092" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0092</assert>
		<assert id="BR-BT-00151-0042" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0042</assert>
		<assert id="BR-BT-00721-0042" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0042</assert>
		<assert id="BR-BT-00768-0042" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0042</assert>
		<assert id="BR-BT-00768-0057" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0057</assert>
		<assert id="BR-BT-01451-0042" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0042</assert>
		<assert id="BR-BT-03202-0042" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0042</assert>
		<assert id="BR-BT-03202-0065" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0065</assert>
		<assert id="BR-OPT-00100-0042" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0042</assert>
		<assert id="BR-OPT-00100-0058" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0058</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '34']">
		<assert id="BR-BT-00145-0043" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0043</assert>
		<assert id="BR-BT-00145-0059" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0059</assert>
		<assert id="BR-BT-00150-0043" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0043</assert>
		<assert id="BR-BT-00150-0093" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0093</assert>
		<assert id="BR-BT-00151-0043" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0043</assert>
		<assert id="BR-BT-00721-0043" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0043</assert>
		<assert id="BR-BT-00768-0043" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0043</assert>
		<assert id="BR-BT-00768-0058" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0058</assert>
		<assert id="BR-BT-01451-0043" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0043</assert>
		<assert id="BR-BT-03202-0043" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0043</assert>
		<assert id="BR-BT-03202-0066" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0066</assert>
		<assert id="BR-OPT-00100-0043" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0043</assert>
		<assert id="BR-OPT-00100-0059" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0059</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '35']">
		<assert id="BR-BT-00145-0044" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0044</assert>
		<assert id="BR-BT-00145-0060" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0060</assert>
		<assert id="BR-BT-00150-0044" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0044</assert>
		<assert id="BR-BT-00150-0094" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0094</assert>
		<assert id="BR-BT-00151-0044" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0044</assert>
		<assert id="BR-BT-00721-0044" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0044</assert>
		<assert id="BR-BT-00768-0044" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0044</assert>
		<assert id="BR-BT-00768-0059" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0059</assert>
		<assert id="BR-BT-01451-0044" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0044</assert>
		<assert id="BR-BT-03202-0044" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0044</assert>
		<assert id="BR-BT-03202-0067" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0067</assert>
		<assert id="BR-OPT-00100-0044" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0044</assert>
		<assert id="BR-OPT-00100-0060" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0060</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '29']">
		<assert id="BR-BT-00145-0036" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0036</assert>
		<assert id="BR-BT-00145-0053" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0053</assert>
		<assert id="BR-BT-00150-0036" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0036</assert>
		<assert id="BR-BT-00150-0086" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0086</assert>
		<assert id="BR-BT-00151-0036" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0036</assert>
		<assert id="BR-BT-00721-0036" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0036</assert>
		<assert id="BR-BT-00768-0036" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0036</assert>
		<assert id="BR-BT-00768-0052" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0052</assert>
		<assert id="BR-BT-01451-0036" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0036</assert>
		<assert id="BR-BT-03202-0036" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0036</assert>
		<assert id="BR-BT-03202-0059" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0059</assert>
		<assert id="BR-OPT-00100-0036" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0036</assert>
		<assert id="BR-OPT-00100-0053" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0053</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '30']">
		<assert id="BR-BT-00145-0037" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0037</assert>
		<assert id="BR-BT-00145-0054" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0054</assert>
		<assert id="BR-BT-00150-0037" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0037</assert>
		<assert id="BR-BT-00150-0087" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0087</assert>
		<assert id="BR-BT-00151-0037" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0037</assert>
		<assert id="BR-BT-00721-0037" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0037</assert>
		<assert id="BR-BT-00768-0037" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0037</assert>
		<assert id="BR-BT-00768-0053" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0053</assert>
		<assert id="BR-BT-01451-0037" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0037</assert>
		<assert id="BR-BT-03202-0037" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0037</assert>
		<assert id="BR-BT-03202-0060" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0060</assert>
		<assert id="BR-OPT-00100-0037" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0037</assert>
		<assert id="BR-OPT-00100-0054" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '32']">
		<assert id="BR-BT-00145-0039" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0039</assert>
		<assert id="BR-BT-00145-0056" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0056</assert>
		<assert id="BR-BT-00150-0039" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0039</assert>
		<assert id="BR-BT-00150-0089" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0089</assert>
		<assert id="BR-BT-00151-0039" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0039</assert>
		<assert id="BR-BT-00721-0039" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0039</assert>
		<assert id="BR-BT-00768-0039" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0039</assert>
		<assert id="BR-BT-00768-0055" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0055</assert>
		<assert id="BR-BT-01451-0039" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0039</assert>
		<assert id="BR-BT-03202-0039" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0039</assert>
		<assert id="BR-BT-03202-0062" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0062</assert>
		<assert id="BR-OPT-00100-0039" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0039</assert>
		<assert id="BR-OPT-00100-0056" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0056</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '31']">
		<assert id="BR-BT-00145-0038" role="ERROR" test="count(cbc:IssueDate) &gt; 0 or not(/*/cbc:RegulatoryDomain/normalize-space(text())!='32018R1046' and /*/cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text())!='neg-wo-call' and efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0038</assert>
		<assert id="BR-BT-00145-0055" role="ERROR" test="count(cbc:IssueDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00145-0055</assert>
		<assert id="BR-BT-00150-0038" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0038</assert>
		<assert id="BR-BT-00150-0088" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0088</assert>
		<assert id="BR-BT-00151-0038" role="ERROR" test="count(cbc:URI) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00151-0038</assert>
		<assert id="BR-BT-00721-0038" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0038</assert>
		<assert id="BR-BT-00768-0038" role="ERROR" test="count(efbc:ContractFrameworkIndicator) &gt; 0 or not(/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0038</assert>
		<assert id="BR-BT-00768-0054" role="ERROR" test="count(efbc:ContractFrameworkIndicator) = 0 or (/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ContractingSystem/cbc:ContractingSystemTypeCode[@listName='framework-agreement']/normalize-space(text())=('fa-mix','fa-w-rc','fa-wo-rc'))">rule|message|BR-BT-00768-0054</assert>
		<assert id="BR-BT-01451-0038" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0038</assert>
		<assert id="BR-BT-03202-0038" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0038</assert>
		<assert id="BR-BT-03202-0061" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0061</assert>
		<assert id="BR-OPT-00100-0038" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) &gt; 0 or not(efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0038</assert>
		<assert id="BR-OPT-00100-0055" role="ERROR" test="count(cac:NoticeDocumentReference/cbc:ID) = 0 or (efbc:ContractFrameworkIndicator/normalize-space(text())='true')">rule|message|BR-OPT-00100-0055</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '25']">
		<assert id="BR-BT-00721-0032" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0032</assert>
		<assert id="BR-BT-01451-0032" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0032</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '26']">
		<assert id="BR-BT-00721-0033" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0033</assert>
		<assert id="BR-BT-01451-0033" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0033</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '28']">
		<assert id="BR-BT-00721-0035" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0035</assert>
		<assert id="BR-BT-01451-0035" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0035</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = '27']">
		<assert id="BR-BT-00721-0034" role="ERROR" test="count(cbc:Title) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-00721-0034</assert>
		<assert id="BR-BT-01451-0034" role="ERROR" test="count(cbc:AwardDate) = 0 or (efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-BT-01451-0034</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract[$noticeSubType = 'T02']">
		<assert id="BR-BT-00150-0041" role="ERROR" test="count(efac:ContractReference/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0041</assert>
		<assert id="BR-BT-00150-0091" role="ERROR" test="count(efac:ContractReference/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-00150-0091</assert>
		<assert id="BR-BT-03202-0041" role="ERROR" test="count(efac:LotTender/cbc:ID) &gt; 0 or not(../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0041</assert>
		<assert id="BR-BT-03202-0064" role="ERROR" test="count(efac:LotTender/cbc:ID) = 0 or (../efac:LotResult/cbc:TenderResultCode/normalize-space(text())='selec-w')">rule|message|BR-BT-03202-0064</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract/efac:DurationJustification/efac:AssetsList/efac:Asset[$noticeSubType = 'T02']">
		<assert id="BR-OPP-00021-0041" role="ERROR" test="count(efbc:AssetDescription) &gt; 0 or not(../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00021-0041</assert>
		<assert id="BR-OPP-00021-0054" role="ERROR" test="count(efbc:AssetDescription) = 0 or (../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00021-0054</assert>
		<assert id="BR-OPP-00022-0041" role="ERROR" test="count(efbc:AssetSignificance) &gt; 0 or not(../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00022-0041</assert>
		<assert id="BR-OPP-00022-0054" role="ERROR" test="count(efbc:AssetSignificance) = 0 or (../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00022-0054</assert>
		<assert id="BR-OPP-00023-0041" role="ERROR" test="count(efbc:AssetPredominance) &gt; 0 or not(../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00023-0041</assert>
		<assert id="BR-OPP-00023-0054" role="ERROR" test="count(efbc:AssetPredominance) = 0 or (../../efbc:ExtendedDurationIndicator/normalize-space(text())='true')">rule|message|BR-OPP-00023-0054</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '36']">
		<assert id="BR-OPT-00300-0095" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0095</assert>
		<assert id="BR-OPT-00301-0145" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0145</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '37']">
		<assert id="BR-OPT-00300-0096" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0096</assert>
		<assert id="BR-OPT-00301-0146" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0146</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '38']">
		<assert id="BR-OPT-00300-0097" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0097</assert>
		<assert id="BR-OPT-00301-0147" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0147</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '39']">
		<assert id="BR-OPT-00300-0098" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0098</assert>
		<assert id="BR-OPT-00301-0148" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0148</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '40']">
		<assert id="BR-OPT-00300-0099" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0099</assert>
		<assert id="BR-OPT-00301-0149" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0149</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '33']">
		<assert id="BR-OPT-00300-0092" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0092</assert>
		<assert id="BR-OPT-00301-0142" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0142</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '34']">
		<assert id="BR-OPT-00300-0093" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0093</assert>
		<assert id="BR-OPT-00301-0143" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0143</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '35']">
		<assert id="BR-OPT-00300-0094" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0094</assert>
		<assert id="BR-OPT-00301-0144" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0144</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '29']">
		<assert id="BR-OPT-00300-0086" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0086</assert>
		<assert id="BR-OPT-00301-0136" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0136</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '30']">
		<assert id="BR-OPT-00300-0087" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0087</assert>
		<assert id="BR-OPT-00301-0137" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0137</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '32']">
		<assert id="BR-OPT-00300-0089" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0089</assert>
		<assert id="BR-OPT-00301-0139" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0139</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '31']">
		<assert id="BR-OPT-00300-0088" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0088</assert>
		<assert id="BR-OPT-00301-0138" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0138</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '25']">
		<assert id="BR-OPT-00300-0082" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0082</assert>
		<assert id="BR-OPT-00301-0132" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0132</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '26']">
		<assert id="BR-OPT-00300-0083" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0083</assert>
		<assert id="BR-OPT-00301-0133" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0133</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '28']">
		<assert id="BR-OPT-00300-0085" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0085</assert>
		<assert id="BR-OPT-00301-0135" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0135</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = '27']">
		<assert id="BR-OPT-00300-0084" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0084</assert>
		<assert id="BR-OPT-00301-0134" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0134</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty[$noticeSubType = 'T02']">
		<assert id="BR-OPT-00300-0091" role="ERROR" test="count(efac:Tenderer/cbc:ID) &gt; 0 or not(../efac:LotTender/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00300-0091</assert>
		<assert id="BR-OPT-00301-0141" role="ERROR" test="count(efac:SubContractor/cbc:ID) = 0 or (efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0141</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '36']">
		<assert id="BR-OPT-00301-0196" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0196</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '37']">
		<assert id="BR-OPT-00301-0197" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0197</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '38']">
		<assert id="BR-OPT-00301-0198" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0198</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '39']">
		<assert id="BR-OPT-00301-0199" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0199</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '40']">
		<assert id="BR-OPT-00301-0200" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0200</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '33']">
		<assert id="BR-OPT-00301-0193" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0193</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '34']">
		<assert id="BR-OPT-00301-0194" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0194</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '35']">
		<assert id="BR-OPT-00301-0195" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0195</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '29']">
		<assert id="BR-OPT-00301-0187" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0187</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '30']">
		<assert id="BR-OPT-00301-0188" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0188</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '32']">
		<assert id="BR-OPT-00301-0190" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0190</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '31']">
		<assert id="BR-OPT-00301-0189" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0189</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '25']">
		<assert id="BR-OPT-00301-0183" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0183</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '26']">
		<assert id="BR-OPT-00301-0184" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0184</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '28']">
		<assert id="BR-OPT-00301-0186" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0186</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = '27']">
		<assert id="BR-OPT-00301-0185" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0185</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor[$noticeSubType = 'T02']">
		<assert id="BR-OPT-00301-0192" role="ERROR" test="count(efac:MainContractor/cbc:ID) &gt; 0 or not(../efac:Tenderer/cbc:ID/normalize-space(text())!='')">rule|message|BR-OPT-00301-0192</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '36']">
		<assert id="BR-OPP-00050-0095" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0095</assert>
		<assert id="BR-OPP-00051-0045" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0045</assert>
		<assert id="BR-OPP-00052-0045" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0045</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '37']">
		<assert id="BR-OPP-00050-0096" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0096</assert>
		<assert id="BR-OPP-00051-0096" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0096</assert>
		<assert id="BR-OPP-00052-0096" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0096</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '38']">
		<assert id="BR-OPP-00050-0097" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0097</assert>
		<assert id="BR-OPP-00051-0047" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0047</assert>
		<assert id="BR-OPP-00052-0047" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0047</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '39']">
		<assert id="BR-OPP-00050-0098" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0098</assert>
		<assert id="BR-OPP-00051-0048" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0048</assert>
		<assert id="BR-OPP-00052-0048" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0048</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '40']">
		<assert id="BR-OPP-00050-0099" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0099</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '33']">
		<assert id="BR-OPP-00050-0092" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0092</assert>
		<assert id="BR-OPP-00051-0042" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0042</assert>
		<assert id="BR-OPP-00052-0042" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0042</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '34']">
		<assert id="BR-OPP-00050-0093" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0093</assert>
		<assert id="BR-OPP-00051-0093" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0093</assert>
		<assert id="BR-OPP-00052-0093" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0093</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '35']">
		<assert id="BR-OPP-00050-0094" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0094</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '29']">
		<assert id="BR-OPP-00050-0086" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0086</assert>
		<assert id="BR-OPP-00051-0086" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0086</assert>
		<assert id="BR-OPP-00052-0086" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0086</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '30']">
		<assert id="BR-OPP-00050-0087" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0087</assert>
		<assert id="BR-OPP-00051-0087" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0087</assert>
		<assert id="BR-OPP-00052-0087" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0087</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '32']">
		<assert id="BR-OPP-00050-0089" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0089</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '31']">
		<assert id="BR-OPP-00050-0088" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0088</assert>
		<assert id="BR-OPP-00051-0038" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0038</assert>
		<assert id="BR-OPP-00052-0038" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0038</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '23']">
		<assert id="BR-OPP-00050-0080" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0080</assert>
		<assert id="BR-OPP-00051-0080" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0080</assert>
		<assert id="BR-OPP-00052-0080" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0080</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '24']">
		<assert id="BR-OPP-00050-0081" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0081</assert>
		<assert id="BR-OPP-00051-0081" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0081</assert>
		<assert id="BR-OPP-00052-0081" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0081</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '20']">
		<assert id="BR-OPP-00050-0077" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0077</assert>
		<assert id="BR-OPP-00051-0027" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0027</assert>
		<assert id="BR-OPP-00052-0027" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0027</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '21']">
		<assert id="BR-OPP-00050-0078" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0078</assert>
		<assert id="BR-OPP-00051-0078" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0078</assert>
		<assert id="BR-OPP-00052-0078" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0078</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '16']">
		<assert id="BR-OPP-00050-0072" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0072</assert>
		<assert id="BR-OPP-00051-0072" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0072</assert>
		<assert id="BR-OPP-00052-0072" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0072</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '17']">
		<assert id="BR-OPP-00050-0073" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0073</assert>
		<assert id="BR-OPP-00051-0073" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0073</assert>
		<assert id="BR-OPP-00052-0073" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0073</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '19']">
		<assert id="BR-OPP-00050-0075" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0075</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '18']">
		<assert id="BR-OPP-00050-0074" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0074</assert>
		<assert id="BR-OPP-00051-0024" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0024</assert>
		<assert id="BR-OPP-00052-0024" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0024</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '12']">
		<assert id="BR-OPP-00050-0068" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0068</assert>
		<assert id="BR-OPP-00051-0018" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0018</assert>
		<assert id="BR-OPP-00052-0018" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0018</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '13']">
		<assert id="BR-OPP-00050-0069" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0069</assert>
		<assert id="BR-OPP-00051-0069" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0069</assert>
		<assert id="BR-OPP-00052-0069" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0069</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '14']">
		<assert id="BR-OPP-00050-0070" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0070</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '10']">
		<assert id="BR-OPP-00050-0065" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0065</assert>
		<assert id="BR-OPP-00051-0065" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0065</assert>
		<assert id="BR-OPP-00052-0065" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0065</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '11']">
		<assert id="BR-OPP-00050-0066" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0066</assert>
		<assert id="BR-OPP-00051-0016" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0016</assert>
		<assert id="BR-OPP-00052-0016" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0016</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '4']">
		<assert id="BR-OPP-00050-0057" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0057</assert>
		<assert id="BR-OPP-00051-0057" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0057</assert>
		<assert id="BR-OPP-00052-0057" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0057</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '5']">
		<assert id="BR-OPP-00050-0058" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0058</assert>
		<assert id="BR-OPP-00051-0058" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0058</assert>
		<assert id="BR-OPP-00052-0058" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0058</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '6']">
		<assert id="BR-OPP-00050-0059" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0059</assert>
		<assert id="BR-OPP-00051-0009" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0009</assert>
		<assert id="BR-OPP-00052-0009" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0009</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '7']">
		<assert id="BR-OPP-00050-0062" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0062</assert>
		<assert id="BR-OPP-00051-0062" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0062</assert>
		<assert id="BR-OPP-00052-0062" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0062</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '8']">
		<assert id="BR-OPP-00050-0063" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0063</assert>
		<assert id="BR-OPP-00051-0063" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0063</assert>
		<assert id="BR-OPP-00052-0063" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0063</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '9']">
		<assert id="BR-OPP-00050-0064" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0064</assert>
		<assert id="BR-OPP-00051-0014" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0014</assert>
		<assert id="BR-OPP-00052-0014" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0014</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '15']">
		<assert id="BR-OPP-00050-0071" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0071</assert>
		<assert id="BR-OPP-00051-0021" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0021</assert>
		<assert id="BR-OPP-00052-0021" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0021</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '22']">
		<assert id="BR-OPP-00050-0079" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0079</assert>
		<assert id="BR-OPP-00051-0029" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0029</assert>
		<assert id="BR-OPP-00052-0029" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0029</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '25']">
		<assert id="BR-OPP-00050-0082" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0082</assert>
		<assert id="BR-OPP-00051-0082" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0082</assert>
		<assert id="BR-OPP-00052-0082" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0082</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '26']">
		<assert id="BR-OPP-00050-0083" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0083</assert>
		<assert id="BR-OPP-00051-0083" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0083</assert>
		<assert id="BR-OPP-00052-0083" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0083</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '28']">
		<assert id="BR-OPP-00050-0085" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0085</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = '27']">
		<assert id="BR-OPP-00050-0084" role="ERROR" test="count(efbc:GroupLeadIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00050-0084</assert>
		<assert id="BR-OPP-00051-0034" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0034</assert>
		<assert id="BR-OPP-00052-0034" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0034</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = 'T01']">
		<assert id="BR-OPP-00051-0011" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0011</assert>
		<assert id="BR-OPP-00052-0011" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0011</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = 'T02']">
		<assert id="BR-OPP-00051-0041" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0041</assert>
		<assert id="BR-OPP-00052-0041" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0041</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization[$noticeSubType = 'CEI']">
		<assert id="BR-OPP-00051-0017" role="ERROR" test="count(efbc:AwardingCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00051-0017</assert>
		<assert id="BR-OPP-00052-0017" role="ERROR" test="count(efbc:AcquiringCPBIndicator) = 0 or (efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())=/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|message|BR-OPP-00052-0017</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '36']">
		<assert id="BR-BT-00505-0045" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0045</assert>
		<assert id="BR-BT-00505-0196" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0196</assert>
		<assert id="BR-BT-00507-0045" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0045</assert>
		<assert id="BR-BT-00507-0247" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0247</assert>
		<assert id="BR-BT-00510-0045" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0045</assert>
		<assert id="BR-BT-00510-0096" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0096</assert>
		<assert id="BR-BT-00510-0147" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0147</assert>
		<assert id="BR-BT-00512-0045" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0045</assert>
		<assert id="BR-BT-00512-0247" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0247</assert>
		<assert id="BR-BT-00739-0045" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0045</assert>
		<assert id="BR-BT-00739-0252" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0252</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '37']">
		<assert id="BR-BT-00505-0046" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0046</assert>
		<assert id="BR-BT-00505-0197" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0197</assert>
		<assert id="BR-BT-00507-0046" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0046</assert>
		<assert id="BR-BT-00507-0248" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0248</assert>
		<assert id="BR-BT-00510-0046" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0046</assert>
		<assert id="BR-BT-00510-0097" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0097</assert>
		<assert id="BR-BT-00510-0148" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0148</assert>
		<assert id="BR-BT-00512-0046" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0046</assert>
		<assert id="BR-BT-00512-0248" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0248</assert>
		<assert id="BR-BT-00739-0046" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0046</assert>
		<assert id="BR-BT-00739-0253" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0253</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '38']">
		<assert id="BR-BT-00505-0047" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0047</assert>
		<assert id="BR-BT-00505-0198" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0198</assert>
		<assert id="BR-BT-00507-0047" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0047</assert>
		<assert id="BR-BT-00507-0249" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0249</assert>
		<assert id="BR-BT-00510-0047" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0047</assert>
		<assert id="BR-BT-00510-0098" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0098</assert>
		<assert id="BR-BT-00510-0149" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0149</assert>
		<assert id="BR-BT-00512-0047" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0047</assert>
		<assert id="BR-BT-00512-0249" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0249</assert>
		<assert id="BR-BT-00739-0047" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0047</assert>
		<assert id="BR-BT-00739-0254" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0254</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '39']">
		<assert id="BR-BT-00505-0048" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0048</assert>
		<assert id="BR-BT-00505-0199" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0199</assert>
		<assert id="BR-BT-00507-0048" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0048</assert>
		<assert id="BR-BT-00507-0250" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0250</assert>
		<assert id="BR-BT-00510-0048" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0048</assert>
		<assert id="BR-BT-00510-0099" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0099</assert>
		<assert id="BR-BT-00510-0150" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0150</assert>
		<assert id="BR-BT-00512-0048" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0048</assert>
		<assert id="BR-BT-00512-0250" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0250</assert>
		<assert id="BR-BT-00739-0048" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0048</assert>
		<assert id="BR-BT-00739-0255" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0255</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '40']">
		<assert id="BR-BT-00505-0049" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0049</assert>
		<assert id="BR-BT-00505-0200" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0200</assert>
		<assert id="BR-BT-00507-0049" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0049</assert>
		<assert id="BR-BT-00507-0251" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0251</assert>
		<assert id="BR-BT-00510-0049" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0049</assert>
		<assert id="BR-BT-00510-0100" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0100</assert>
		<assert id="BR-BT-00510-0151" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0151</assert>
		<assert id="BR-BT-00512-0049" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0049</assert>
		<assert id="BR-BT-00512-0251" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0251</assert>
		<assert id="BR-BT-00739-0049" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0049</assert>
		<assert id="BR-BT-00739-0256" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0256</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '33']">
		<assert id="BR-BT-00505-0042" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0042</assert>
		<assert id="BR-BT-00505-0193" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0193</assert>
		<assert id="BR-BT-00507-0042" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0042</assert>
		<assert id="BR-BT-00507-0244" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0244</assert>
		<assert id="BR-BT-00510-0042" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0042</assert>
		<assert id="BR-BT-00510-0093" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0093</assert>
		<assert id="BR-BT-00510-0144" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0144</assert>
		<assert id="BR-BT-00512-0042" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0042</assert>
		<assert id="BR-BT-00512-0244" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0244</assert>
		<assert id="BR-BT-00739-0042" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0042</assert>
		<assert id="BR-BT-00739-0249" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0249</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '34']">
		<assert id="BR-BT-00505-0043" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0043</assert>
		<assert id="BR-BT-00505-0194" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0194</assert>
		<assert id="BR-BT-00507-0043" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0043</assert>
		<assert id="BR-BT-00507-0245" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0245</assert>
		<assert id="BR-BT-00510-0043" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0043</assert>
		<assert id="BR-BT-00510-0094" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0094</assert>
		<assert id="BR-BT-00510-0145" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0145</assert>
		<assert id="BR-BT-00512-0043" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0043</assert>
		<assert id="BR-BT-00512-0245" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0245</assert>
		<assert id="BR-BT-00739-0043" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0043</assert>
		<assert id="BR-BT-00739-0250" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0250</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '35']">
		<assert id="BR-BT-00505-0044" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0044</assert>
		<assert id="BR-BT-00505-0195" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0195</assert>
		<assert id="BR-BT-00507-0044" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0044</assert>
		<assert id="BR-BT-00507-0246" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0246</assert>
		<assert id="BR-BT-00510-0044" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0044</assert>
		<assert id="BR-BT-00510-0095" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0095</assert>
		<assert id="BR-BT-00510-0146" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0146</assert>
		<assert id="BR-BT-00512-0044" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0044</assert>
		<assert id="BR-BT-00512-0246" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0246</assert>
		<assert id="BR-BT-00739-0044" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0044</assert>
		<assert id="BR-BT-00739-0251" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0251</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '29']">
		<assert id="BR-BT-00505-0036" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0036</assert>
		<assert id="BR-BT-00505-0188" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0188</assert>
		<assert id="BR-BT-00507-0036" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0036</assert>
		<assert id="BR-BT-00507-0239" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0239</assert>
		<assert id="BR-BT-00510-0036" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0036</assert>
		<assert id="BR-BT-00510-0087" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0087</assert>
		<assert id="BR-BT-00510-0138" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0138</assert>
		<assert id="BR-BT-00512-0036" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0036</assert>
		<assert id="BR-BT-00512-0239" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0239</assert>
		<assert id="BR-BT-00739-0036" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0036</assert>
		<assert id="BR-BT-00739-0244" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0244</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '30']">
		<assert id="BR-BT-00505-0037" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0037</assert>
		<assert id="BR-BT-00505-0189" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0189</assert>
		<assert id="BR-BT-00507-0037" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0037</assert>
		<assert id="BR-BT-00507-0240" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0240</assert>
		<assert id="BR-BT-00510-0037" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0037</assert>
		<assert id="BR-BT-00510-0088" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0088</assert>
		<assert id="BR-BT-00510-0139" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0139</assert>
		<assert id="BR-BT-00512-0037" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0037</assert>
		<assert id="BR-BT-00512-0240" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0240</assert>
		<assert id="BR-BT-00739-0037" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0037</assert>
		<assert id="BR-BT-00739-0245" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0245</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '32']">
		<assert id="BR-BT-00505-0039" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0039</assert>
		<assert id="BR-BT-00505-0191" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0191</assert>
		<assert id="BR-BT-00507-0039" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0039</assert>
		<assert id="BR-BT-00507-0242" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0242</assert>
		<assert id="BR-BT-00510-0039" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0039</assert>
		<assert id="BR-BT-00510-0090" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0090</assert>
		<assert id="BR-BT-00510-0141" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0141</assert>
		<assert id="BR-BT-00512-0039" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0039</assert>
		<assert id="BR-BT-00512-0242" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0242</assert>
		<assert id="BR-BT-00739-0039" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0039</assert>
		<assert id="BR-BT-00739-0247" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0247</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '31']">
		<assert id="BR-BT-00505-0038" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0038</assert>
		<assert id="BR-BT-00505-0190" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0190</assert>
		<assert id="BR-BT-00507-0038" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0038</assert>
		<assert id="BR-BT-00507-0241" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0241</assert>
		<assert id="BR-BT-00510-0038" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0038</assert>
		<assert id="BR-BT-00510-0089" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0089</assert>
		<assert id="BR-BT-00510-0140" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0140</assert>
		<assert id="BR-BT-00512-0038" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0038</assert>
		<assert id="BR-BT-00512-0241" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0241</assert>
		<assert id="BR-BT-00739-0038" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0038</assert>
		<assert id="BR-BT-00739-0246" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0246</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '23']">
		<assert id="BR-BT-00505-0030" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0030</assert>
		<assert id="BR-BT-00505-0182" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0182</assert>
		<assert id="BR-BT-00507-0030" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0030</assert>
		<assert id="BR-BT-00507-0233" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0233</assert>
		<assert id="BR-BT-00510-0030" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0030</assert>
		<assert id="BR-BT-00510-0081" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0081</assert>
		<assert id="BR-BT-00510-0132" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0132</assert>
		<assert id="BR-BT-00512-0030" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0030</assert>
		<assert id="BR-BT-00512-0233" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0233</assert>
		<assert id="BR-BT-00739-0030" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0030</assert>
		<assert id="BR-BT-00739-0238" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0238</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '24']">
		<assert id="BR-BT-00505-0031" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0031</assert>
		<assert id="BR-BT-00505-0183" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0183</assert>
		<assert id="BR-BT-00507-0031" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0031</assert>
		<assert id="BR-BT-00507-0234" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0234</assert>
		<assert id="BR-BT-00510-0031" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0031</assert>
		<assert id="BR-BT-00510-0082" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0082</assert>
		<assert id="BR-BT-00510-0133" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0133</assert>
		<assert id="BR-BT-00512-0031" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0031</assert>
		<assert id="BR-BT-00512-0234" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0234</assert>
		<assert id="BR-BT-00739-0031" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0031</assert>
		<assert id="BR-BT-00739-0239" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0239</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '20']">
		<assert id="BR-BT-00505-0027" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0027</assert>
		<assert id="BR-BT-00505-0179" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0179</assert>
		<assert id="BR-BT-00507-0027" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0027</assert>
		<assert id="BR-BT-00507-0230" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0230</assert>
		<assert id="BR-BT-00510-0027" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0027</assert>
		<assert id="BR-BT-00510-0078" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0078</assert>
		<assert id="BR-BT-00510-0129" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0129</assert>
		<assert id="BR-BT-00512-0027" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0027</assert>
		<assert id="BR-BT-00512-0230" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0230</assert>
		<assert id="BR-BT-00739-0027" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0027</assert>
		<assert id="BR-BT-00739-0235" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0235</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '21']">
		<assert id="BR-BT-00505-0028" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0028</assert>
		<assert id="BR-BT-00505-0180" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0180</assert>
		<assert id="BR-BT-00507-0028" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0028</assert>
		<assert id="BR-BT-00507-0231" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0231</assert>
		<assert id="BR-BT-00510-0028" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0028</assert>
		<assert id="BR-BT-00510-0079" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0079</assert>
		<assert id="BR-BT-00510-0130" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0130</assert>
		<assert id="BR-BT-00512-0028" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0028</assert>
		<assert id="BR-BT-00512-0231" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0231</assert>
		<assert id="BR-BT-00739-0028" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0028</assert>
		<assert id="BR-BT-00739-0236" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0236</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '16']">
		<assert id="BR-BT-00505-0022" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0022</assert>
		<assert id="BR-BT-00505-0175" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0175</assert>
		<assert id="BR-BT-00507-0022" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0022</assert>
		<assert id="BR-BT-00507-0226" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0226</assert>
		<assert id="BR-BT-00510-0022" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0022</assert>
		<assert id="BR-BT-00510-0073" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0073</assert>
		<assert id="BR-BT-00510-0124" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0124</assert>
		<assert id="BR-BT-00512-0022" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0022</assert>
		<assert id="BR-BT-00512-0226" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0226</assert>
		<assert id="BR-BT-00739-0022" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0022</assert>
		<assert id="BR-BT-00739-0231" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0231</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '17']">
		<assert id="BR-BT-00505-0023" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0023</assert>
		<assert id="BR-BT-00505-0176" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0176</assert>
		<assert id="BR-BT-00507-0023" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0023</assert>
		<assert id="BR-BT-00507-0227" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0227</assert>
		<assert id="BR-BT-00510-0023" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0023</assert>
		<assert id="BR-BT-00510-0074" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0074</assert>
		<assert id="BR-BT-00510-0125" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0125</assert>
		<assert id="BR-BT-00512-0023" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0023</assert>
		<assert id="BR-BT-00512-0227" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0227</assert>
		<assert id="BR-BT-00739-0023" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0023</assert>
		<assert id="BR-BT-00739-0232" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0232</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '19']">
		<assert id="BR-BT-00505-0025" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0025</assert>
		<assert id="BR-BT-00505-0178" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0178</assert>
		<assert id="BR-BT-00507-0025" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0025</assert>
		<assert id="BR-BT-00507-0229" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0229</assert>
		<assert id="BR-BT-00510-0025" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0025</assert>
		<assert id="BR-BT-00510-0076" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0076</assert>
		<assert id="BR-BT-00510-0127" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0127</assert>
		<assert id="BR-BT-00512-0025" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0025</assert>
		<assert id="BR-BT-00512-0229" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0229</assert>
		<assert id="BR-BT-00739-0025" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0025</assert>
		<assert id="BR-BT-00739-0234" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0234</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '18']">
		<assert id="BR-BT-00505-0024" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0024</assert>
		<assert id="BR-BT-00505-0177" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0177</assert>
		<assert id="BR-BT-00507-0024" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0024</assert>
		<assert id="BR-BT-00507-0228" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0228</assert>
		<assert id="BR-BT-00510-0024" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0024</assert>
		<assert id="BR-BT-00510-0075" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0075</assert>
		<assert id="BR-BT-00510-0126" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0126</assert>
		<assert id="BR-BT-00512-0024" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0024</assert>
		<assert id="BR-BT-00512-0228" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0228</assert>
		<assert id="BR-BT-00739-0024" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0024</assert>
		<assert id="BR-BT-00739-0233" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0233</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '1']">
		<assert id="BR-BT-00505-0004" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0004</assert>
		<assert id="BR-BT-00505-0158" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0158</assert>
		<assert id="BR-BT-00507-0004" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0004</assert>
		<assert id="BR-BT-00507-0209" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0209</assert>
		<assert id="BR-BT-00510-0004" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0004</assert>
		<assert id="BR-BT-00510-0055" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0055</assert>
		<assert id="BR-BT-00510-0106" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0106</assert>
		<assert id="BR-BT-00512-0004" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0004</assert>
		<assert id="BR-BT-00512-0209" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0209</assert>
		<assert id="BR-BT-00739-0004" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0004</assert>
		<assert id="BR-BT-00739-0214" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0214</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '2']">
		<assert id="BR-BT-00505-0005" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0005</assert>
		<assert id="BR-BT-00505-0159" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0159</assert>
		<assert id="BR-BT-00507-0005" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0005</assert>
		<assert id="BR-BT-00507-0210" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0210</assert>
		<assert id="BR-BT-00510-0005" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0005</assert>
		<assert id="BR-BT-00510-0056" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0056</assert>
		<assert id="BR-BT-00510-0107" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0107</assert>
		<assert id="BR-BT-00512-0005" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0005</assert>
		<assert id="BR-BT-00512-0210" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0210</assert>
		<assert id="BR-BT-00739-0005" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0005</assert>
		<assert id="BR-BT-00739-0215" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0215</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '3']">
		<assert id="BR-BT-00505-0006" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0006</assert>
		<assert id="BR-BT-00505-0160" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0160</assert>
		<assert id="BR-BT-00507-0006" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0006</assert>
		<assert id="BR-BT-00507-0211" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0211</assert>
		<assert id="BR-BT-00510-0006" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0006</assert>
		<assert id="BR-BT-00510-0057" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0057</assert>
		<assert id="BR-BT-00510-0108" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0108</assert>
		<assert id="BR-BT-00512-0006" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0006</assert>
		<assert id="BR-BT-00512-0211" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0211</assert>
		<assert id="BR-BT-00739-0006" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0006</assert>
		<assert id="BR-BT-00739-0216" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0216</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '12']">
		<assert id="BR-BT-00505-0018" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0018</assert>
		<assert id="BR-BT-00505-0171" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0171</assert>
		<assert id="BR-BT-00507-0018" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0018</assert>
		<assert id="BR-BT-00507-0222" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0222</assert>
		<assert id="BR-BT-00510-0018" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0018</assert>
		<assert id="BR-BT-00510-0069" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0069</assert>
		<assert id="BR-BT-00510-0120" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0120</assert>
		<assert id="BR-BT-00512-0018" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0018</assert>
		<assert id="BR-BT-00512-0222" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0222</assert>
		<assert id="BR-BT-00739-0018" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0018</assert>
		<assert id="BR-BT-00739-0227" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0227</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '13']">
		<assert id="BR-BT-00505-0019" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0019</assert>
		<assert id="BR-BT-00505-0172" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0172</assert>
		<assert id="BR-BT-00507-0019" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0019</assert>
		<assert id="BR-BT-00507-0223" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0223</assert>
		<assert id="BR-BT-00510-0019" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0019</assert>
		<assert id="BR-BT-00510-0070" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0070</assert>
		<assert id="BR-BT-00510-0121" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0121</assert>
		<assert id="BR-BT-00512-0019" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0019</assert>
		<assert id="BR-BT-00512-0223" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0223</assert>
		<assert id="BR-BT-00739-0019" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0019</assert>
		<assert id="BR-BT-00739-0228" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0228</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '14']">
		<assert id="BR-BT-00505-0020" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0020</assert>
		<assert id="BR-BT-00505-0173" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0173</assert>
		<assert id="BR-BT-00507-0020" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0020</assert>
		<assert id="BR-BT-00507-0224" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0224</assert>
		<assert id="BR-BT-00510-0020" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0020</assert>
		<assert id="BR-BT-00510-0071" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0071</assert>
		<assert id="BR-BT-00510-0122" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0122</assert>
		<assert id="BR-BT-00512-0020" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0020</assert>
		<assert id="BR-BT-00512-0224" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0224</assert>
		<assert id="BR-BT-00739-0020" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0020</assert>
		<assert id="BR-BT-00739-0229" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0229</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '10']">
		<assert id="BR-BT-00505-0015" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0015</assert>
		<assert id="BR-BT-00505-0168" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0168</assert>
		<assert id="BR-BT-00507-0015" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0015</assert>
		<assert id="BR-BT-00507-0219" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0219</assert>
		<assert id="BR-BT-00510-0015" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0015</assert>
		<assert id="BR-BT-00510-0066" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0066</assert>
		<assert id="BR-BT-00510-0117" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0117</assert>
		<assert id="BR-BT-00512-0015" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0015</assert>
		<assert id="BR-BT-00512-0219" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0219</assert>
		<assert id="BR-BT-00739-0015" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0015</assert>
		<assert id="BR-BT-00739-0224" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0224</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '11']">
		<assert id="BR-BT-00505-0016" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0016</assert>
		<assert id="BR-BT-00505-0169" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0169</assert>
		<assert id="BR-BT-00507-0016" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0016</assert>
		<assert id="BR-BT-00507-0220" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0220</assert>
		<assert id="BR-BT-00510-0016" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0016</assert>
		<assert id="BR-BT-00510-0067" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0067</assert>
		<assert id="BR-BT-00510-0118" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0118</assert>
		<assert id="BR-BT-00512-0016" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0016</assert>
		<assert id="BR-BT-00512-0220" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0220</assert>
		<assert id="BR-BT-00739-0016" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0016</assert>
		<assert id="BR-BT-00739-0225" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0225</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '4']">
		<assert id="BR-BT-00505-0007" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0007</assert>
		<assert id="BR-BT-00505-0161" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0161</assert>
		<assert id="BR-BT-00507-0007" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0007</assert>
		<assert id="BR-BT-00507-0212" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0212</assert>
		<assert id="BR-BT-00510-0007" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0007</assert>
		<assert id="BR-BT-00510-0058" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0058</assert>
		<assert id="BR-BT-00510-0109" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0109</assert>
		<assert id="BR-BT-00512-0007" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0007</assert>
		<assert id="BR-BT-00512-0212" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0212</assert>
		<assert id="BR-BT-00739-0007" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0007</assert>
		<assert id="BR-BT-00739-0217" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0217</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '5']">
		<assert id="BR-BT-00505-0008" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0008</assert>
		<assert id="BR-BT-00505-0162" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0162</assert>
		<assert id="BR-BT-00507-0008" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0008</assert>
		<assert id="BR-BT-00507-0213" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0213</assert>
		<assert id="BR-BT-00510-0008" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0008</assert>
		<assert id="BR-BT-00510-0059" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0059</assert>
		<assert id="BR-BT-00510-0110" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0110</assert>
		<assert id="BR-BT-00512-0008" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0008</assert>
		<assert id="BR-BT-00512-0213" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0213</assert>
		<assert id="BR-BT-00739-0008" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0008</assert>
		<assert id="BR-BT-00739-0218" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0218</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '6']">
		<assert id="BR-BT-00505-0009" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0009</assert>
		<assert id="BR-BT-00505-0163" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0163</assert>
		<assert id="BR-BT-00507-0009" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0009</assert>
		<assert id="BR-BT-00507-0214" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0214</assert>
		<assert id="BR-BT-00510-0009" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0009</assert>
		<assert id="BR-BT-00510-0060" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0060</assert>
		<assert id="BR-BT-00510-0111" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0111</assert>
		<assert id="BR-BT-00512-0009" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0009</assert>
		<assert id="BR-BT-00512-0214" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0214</assert>
		<assert id="BR-BT-00739-0009" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0009</assert>
		<assert id="BR-BT-00739-0219" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0219</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '7']">
		<assert id="BR-BT-00505-0012" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0012</assert>
		<assert id="BR-BT-00505-0165" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0165</assert>
		<assert id="BR-BT-00507-0012" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0012</assert>
		<assert id="BR-BT-00507-0216" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0216</assert>
		<assert id="BR-BT-00510-0012" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0012</assert>
		<assert id="BR-BT-00510-0063" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0063</assert>
		<assert id="BR-BT-00510-0114" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0114</assert>
		<assert id="BR-BT-00512-0012" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0012</assert>
		<assert id="BR-BT-00512-0216" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0216</assert>
		<assert id="BR-BT-00739-0012" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0012</assert>
		<assert id="BR-BT-00739-0221" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0221</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '8']">
		<assert id="BR-BT-00505-0013" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0013</assert>
		<assert id="BR-BT-00505-0166" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0166</assert>
		<assert id="BR-BT-00507-0013" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0013</assert>
		<assert id="BR-BT-00507-0217" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0217</assert>
		<assert id="BR-BT-00510-0013" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0013</assert>
		<assert id="BR-BT-00510-0064" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0064</assert>
		<assert id="BR-BT-00510-0115" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0115</assert>
		<assert id="BR-BT-00512-0013" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0013</assert>
		<assert id="BR-BT-00512-0217" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0217</assert>
		<assert id="BR-BT-00739-0013" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0013</assert>
		<assert id="BR-BT-00739-0222" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0222</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '9']">
		<assert id="BR-BT-00505-0014" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0014</assert>
		<assert id="BR-BT-00505-0167" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0167</assert>
		<assert id="BR-BT-00507-0014" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0014</assert>
		<assert id="BR-BT-00507-0218" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0218</assert>
		<assert id="BR-BT-00510-0014" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0014</assert>
		<assert id="BR-BT-00510-0065" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0065</assert>
		<assert id="BR-BT-00510-0116" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0116</assert>
		<assert id="BR-BT-00512-0014" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0014</assert>
		<assert id="BR-BT-00512-0218" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0218</assert>
		<assert id="BR-BT-00739-0014" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0014</assert>
		<assert id="BR-BT-00739-0223" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0223</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '15']">
		<assert id="BR-BT-00505-0021" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0021</assert>
		<assert id="BR-BT-00505-0174" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0174</assert>
		<assert id="BR-BT-00507-0021" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0021</assert>
		<assert id="BR-BT-00507-0225" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0225</assert>
		<assert id="BR-BT-00510-0021" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0021</assert>
		<assert id="BR-BT-00510-0072" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0072</assert>
		<assert id="BR-BT-00510-0123" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0123</assert>
		<assert id="BR-BT-00512-0021" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0021</assert>
		<assert id="BR-BT-00512-0225" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0225</assert>
		<assert id="BR-BT-00739-0021" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0021</assert>
		<assert id="BR-BT-00739-0230" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0230</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '22']">
		<assert id="BR-BT-00505-0029" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0029</assert>
		<assert id="BR-BT-00505-0181" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0181</assert>
		<assert id="BR-BT-00507-0029" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0029</assert>
		<assert id="BR-BT-00507-0232" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0232</assert>
		<assert id="BR-BT-00510-0029" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0029</assert>
		<assert id="BR-BT-00510-0080" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0080</assert>
		<assert id="BR-BT-00510-0131" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0131</assert>
		<assert id="BR-BT-00512-0029" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0029</assert>
		<assert id="BR-BT-00512-0232" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0232</assert>
		<assert id="BR-BT-00739-0029" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0029</assert>
		<assert id="BR-BT-00739-0237" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0237</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '25']">
		<assert id="BR-BT-00505-0032" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0032</assert>
		<assert id="BR-BT-00505-0184" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0184</assert>
		<assert id="BR-BT-00507-0032" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0032</assert>
		<assert id="BR-BT-00507-0235" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0235</assert>
		<assert id="BR-BT-00510-0032" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0032</assert>
		<assert id="BR-BT-00510-0083" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0083</assert>
		<assert id="BR-BT-00510-0134" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0134</assert>
		<assert id="BR-BT-00512-0032" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0032</assert>
		<assert id="BR-BT-00512-0235" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0235</assert>
		<assert id="BR-BT-00739-0032" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0032</assert>
		<assert id="BR-BT-00739-0240" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0240</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '26']">
		<assert id="BR-BT-00505-0033" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0033</assert>
		<assert id="BR-BT-00505-0185" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0185</assert>
		<assert id="BR-BT-00507-0033" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0033</assert>
		<assert id="BR-BT-00507-0236" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0236</assert>
		<assert id="BR-BT-00510-0033" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0033</assert>
		<assert id="BR-BT-00510-0084" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0084</assert>
		<assert id="BR-BT-00510-0135" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0135</assert>
		<assert id="BR-BT-00512-0033" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0033</assert>
		<assert id="BR-BT-00512-0236" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0236</assert>
		<assert id="BR-BT-00739-0033" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0033</assert>
		<assert id="BR-BT-00739-0241" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0241</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '28']">
		<assert id="BR-BT-00505-0035" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0035</assert>
		<assert id="BR-BT-00505-0187" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0187</assert>
		<assert id="BR-BT-00507-0035" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0035</assert>
		<assert id="BR-BT-00507-0238" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0238</assert>
		<assert id="BR-BT-00510-0035" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0035</assert>
		<assert id="BR-BT-00510-0086" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0086</assert>
		<assert id="BR-BT-00510-0137" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0137</assert>
		<assert id="BR-BT-00512-0035" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0035</assert>
		<assert id="BR-BT-00512-0238" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0238</assert>
		<assert id="BR-BT-00739-0035" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0035</assert>
		<assert id="BR-BT-00739-0243" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0243</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = '27']">
		<assert id="BR-BT-00505-0034" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0034</assert>
		<assert id="BR-BT-00505-0186" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0186</assert>
		<assert id="BR-BT-00507-0034" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0034</assert>
		<assert id="BR-BT-00507-0237" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0237</assert>
		<assert id="BR-BT-00510-0034" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0034</assert>
		<assert id="BR-BT-00510-0085" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0085</assert>
		<assert id="BR-BT-00510-0136" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0136</assert>
		<assert id="BR-BT-00512-0034" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0034</assert>
		<assert id="BR-BT-00512-0237" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0237</assert>
		<assert id="BR-BT-00739-0034" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0034</assert>
		<assert id="BR-BT-00739-0242" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0242</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = 'T01']">
		<assert id="BR-BT-00505-0011" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0011</assert>
		<assert id="BR-BT-00505-0164" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0164</assert>
		<assert id="BR-BT-00507-0011" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0011</assert>
		<assert id="BR-BT-00507-0215" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0215</assert>
		<assert id="BR-BT-00510-0011" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0011</assert>
		<assert id="BR-BT-00510-0062" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0062</assert>
		<assert id="BR-BT-00510-0113" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0113</assert>
		<assert id="BR-BT-00512-0011" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0011</assert>
		<assert id="BR-BT-00512-0215" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0215</assert>
		<assert id="BR-BT-00739-0011" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0011</assert>
		<assert id="BR-BT-00739-0220" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0220</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = 'T02']">
		<assert id="BR-BT-00505-0041" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0041</assert>
		<assert id="BR-BT-00505-0192" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0192</assert>
		<assert id="BR-BT-00507-0041" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0041</assert>
		<assert id="BR-BT-00507-0243" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0243</assert>
		<assert id="BR-BT-00510-0041" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0041</assert>
		<assert id="BR-BT-00510-0092" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0092</assert>
		<assert id="BR-BT-00510-0143" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0143</assert>
		<assert id="BR-BT-00512-0041" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0041</assert>
		<assert id="BR-BT-00512-0243" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0243</assert>
		<assert id="BR-BT-00739-0041" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0041</assert>
		<assert id="BR-BT-00739-0248" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0248</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00505-0017" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0017</assert>
		<assert id="BR-BT-00505-0170" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0170</assert>
		<assert id="BR-BT-00507-0017" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0017</assert>
		<assert id="BR-BT-00507-0221" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0221</assert>
		<assert id="BR-BT-00510-0017" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0017</assert>
		<assert id="BR-BT-00510-0068" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0068</assert>
		<assert id="BR-BT-00510-0119" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0119</assert>
		<assert id="BR-BT-00512-0017" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0017</assert>
		<assert id="BR-BT-00512-0221" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0221</assert>
		<assert id="BR-BT-00739-0017" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0017</assert>
		<assert id="BR-BT-00739-0226" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0226</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '36']">
		<assert id="BR-BT-00505-0096" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0096</assert>
		<assert id="BR-BT-00505-0239" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0239</assert>
		<assert id="BR-BT-00507-0096" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0096</assert>
		<assert id="BR-BT-00507-0290" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0290</assert>
		<assert id="BR-BT-00510-0198" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0198</assert>
		<assert id="BR-BT-00510-0249" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0249</assert>
		<assert id="BR-BT-00510-0300" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0300</assert>
		<assert id="BR-BT-00512-0096" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0096</assert>
		<assert id="BR-BT-00512-0289" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0289</assert>
		<assert id="BR-BT-00739-0097" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0097</assert>
		<assert id="BR-BT-00739-0295" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0295</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '37']">
		<assert id="BR-BT-00505-0097" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0097</assert>
		<assert id="BR-BT-00505-0240" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0240</assert>
		<assert id="BR-BT-00507-0097" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0097</assert>
		<assert id="BR-BT-00507-0291" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0291</assert>
		<assert id="BR-BT-00510-0199" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0199</assert>
		<assert id="BR-BT-00510-0250" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0250</assert>
		<assert id="BR-BT-00510-0301" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0301</assert>
		<assert id="BR-BT-00512-0097" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0097</assert>
		<assert id="BR-BT-00512-0290" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0290</assert>
		<assert id="BR-BT-00739-0098" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0098</assert>
		<assert id="BR-BT-00739-0296" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0296</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '38']">
		<assert id="BR-BT-00505-0098" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0098</assert>
		<assert id="BR-BT-00505-0241" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0241</assert>
		<assert id="BR-BT-00507-0098" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0098</assert>
		<assert id="BR-BT-00507-0292" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0292</assert>
		<assert id="BR-BT-00510-0200" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0200</assert>
		<assert id="BR-BT-00510-0251" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0251</assert>
		<assert id="BR-BT-00510-0302" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0302</assert>
		<assert id="BR-BT-00512-0098" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0098</assert>
		<assert id="BR-BT-00512-0291" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0291</assert>
		<assert id="BR-BT-00739-0099" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0099</assert>
		<assert id="BR-BT-00739-0297" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0297</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '39']">
		<assert id="BR-BT-00505-0099" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0099</assert>
		<assert id="BR-BT-00505-0242" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0242</assert>
		<assert id="BR-BT-00507-0099" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0099</assert>
		<assert id="BR-BT-00507-0293" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0293</assert>
		<assert id="BR-BT-00510-0201" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0201</assert>
		<assert id="BR-BT-00510-0252" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0252</assert>
		<assert id="BR-BT-00510-0303" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0303</assert>
		<assert id="BR-BT-00512-0099" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0099</assert>
		<assert id="BR-BT-00512-0292" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0292</assert>
		<assert id="BR-BT-00739-0100" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0100</assert>
		<assert id="BR-BT-00739-0298" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0298</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '40']">
		<assert id="BR-BT-00505-0100" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0100</assert>
		<assert id="BR-BT-00505-0243" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0243</assert>
		<assert id="BR-BT-00507-0100" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0100</assert>
		<assert id="BR-BT-00507-0294" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0294</assert>
		<assert id="BR-BT-00510-0202" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0202</assert>
		<assert id="BR-BT-00510-0253" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0253</assert>
		<assert id="BR-BT-00510-0304" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0304</assert>
		<assert id="BR-BT-00512-0100" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0100</assert>
		<assert id="BR-BT-00512-0293" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0293</assert>
		<assert id="BR-BT-00739-0101" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0101</assert>
		<assert id="BR-BT-00739-0299" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0299</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '33']">
		<assert id="BR-BT-00505-0093" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0093</assert>
		<assert id="BR-BT-00505-0236" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0236</assert>
		<assert id="BR-BT-00507-0093" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0093</assert>
		<assert id="BR-BT-00507-0287" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0287</assert>
		<assert id="BR-BT-00510-0195" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0195</assert>
		<assert id="BR-BT-00510-0246" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0246</assert>
		<assert id="BR-BT-00510-0297" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0297</assert>
		<assert id="BR-BT-00512-0093" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0093</assert>
		<assert id="BR-BT-00512-0286" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0286</assert>
		<assert id="BR-BT-00739-0094" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0094</assert>
		<assert id="BR-BT-00739-0292" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0292</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '34']">
		<assert id="BR-BT-00505-0094" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0094</assert>
		<assert id="BR-BT-00505-0237" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0237</assert>
		<assert id="BR-BT-00507-0094" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0094</assert>
		<assert id="BR-BT-00507-0288" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0288</assert>
		<assert id="BR-BT-00510-0196" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0196</assert>
		<assert id="BR-BT-00510-0247" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0247</assert>
		<assert id="BR-BT-00510-0298" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0298</assert>
		<assert id="BR-BT-00512-0094" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0094</assert>
		<assert id="BR-BT-00512-0287" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0287</assert>
		<assert id="BR-BT-00739-0095" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0095</assert>
		<assert id="BR-BT-00739-0293" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0293</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '35']">
		<assert id="BR-BT-00505-0095" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0095</assert>
		<assert id="BR-BT-00505-0238" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0238</assert>
		<assert id="BR-BT-00507-0095" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0095</assert>
		<assert id="BR-BT-00507-0289" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0289</assert>
		<assert id="BR-BT-00510-0197" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0197</assert>
		<assert id="BR-BT-00510-0248" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0248</assert>
		<assert id="BR-BT-00510-0299" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0299</assert>
		<assert id="BR-BT-00512-0095" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0095</assert>
		<assert id="BR-BT-00512-0288" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0288</assert>
		<assert id="BR-BT-00739-0096" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0096</assert>
		<assert id="BR-BT-00739-0294" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0294</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '29']">
		<assert id="BR-BT-00505-0087" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0087</assert>
		<assert id="BR-BT-00505-0231" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0231</assert>
		<assert id="BR-BT-00507-0087" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0087</assert>
		<assert id="BR-BT-00507-0282" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0282</assert>
		<assert id="BR-BT-00510-0189" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0189</assert>
		<assert id="BR-BT-00510-0240" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0240</assert>
		<assert id="BR-BT-00510-0291" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0291</assert>
		<assert id="BR-BT-00512-0087" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0087</assert>
		<assert id="BR-BT-00512-0281" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0281</assert>
		<assert id="BR-BT-00739-0088" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0088</assert>
		<assert id="BR-BT-00739-0287" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0287</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '30']">
		<assert id="BR-BT-00505-0088" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0088</assert>
		<assert id="BR-BT-00505-0232" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0232</assert>
		<assert id="BR-BT-00507-0088" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0088</assert>
		<assert id="BR-BT-00507-0283" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0283</assert>
		<assert id="BR-BT-00510-0190" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0190</assert>
		<assert id="BR-BT-00510-0241" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0241</assert>
		<assert id="BR-BT-00510-0292" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0292</assert>
		<assert id="BR-BT-00512-0088" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0088</assert>
		<assert id="BR-BT-00512-0282" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0282</assert>
		<assert id="BR-BT-00739-0089" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0089</assert>
		<assert id="BR-BT-00739-0288" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0288</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '32']">
		<assert id="BR-BT-00505-0090" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0090</assert>
		<assert id="BR-BT-00505-0234" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0234</assert>
		<assert id="BR-BT-00507-0090" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0090</assert>
		<assert id="BR-BT-00507-0285" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0285</assert>
		<assert id="BR-BT-00510-0192" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0192</assert>
		<assert id="BR-BT-00510-0243" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0243</assert>
		<assert id="BR-BT-00510-0294" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0294</assert>
		<assert id="BR-BT-00512-0090" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0090</assert>
		<assert id="BR-BT-00512-0284" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0284</assert>
		<assert id="BR-BT-00739-0091" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0091</assert>
		<assert id="BR-BT-00739-0290" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0290</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '31']">
		<assert id="BR-BT-00505-0089" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0089</assert>
		<assert id="BR-BT-00505-0233" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0233</assert>
		<assert id="BR-BT-00507-0089" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0089</assert>
		<assert id="BR-BT-00507-0284" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0284</assert>
		<assert id="BR-BT-00510-0191" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0191</assert>
		<assert id="BR-BT-00510-0242" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0242</assert>
		<assert id="BR-BT-00510-0293" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0293</assert>
		<assert id="BR-BT-00512-0089" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0089</assert>
		<assert id="BR-BT-00512-0283" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0283</assert>
		<assert id="BR-BT-00739-0090" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0090</assert>
		<assert id="BR-BT-00739-0289" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0289</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '23']">
		<assert id="BR-BT-00505-0081" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0081</assert>
		<assert id="BR-BT-00505-0225" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0225</assert>
		<assert id="BR-BT-00507-0081" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0081</assert>
		<assert id="BR-BT-00507-0276" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0276</assert>
		<assert id="BR-BT-00510-0183" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0183</assert>
		<assert id="BR-BT-00510-0234" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0234</assert>
		<assert id="BR-BT-00510-0285" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0285</assert>
		<assert id="BR-BT-00512-0081" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0081</assert>
		<assert id="BR-BT-00512-0275" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0275</assert>
		<assert id="BR-BT-00739-0082" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0082</assert>
		<assert id="BR-BT-00739-0281" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0281</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '24']">
		<assert id="BR-BT-00505-0082" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0082</assert>
		<assert id="BR-BT-00505-0226" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0226</assert>
		<assert id="BR-BT-00507-0082" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0082</assert>
		<assert id="BR-BT-00507-0277" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0277</assert>
		<assert id="BR-BT-00510-0184" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0184</assert>
		<assert id="BR-BT-00510-0235" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0235</assert>
		<assert id="BR-BT-00510-0286" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0286</assert>
		<assert id="BR-BT-00512-0082" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0082</assert>
		<assert id="BR-BT-00512-0276" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0276</assert>
		<assert id="BR-BT-00739-0083" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0083</assert>
		<assert id="BR-BT-00739-0282" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0282</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '20']">
		<assert id="BR-BT-00505-0078" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0078</assert>
		<assert id="BR-BT-00505-0222" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0222</assert>
		<assert id="BR-BT-00507-0078" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0078</assert>
		<assert id="BR-BT-00507-0273" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0273</assert>
		<assert id="BR-BT-00510-0180" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0180</assert>
		<assert id="BR-BT-00510-0231" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0231</assert>
		<assert id="BR-BT-00510-0282" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0282</assert>
		<assert id="BR-BT-00512-0078" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0078</assert>
		<assert id="BR-BT-00512-0272" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0272</assert>
		<assert id="BR-BT-00739-0079" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0079</assert>
		<assert id="BR-BT-00739-0278" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0278</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '21']">
		<assert id="BR-BT-00505-0079" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0079</assert>
		<assert id="BR-BT-00505-0223" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0223</assert>
		<assert id="BR-BT-00507-0079" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0079</assert>
		<assert id="BR-BT-00507-0274" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0274</assert>
		<assert id="BR-BT-00510-0181" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0181</assert>
		<assert id="BR-BT-00510-0232" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0232</assert>
		<assert id="BR-BT-00510-0283" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0283</assert>
		<assert id="BR-BT-00512-0079" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0079</assert>
		<assert id="BR-BT-00512-0273" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0273</assert>
		<assert id="BR-BT-00739-0080" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0080</assert>
		<assert id="BR-BT-00739-0279" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0279</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '16']">
		<assert id="BR-BT-00505-0073" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0073</assert>
		<assert id="BR-BT-00505-0218" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0218</assert>
		<assert id="BR-BT-00507-0073" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0073</assert>
		<assert id="BR-BT-00507-0269" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0269</assert>
		<assert id="BR-BT-00510-0175" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0175</assert>
		<assert id="BR-BT-00510-0226" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0226</assert>
		<assert id="BR-BT-00510-0277" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0277</assert>
		<assert id="BR-BT-00512-0073" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0073</assert>
		<assert id="BR-BT-00512-0268" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0268</assert>
		<assert id="BR-BT-00739-0074" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0074</assert>
		<assert id="BR-BT-00739-0274" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0274</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '17']">
		<assert id="BR-BT-00505-0074" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0074</assert>
		<assert id="BR-BT-00505-0219" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0219</assert>
		<assert id="BR-BT-00507-0074" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0074</assert>
		<assert id="BR-BT-00507-0270" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0270</assert>
		<assert id="BR-BT-00510-0176" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0176</assert>
		<assert id="BR-BT-00510-0227" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0227</assert>
		<assert id="BR-BT-00510-0278" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0278</assert>
		<assert id="BR-BT-00512-0074" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0074</assert>
		<assert id="BR-BT-00512-0269" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0269</assert>
		<assert id="BR-BT-00739-0075" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0075</assert>
		<assert id="BR-BT-00739-0275" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0275</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '19']">
		<assert id="BR-BT-00505-0076" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0076</assert>
		<assert id="BR-BT-00505-0221" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0221</assert>
		<assert id="BR-BT-00507-0076" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0076</assert>
		<assert id="BR-BT-00507-0272" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0272</assert>
		<assert id="BR-BT-00510-0178" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0178</assert>
		<assert id="BR-BT-00510-0229" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0229</assert>
		<assert id="BR-BT-00510-0280" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0280</assert>
		<assert id="BR-BT-00512-0076" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0076</assert>
		<assert id="BR-BT-00512-0271" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0271</assert>
		<assert id="BR-BT-00739-0077" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0077</assert>
		<assert id="BR-BT-00739-0277" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0277</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '18']">
		<assert id="BR-BT-00505-0075" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0075</assert>
		<assert id="BR-BT-00505-0220" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0220</assert>
		<assert id="BR-BT-00507-0075" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0075</assert>
		<assert id="BR-BT-00507-0271" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0271</assert>
		<assert id="BR-BT-00510-0177" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0177</assert>
		<assert id="BR-BT-00510-0228" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0228</assert>
		<assert id="BR-BT-00510-0279" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0279</assert>
		<assert id="BR-BT-00512-0075" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0075</assert>
		<assert id="BR-BT-00512-0270" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0270</assert>
		<assert id="BR-BT-00739-0076" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0076</assert>
		<assert id="BR-BT-00739-0276" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0276</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '1']">
		<assert id="BR-BT-00505-0055" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0055</assert>
		<assert id="BR-BT-00505-0201" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0201</assert>
		<assert id="BR-BT-00507-0055" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0055</assert>
		<assert id="BR-BT-00507-0252" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0252</assert>
		<assert id="BR-BT-00510-0157" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0157</assert>
		<assert id="BR-BT-00510-0208" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0208</assert>
		<assert id="BR-BT-00510-0259" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0259</assert>
		<assert id="BR-BT-00512-0055" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0055</assert>
		<assert id="BR-BT-00739-0056" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0056</assert>
		<assert id="BR-BT-00739-0257" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0257</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '2']">
		<assert id="BR-BT-00505-0056" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0056</assert>
		<assert id="BR-BT-00505-0202" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0202</assert>
		<assert id="BR-BT-00507-0056" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0056</assert>
		<assert id="BR-BT-00507-0253" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0253</assert>
		<assert id="BR-BT-00510-0158" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0158</assert>
		<assert id="BR-BT-00510-0209" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0209</assert>
		<assert id="BR-BT-00510-0260" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0260</assert>
		<assert id="BR-BT-00512-0056" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0056</assert>
		<assert id="BR-BT-00512-0252" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0252</assert>
		<assert id="BR-BT-00739-0057" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0057</assert>
		<assert id="BR-BT-00739-0258" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0258</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '3']">
		<assert id="BR-BT-00505-0057" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0057</assert>
		<assert id="BR-BT-00505-0203" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0203</assert>
		<assert id="BR-BT-00507-0057" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0057</assert>
		<assert id="BR-BT-00507-0254" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0254</assert>
		<assert id="BR-BT-00510-0159" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0159</assert>
		<assert id="BR-BT-00510-0210" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0210</assert>
		<assert id="BR-BT-00510-0261" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0261</assert>
		<assert id="BR-BT-00512-0057" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0057</assert>
		<assert id="BR-BT-00512-0253" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0253</assert>
		<assert id="BR-BT-00739-0058" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0058</assert>
		<assert id="BR-BT-00739-0259" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0259</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '12']">
		<assert id="BR-BT-00505-0069" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0069</assert>
		<assert id="BR-BT-00505-0214" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0214</assert>
		<assert id="BR-BT-00507-0069" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0069</assert>
		<assert id="BR-BT-00507-0265" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0265</assert>
		<assert id="BR-BT-00510-0171" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0171</assert>
		<assert id="BR-BT-00510-0222" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0222</assert>
		<assert id="BR-BT-00510-0273" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0273</assert>
		<assert id="BR-BT-00512-0069" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0069</assert>
		<assert id="BR-BT-00512-0264" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0264</assert>
		<assert id="BR-BT-00739-0070" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0070</assert>
		<assert id="BR-BT-00739-0270" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0270</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '13']">
		<assert id="BR-BT-00505-0070" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0070</assert>
		<assert id="BR-BT-00505-0215" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0215</assert>
		<assert id="BR-BT-00507-0070" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0070</assert>
		<assert id="BR-BT-00507-0266" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0266</assert>
		<assert id="BR-BT-00510-0172" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0172</assert>
		<assert id="BR-BT-00510-0223" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0223</assert>
		<assert id="BR-BT-00510-0274" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0274</assert>
		<assert id="BR-BT-00512-0070" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0070</assert>
		<assert id="BR-BT-00512-0265" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0265</assert>
		<assert id="BR-BT-00739-0071" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0071</assert>
		<assert id="BR-BT-00739-0271" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0271</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '14']">
		<assert id="BR-BT-00505-0071" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0071</assert>
		<assert id="BR-BT-00505-0216" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0216</assert>
		<assert id="BR-BT-00507-0071" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0071</assert>
		<assert id="BR-BT-00507-0267" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0267</assert>
		<assert id="BR-BT-00510-0173" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0173</assert>
		<assert id="BR-BT-00510-0224" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0224</assert>
		<assert id="BR-BT-00510-0275" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0275</assert>
		<assert id="BR-BT-00512-0071" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0071</assert>
		<assert id="BR-BT-00512-0266" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0266</assert>
		<assert id="BR-BT-00739-0072" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0072</assert>
		<assert id="BR-BT-00739-0272" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0272</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '10']">
		<assert id="BR-BT-00505-0066" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0066</assert>
		<assert id="BR-BT-00505-0211" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0211</assert>
		<assert id="BR-BT-00507-0066" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0066</assert>
		<assert id="BR-BT-00507-0262" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0262</assert>
		<assert id="BR-BT-00510-0168" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0168</assert>
		<assert id="BR-BT-00510-0219" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0219</assert>
		<assert id="BR-BT-00510-0270" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0270</assert>
		<assert id="BR-BT-00512-0066" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0066</assert>
		<assert id="BR-BT-00512-0261" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0261</assert>
		<assert id="BR-BT-00739-0067" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0067</assert>
		<assert id="BR-BT-00739-0267" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0267</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '11']">
		<assert id="BR-BT-00505-0067" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0067</assert>
		<assert id="BR-BT-00505-0212" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0212</assert>
		<assert id="BR-BT-00507-0067" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0067</assert>
		<assert id="BR-BT-00507-0263" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0263</assert>
		<assert id="BR-BT-00510-0169" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0169</assert>
		<assert id="BR-BT-00510-0220" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0220</assert>
		<assert id="BR-BT-00510-0271" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0271</assert>
		<assert id="BR-BT-00512-0067" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0067</assert>
		<assert id="BR-BT-00512-0262" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0262</assert>
		<assert id="BR-BT-00739-0068" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0068</assert>
		<assert id="BR-BT-00739-0268" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0268</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '4']">
		<assert id="BR-BT-00505-0058" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0058</assert>
		<assert id="BR-BT-00505-0204" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0204</assert>
		<assert id="BR-BT-00507-0058" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0058</assert>
		<assert id="BR-BT-00507-0255" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0255</assert>
		<assert id="BR-BT-00510-0160" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0160</assert>
		<assert id="BR-BT-00510-0211" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0211</assert>
		<assert id="BR-BT-00510-0262" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0262</assert>
		<assert id="BR-BT-00512-0058" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0058</assert>
		<assert id="BR-BT-00512-0254" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0254</assert>
		<assert id="BR-BT-00739-0059" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0059</assert>
		<assert id="BR-BT-00739-0260" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0260</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '5']">
		<assert id="BR-BT-00505-0059" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0059</assert>
		<assert id="BR-BT-00505-0205" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0205</assert>
		<assert id="BR-BT-00507-0059" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0059</assert>
		<assert id="BR-BT-00507-0256" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0256</assert>
		<assert id="BR-BT-00510-0161" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0161</assert>
		<assert id="BR-BT-00510-0212" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0212</assert>
		<assert id="BR-BT-00510-0263" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0263</assert>
		<assert id="BR-BT-00512-0059" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0059</assert>
		<assert id="BR-BT-00512-0255" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0255</assert>
		<assert id="BR-BT-00739-0060" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0060</assert>
		<assert id="BR-BT-00739-0261" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0261</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '6']">
		<assert id="BR-BT-00505-0060" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0060</assert>
		<assert id="BR-BT-00505-0206" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0206</assert>
		<assert id="BR-BT-00507-0060" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0060</assert>
		<assert id="BR-BT-00507-0257" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0257</assert>
		<assert id="BR-BT-00510-0162" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0162</assert>
		<assert id="BR-BT-00510-0213" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0213</assert>
		<assert id="BR-BT-00510-0264" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0264</assert>
		<assert id="BR-BT-00512-0060" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0060</assert>
		<assert id="BR-BT-00512-0256" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0256</assert>
		<assert id="BR-BT-00739-0061" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0061</assert>
		<assert id="BR-BT-00739-0262" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0262</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '7']">
		<assert id="BR-BT-00505-0063" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0063</assert>
		<assert id="BR-BT-00505-0208" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0208</assert>
		<assert id="BR-BT-00507-0063" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0063</assert>
		<assert id="BR-BT-00507-0259" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0259</assert>
		<assert id="BR-BT-00510-0165" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0165</assert>
		<assert id="BR-BT-00510-0216" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0216</assert>
		<assert id="BR-BT-00510-0267" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0267</assert>
		<assert id="BR-BT-00512-0063" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0063</assert>
		<assert id="BR-BT-00512-0258" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0258</assert>
		<assert id="BR-BT-00739-0064" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0064</assert>
		<assert id="BR-BT-00739-0264" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0264</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '8']">
		<assert id="BR-BT-00505-0064" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0064</assert>
		<assert id="BR-BT-00505-0209" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0209</assert>
		<assert id="BR-BT-00507-0064" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0064</assert>
		<assert id="BR-BT-00507-0260" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0260</assert>
		<assert id="BR-BT-00510-0166" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0166</assert>
		<assert id="BR-BT-00510-0217" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0217</assert>
		<assert id="BR-BT-00510-0268" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0268</assert>
		<assert id="BR-BT-00512-0064" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0064</assert>
		<assert id="BR-BT-00512-0259" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0259</assert>
		<assert id="BR-BT-00739-0065" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0065</assert>
		<assert id="BR-BT-00739-0265" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0265</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '9']">
		<assert id="BR-BT-00505-0065" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0065</assert>
		<assert id="BR-BT-00505-0210" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0210</assert>
		<assert id="BR-BT-00507-0065" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0065</assert>
		<assert id="BR-BT-00507-0261" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0261</assert>
		<assert id="BR-BT-00510-0167" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0167</assert>
		<assert id="BR-BT-00510-0218" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0218</assert>
		<assert id="BR-BT-00510-0269" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0269</assert>
		<assert id="BR-BT-00512-0065" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0065</assert>
		<assert id="BR-BT-00512-0260" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0260</assert>
		<assert id="BR-BT-00739-0066" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0066</assert>
		<assert id="BR-BT-00739-0266" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0266</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '15']">
		<assert id="BR-BT-00505-0072" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0072</assert>
		<assert id="BR-BT-00505-0217" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0217</assert>
		<assert id="BR-BT-00507-0072" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0072</assert>
		<assert id="BR-BT-00507-0268" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0268</assert>
		<assert id="BR-BT-00510-0174" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0174</assert>
		<assert id="BR-BT-00510-0225" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0225</assert>
		<assert id="BR-BT-00510-0276" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0276</assert>
		<assert id="BR-BT-00512-0072" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0072</assert>
		<assert id="BR-BT-00512-0267" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0267</assert>
		<assert id="BR-BT-00739-0073" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0073</assert>
		<assert id="BR-BT-00739-0273" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0273</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '22']">
		<assert id="BR-BT-00505-0080" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0080</assert>
		<assert id="BR-BT-00505-0224" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0224</assert>
		<assert id="BR-BT-00507-0080" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0080</assert>
		<assert id="BR-BT-00507-0275" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0275</assert>
		<assert id="BR-BT-00510-0182" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0182</assert>
		<assert id="BR-BT-00510-0233" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0233</assert>
		<assert id="BR-BT-00510-0284" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0284</assert>
		<assert id="BR-BT-00512-0080" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0080</assert>
		<assert id="BR-BT-00512-0274" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0274</assert>
		<assert id="BR-BT-00739-0081" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0081</assert>
		<assert id="BR-BT-00739-0280" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0280</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '25']">
		<assert id="BR-BT-00505-0083" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0083</assert>
		<assert id="BR-BT-00505-0227" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0227</assert>
		<assert id="BR-BT-00507-0083" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0083</assert>
		<assert id="BR-BT-00507-0278" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0278</assert>
		<assert id="BR-BT-00510-0185" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0185</assert>
		<assert id="BR-BT-00510-0236" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0236</assert>
		<assert id="BR-BT-00510-0287" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0287</assert>
		<assert id="BR-BT-00512-0083" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0083</assert>
		<assert id="BR-BT-00512-0277" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0277</assert>
		<assert id="BR-BT-00739-0084" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0084</assert>
		<assert id="BR-BT-00739-0283" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0283</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '26']">
		<assert id="BR-BT-00505-0084" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0084</assert>
		<assert id="BR-BT-00505-0228" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0228</assert>
		<assert id="BR-BT-00507-0084" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0084</assert>
		<assert id="BR-BT-00507-0279" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0279</assert>
		<assert id="BR-BT-00510-0186" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0186</assert>
		<assert id="BR-BT-00510-0237" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0237</assert>
		<assert id="BR-BT-00510-0288" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0288</assert>
		<assert id="BR-BT-00512-0084" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0084</assert>
		<assert id="BR-BT-00512-0278" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0278</assert>
		<assert id="BR-BT-00739-0085" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0085</assert>
		<assert id="BR-BT-00739-0284" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0284</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '28']">
		<assert id="BR-BT-00505-0086" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0086</assert>
		<assert id="BR-BT-00505-0230" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0230</assert>
		<assert id="BR-BT-00507-0086" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0086</assert>
		<assert id="BR-BT-00507-0281" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0281</assert>
		<assert id="BR-BT-00510-0188" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0188</assert>
		<assert id="BR-BT-00510-0239" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0239</assert>
		<assert id="BR-BT-00510-0290" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0290</assert>
		<assert id="BR-BT-00512-0086" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0086</assert>
		<assert id="BR-BT-00512-0280" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0280</assert>
		<assert id="BR-BT-00739-0087" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0087</assert>
		<assert id="BR-BT-00739-0286" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0286</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = '27']">
		<assert id="BR-BT-00505-0085" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0085</assert>
		<assert id="BR-BT-00505-0229" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0229</assert>
		<assert id="BR-BT-00507-0085" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0085</assert>
		<assert id="BR-BT-00507-0280" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0280</assert>
		<assert id="BR-BT-00510-0187" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0187</assert>
		<assert id="BR-BT-00510-0238" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0238</assert>
		<assert id="BR-BT-00510-0289" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0289</assert>
		<assert id="BR-BT-00512-0085" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0085</assert>
		<assert id="BR-BT-00512-0279" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0279</assert>
		<assert id="BR-BT-00739-0086" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0086</assert>
		<assert id="BR-BT-00739-0285" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0285</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = 'T01']">
		<assert id="BR-BT-00505-0062" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0062</assert>
		<assert id="BR-BT-00505-0207" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0207</assert>
		<assert id="BR-BT-00507-0062" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0062</assert>
		<assert id="BR-BT-00507-0258" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0258</assert>
		<assert id="BR-BT-00510-0164" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0164</assert>
		<assert id="BR-BT-00510-0215" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0215</assert>
		<assert id="BR-BT-00510-0266" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0266</assert>
		<assert id="BR-BT-00512-0062" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0062</assert>
		<assert id="BR-BT-00512-0257" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0257</assert>
		<assert id="BR-BT-00739-0063" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0063</assert>
		<assert id="BR-BT-00739-0263" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0263</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = 'T02']">
		<assert id="BR-BT-00505-0092" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0092</assert>
		<assert id="BR-BT-00505-0235" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0235</assert>
		<assert id="BR-BT-00507-0092" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0092</assert>
		<assert id="BR-BT-00507-0286" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0286</assert>
		<assert id="BR-BT-00510-0194" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0194</assert>
		<assert id="BR-BT-00510-0245" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0245</assert>
		<assert id="BR-BT-00510-0296" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0296</assert>
		<assert id="BR-BT-00512-0092" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0092</assert>
		<assert id="BR-BT-00512-0285" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0285</assert>
		<assert id="BR-BT-00739-0093" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0093</assert>
		<assert id="BR-BT-00739-0291" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0291</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = 'CEI']">
		<assert id="BR-BT-00505-0068" role="WARN" test="count(cbc:WebsiteURI) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0068</assert>
		<assert id="BR-BT-00505-0213" role="ERROR" test="count(cbc:WebsiteURI) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00505-0213</assert>
		<assert id="BR-BT-00507-0068" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0068</assert>
		<assert id="BR-BT-00507-0264" role="ERROR" test="count(cac:PostalAddress/cbc:CountrySubentityCode) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0264</assert>
		<assert id="BR-BT-00510-0170" role="ERROR" test="count(cac:PostalAddress/cbc:StreetName) = 0 or (cac:PostalAddress/cbc:CityName/normalize-space(text())!='')">rule|message|BR-BT-00510-0170</assert>
		<assert id="BR-BT-00510-0221" role="ERROR" test="count(cac:PostalAddress/cbc:AdditionalStreetName) = 0 or (cac:PostalAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0221</assert>
		<assert id="BR-BT-00510-0272" role="ERROR" test="count(cac:PostalAddress/cac:AddressLine/cbc:Line) = 0 or (cac:PostalAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0272</assert>
		<assert id="BR-BT-00512-0068" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) &gt; 0 or not(cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0068</assert>
		<assert id="BR-BT-00512-0263" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0263</assert>
		<assert id="BR-BT-00739-0069" role="WARN" test="count(cac:Contact/cbc:Telefax) &gt; 0 or not(cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0069</assert>
		<assert id="BR-BT-00739-0269" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cac:PartyName/cbc:Name/normalize-space(text())!='')">rule|message|BR-BT-00739-0269</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint[$noticeSubType = 'E5']">
		<assert id="BR-BT-00512-0101" role="ERROR" test="count(cac:PostalAddress/cbc:PostalZone) = 0 or (cac:PostalAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '36']">
		<assert id="BR-BT-00500-0149" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0149</assert>
		<assert id="BR-BT-00503-0149" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0149</assert>
		<assert id="BR-BT-00506-0149" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0149</assert>
		<assert id="BR-BT-00507-0147" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0147</assert>
		<assert id="BR-BT-00507-0333" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0333</assert>
		<assert id="BR-BT-00510-0351" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0351</assert>
		<assert id="BR-BT-00510-0402" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0402</assert>
		<assert id="BR-BT-00510-0453" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0453</assert>
		<assert id="BR-BT-00512-0147" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0147</assert>
		<assert id="BR-BT-00512-0333" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0333</assert>
		<assert id="BR-BT-00513-0147" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0147</assert>
		<assert id="BR-BT-00513-0252" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0252</assert>
		<assert id="BR-BT-00514-0147" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0147</assert>
		<assert id="BR-BT-00514-0252" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0252</assert>
		<assert id="BR-BT-00739-0149" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0149</assert>
		<assert id="BR-OPT-00160-0045" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0045</assert>
		<assert id="BR-OPT-00160-0093" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0093</assert>
		<assert id="BR-OPT-00202-0045" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0045</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '37']">
		<assert id="BR-BT-00500-0150" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0150</assert>
		<assert id="BR-BT-00503-0150" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0150</assert>
		<assert id="BR-BT-00506-0150" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0150</assert>
		<assert id="BR-BT-00507-0148" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0148</assert>
		<assert id="BR-BT-00507-0334" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0334</assert>
		<assert id="BR-BT-00510-0352" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0352</assert>
		<assert id="BR-BT-00510-0403" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0403</assert>
		<assert id="BR-BT-00510-0454" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0454</assert>
		<assert id="BR-BT-00512-0148" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0148</assert>
		<assert id="BR-BT-00512-0334" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0334</assert>
		<assert id="BR-BT-00513-0148" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0148</assert>
		<assert id="BR-BT-00513-0253" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0253</assert>
		<assert id="BR-BT-00514-0148" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0148</assert>
		<assert id="BR-BT-00514-0253" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0253</assert>
		<assert id="BR-BT-00739-0150" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0150</assert>
		<assert id="BR-OPT-00160-0046" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0046</assert>
		<assert id="BR-OPT-00160-0094" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0094</assert>
		<assert id="BR-OPT-00202-0046" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0046</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '33']">
		<assert id="BR-BT-00500-0146" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0146</assert>
		<assert id="BR-BT-00503-0146" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0146</assert>
		<assert id="BR-BT-00506-0146" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0146</assert>
		<assert id="BR-BT-00507-0144" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0144</assert>
		<assert id="BR-BT-00507-0330" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0330</assert>
		<assert id="BR-BT-00510-0348" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0348</assert>
		<assert id="BR-BT-00510-0399" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0399</assert>
		<assert id="BR-BT-00510-0450" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0450</assert>
		<assert id="BR-BT-00512-0144" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0144</assert>
		<assert id="BR-BT-00512-0330" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0330</assert>
		<assert id="BR-BT-00513-0144" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0144</assert>
		<assert id="BR-BT-00513-0249" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0249</assert>
		<assert id="BR-BT-00514-0144" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0144</assert>
		<assert id="BR-BT-00514-0249" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0249</assert>
		<assert id="BR-BT-00739-0146" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0146</assert>
		<assert id="BR-OPT-00160-0042" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0042</assert>
		<assert id="BR-OPT-00160-0090" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0090</assert>
		<assert id="BR-OPT-00202-0042" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0042</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '34']">
		<assert id="BR-BT-00500-0147" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0147</assert>
		<assert id="BR-BT-00503-0147" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0147</assert>
		<assert id="BR-BT-00506-0147" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0147</assert>
		<assert id="BR-BT-00507-0145" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0145</assert>
		<assert id="BR-BT-00507-0331" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0331</assert>
		<assert id="BR-BT-00510-0349" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0349</assert>
		<assert id="BR-BT-00510-0400" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0400</assert>
		<assert id="BR-BT-00510-0451" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0451</assert>
		<assert id="BR-BT-00512-0145" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0145</assert>
		<assert id="BR-BT-00512-0331" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0331</assert>
		<assert id="BR-BT-00513-0145" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0145</assert>
		<assert id="BR-BT-00513-0250" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0250</assert>
		<assert id="BR-BT-00514-0145" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0145</assert>
		<assert id="BR-BT-00514-0250" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0250</assert>
		<assert id="BR-BT-00739-0147" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0147</assert>
		<assert id="BR-OPT-00160-0043" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0043</assert>
		<assert id="BR-OPT-00160-0091" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0091</assert>
		<assert id="BR-OPT-00202-0043" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0043</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '35']">
		<assert id="BR-BT-00500-0148" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0148</assert>
		<assert id="BR-BT-00503-0148" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0148</assert>
		<assert id="BR-BT-00506-0148" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0148</assert>
		<assert id="BR-BT-00507-0146" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0146</assert>
		<assert id="BR-BT-00507-0332" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0332</assert>
		<assert id="BR-BT-00510-0350" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0350</assert>
		<assert id="BR-BT-00510-0401" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0401</assert>
		<assert id="BR-BT-00510-0452" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0452</assert>
		<assert id="BR-BT-00512-0146" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0146</assert>
		<assert id="BR-BT-00512-0332" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0332</assert>
		<assert id="BR-BT-00513-0146" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0146</assert>
		<assert id="BR-BT-00513-0251" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0251</assert>
		<assert id="BR-BT-00514-0146" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0146</assert>
		<assert id="BR-BT-00514-0251" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0251</assert>
		<assert id="BR-BT-00739-0148" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0148</assert>
		<assert id="BR-OPT-00160-0044" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0044</assert>
		<assert id="BR-OPT-00160-0092" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0092</assert>
		<assert id="BR-OPT-00202-0044" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0044</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '29']">
		<assert id="BR-BT-00500-0140" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0140</assert>
		<assert id="BR-BT-00503-0140" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0140</assert>
		<assert id="BR-BT-00506-0140" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0140</assert>
		<assert id="BR-BT-00507-0138" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0138</assert>
		<assert id="BR-BT-00507-0325" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0325</assert>
		<assert id="BR-BT-00510-0342" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0342</assert>
		<assert id="BR-BT-00510-0393" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0393</assert>
		<assert id="BR-BT-00510-0444" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0444</assert>
		<assert id="BR-BT-00512-0138" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0138</assert>
		<assert id="BR-BT-00512-0325" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0325</assert>
		<assert id="BR-BT-00513-0138" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0138</assert>
		<assert id="BR-BT-00513-0244" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0244</assert>
		<assert id="BR-BT-00514-0138" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0138</assert>
		<assert id="BR-BT-00514-0244" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0244</assert>
		<assert id="BR-BT-00739-0140" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0140</assert>
		<assert id="BR-OPT-00160-0036" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0036</assert>
		<assert id="BR-OPT-00160-0085" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0085</assert>
		<assert id="BR-OPT-00202-0036" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0036</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '30']">
		<assert id="BR-BT-00500-0141" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0141</assert>
		<assert id="BR-BT-00503-0141" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0141</assert>
		<assert id="BR-BT-00506-0141" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0141</assert>
		<assert id="BR-BT-00507-0139" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0139</assert>
		<assert id="BR-BT-00507-0326" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0326</assert>
		<assert id="BR-BT-00510-0343" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0343</assert>
		<assert id="BR-BT-00510-0394" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0394</assert>
		<assert id="BR-BT-00510-0445" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0445</assert>
		<assert id="BR-BT-00512-0139" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0139</assert>
		<assert id="BR-BT-00512-0326" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0326</assert>
		<assert id="BR-BT-00513-0139" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0139</assert>
		<assert id="BR-BT-00513-0245" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0245</assert>
		<assert id="BR-BT-00514-0139" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0139</assert>
		<assert id="BR-BT-00514-0245" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0245</assert>
		<assert id="BR-BT-00739-0141" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0141</assert>
		<assert id="BR-OPT-00160-0037" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0037</assert>
		<assert id="BR-OPT-00160-0086" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0086</assert>
		<assert id="BR-OPT-00202-0037" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0037</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '32']">
		<assert id="BR-BT-00500-0143" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0143</assert>
		<assert id="BR-BT-00503-0143" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0143</assert>
		<assert id="BR-BT-00506-0143" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0143</assert>
		<assert id="BR-BT-00507-0141" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0141</assert>
		<assert id="BR-BT-00507-0328" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0328</assert>
		<assert id="BR-BT-00510-0345" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0345</assert>
		<assert id="BR-BT-00510-0396" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0396</assert>
		<assert id="BR-BT-00510-0447" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0447</assert>
		<assert id="BR-BT-00512-0141" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0141</assert>
		<assert id="BR-BT-00512-0328" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0328</assert>
		<assert id="BR-BT-00513-0141" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0141</assert>
		<assert id="BR-BT-00513-0247" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0247</assert>
		<assert id="BR-BT-00514-0141" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0141</assert>
		<assert id="BR-BT-00514-0247" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0247</assert>
		<assert id="BR-BT-00739-0143" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0143</assert>
		<assert id="BR-OPT-00160-0039" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0039</assert>
		<assert id="BR-OPT-00160-0088" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0088</assert>
		<assert id="BR-OPT-00202-0039" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0039</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '31']">
		<assert id="BR-BT-00500-0142" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0142</assert>
		<assert id="BR-BT-00503-0142" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0142</assert>
		<assert id="BR-BT-00506-0142" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0142</assert>
		<assert id="BR-BT-00507-0140" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0140</assert>
		<assert id="BR-BT-00507-0327" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0327</assert>
		<assert id="BR-BT-00510-0344" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0344</assert>
		<assert id="BR-BT-00510-0395" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0395</assert>
		<assert id="BR-BT-00510-0446" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0446</assert>
		<assert id="BR-BT-00512-0140" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0140</assert>
		<assert id="BR-BT-00512-0327" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0327</assert>
		<assert id="BR-BT-00513-0140" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0140</assert>
		<assert id="BR-BT-00513-0246" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0246</assert>
		<assert id="BR-BT-00514-0140" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0140</assert>
		<assert id="BR-BT-00514-0246" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0246</assert>
		<assert id="BR-BT-00739-0142" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0142</assert>
		<assert id="BR-OPT-00160-0038" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0038</assert>
		<assert id="BR-OPT-00160-0087" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0087</assert>
		<assert id="BR-OPT-00202-0038" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0038</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '25']">
		<assert id="BR-BT-00500-0136" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0136</assert>
		<assert id="BR-BT-00503-0136" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0136</assert>
		<assert id="BR-BT-00506-0136" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0136</assert>
		<assert id="BR-BT-00507-0134" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0134</assert>
		<assert id="BR-BT-00507-0321" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0321</assert>
		<assert id="BR-BT-00510-0338" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0338</assert>
		<assert id="BR-BT-00510-0389" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0389</assert>
		<assert id="BR-BT-00510-0440" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0440</assert>
		<assert id="BR-BT-00512-0134" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0134</assert>
		<assert id="BR-BT-00512-0321" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0321</assert>
		<assert id="BR-BT-00513-0134" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0134</assert>
		<assert id="BR-BT-00513-0240" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0240</assert>
		<assert id="BR-BT-00514-0134" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0134</assert>
		<assert id="BR-BT-00514-0240" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0240</assert>
		<assert id="BR-BT-00739-0136" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0136</assert>
		<assert id="BR-OPT-00160-0032" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0032</assert>
		<assert id="BR-OPT-00160-0081" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0081</assert>
		<assert id="BR-OPT-00202-0032" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0032</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '26']">
		<assert id="BR-BT-00500-0137" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0137</assert>
		<assert id="BR-BT-00503-0137" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0137</assert>
		<assert id="BR-BT-00506-0137" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0137</assert>
		<assert id="BR-BT-00507-0135" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0135</assert>
		<assert id="BR-BT-00507-0322" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0322</assert>
		<assert id="BR-BT-00510-0339" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0339</assert>
		<assert id="BR-BT-00510-0390" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0390</assert>
		<assert id="BR-BT-00510-0441" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0441</assert>
		<assert id="BR-BT-00512-0135" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0135</assert>
		<assert id="BR-BT-00512-0322" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0322</assert>
		<assert id="BR-BT-00513-0135" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0135</assert>
		<assert id="BR-BT-00513-0241" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0241</assert>
		<assert id="BR-BT-00514-0135" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0135</assert>
		<assert id="BR-BT-00514-0241" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0241</assert>
		<assert id="BR-BT-00739-0137" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0137</assert>
		<assert id="BR-OPT-00160-0033" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0033</assert>
		<assert id="BR-OPT-00160-0082" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0082</assert>
		<assert id="BR-OPT-00202-0033" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0033</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '28']">
		<assert id="BR-BT-00500-0139" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0139</assert>
		<assert id="BR-BT-00503-0139" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0139</assert>
		<assert id="BR-BT-00506-0139" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0139</assert>
		<assert id="BR-BT-00507-0137" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0137</assert>
		<assert id="BR-BT-00507-0324" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0324</assert>
		<assert id="BR-BT-00510-0341" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0341</assert>
		<assert id="BR-BT-00510-0392" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0392</assert>
		<assert id="BR-BT-00510-0443" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0443</assert>
		<assert id="BR-BT-00512-0137" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0137</assert>
		<assert id="BR-BT-00512-0324" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0324</assert>
		<assert id="BR-BT-00513-0137" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0137</assert>
		<assert id="BR-BT-00513-0243" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0243</assert>
		<assert id="BR-BT-00514-0137" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0137</assert>
		<assert id="BR-BT-00514-0243" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0243</assert>
		<assert id="BR-BT-00739-0139" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0139</assert>
		<assert id="BR-OPT-00160-0035" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0035</assert>
		<assert id="BR-OPT-00160-0084" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0084</assert>
		<assert id="BR-OPT-00202-0035" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0035</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = '27']">
		<assert id="BR-BT-00500-0138" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0138</assert>
		<assert id="BR-BT-00503-0138" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0138</assert>
		<assert id="BR-BT-00506-0138" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0138</assert>
		<assert id="BR-BT-00507-0136" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0136</assert>
		<assert id="BR-BT-00507-0323" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0323</assert>
		<assert id="BR-BT-00510-0340" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0340</assert>
		<assert id="BR-BT-00510-0391" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0391</assert>
		<assert id="BR-BT-00510-0442" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0442</assert>
		<assert id="BR-BT-00512-0136" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0136</assert>
		<assert id="BR-BT-00512-0323" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0323</assert>
		<assert id="BR-BT-00513-0136" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0136</assert>
		<assert id="BR-BT-00513-0242" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0242</assert>
		<assert id="BR-BT-00514-0136" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0136</assert>
		<assert id="BR-BT-00514-0242" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0242</assert>
		<assert id="BR-BT-00739-0138" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0138</assert>
		<assert id="BR-OPT-00160-0034" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0034</assert>
		<assert id="BR-OPT-00160-0083" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0083</assert>
		<assert id="BR-OPT-00202-0034" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0034</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner[$noticeSubType = 'T02']">
		<assert id="BR-BT-00500-0145" role="ERROR" test="count(cbc:FamilyName) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-BT-00500-0145</assert>
		<assert id="BR-BT-00503-0145" role="ERROR" test="count(cac:Contact/cbc:Telephone) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00503-0145</assert>
		<assert id="BR-BT-00506-0145" role="ERROR" test="count(cac:Contact/cbc:ElectronicMail) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00506-0145</assert>
		<assert id="BR-BT-00507-0143" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0143</assert>
		<assert id="BR-BT-00507-0329" role="ERROR" test="count(cac:ResidenceAddress/cbc:CountrySubentityCode) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('ALB','AUT','BEL','BGR','CHE','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GBR','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MKD','MLT','MNE','NLD','NOR','POL','PRT','ROU','SRB','SVK','SVN','SWE','TUR'))">rule|message|BR-BT-00507-0329</assert>
		<assert id="BR-BT-00510-0347" role="ERROR" test="count(cac:ResidenceAddress/cbc:StreetName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00510-0347</assert>
		<assert id="BR-BT-00510-0398" role="ERROR" test="count(cac:ResidenceAddress/cbc:AdditionalStreetName) = 0 or (cac:ResidenceAddress/cbc:StreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0398</assert>
		<assert id="BR-BT-00510-0449" role="ERROR" test="count(cac:ResidenceAddress/cac:AddressLine/cbc:Line) = 0 or (cac:ResidenceAddress/cbc:AdditionalStreetName/normalize-space(text())!='')">rule|message|BR-BT-00510-0449</assert>
		<assert id="BR-BT-00512-0143" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) = 0 or (cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0143</assert>
		<assert id="BR-BT-00512-0329" role="ERROR" test="count(cac:ResidenceAddress/cbc:PostalZone) &gt; 0 or not(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode/normalize-space(text())=('1A0','AFG','ALA','ALB','AND','ARG','ARM','AUS','AUT','AZE','BEL','BGD','BGR','BHR','BIH','BLR','BMU','BRA','BRB','BRN','BTN','CAN','CHE','CPV','CYM','CZE','DEU','DJI','DNK','DOM','DZA','ECU','EGY','ESP','EST','ETH','FIN','FRA','FRO','FSM','GBR','GEO','GGY','GIN','GRC','GRL','GTM','GUM','IMN','IRQ','ISR','ITA','JEY','JOR','JPN','KAZ','KEN','KGZ','KHM','KIR','KOR','KWT','LAO','LBN','LIE','LKA','LSO','LTU','LUX','LVA','MAR','MCO','MDG','MDV','MLT','MMR','MNE','MNG','MOZ','MSR','MWI','MYS','NAM','NCL','NER','NGA','NIC','NLD','NOR','NPL','NRU','NZL','OMN','PAK','PER','PHL','PNG','POL','PRY','PSE','PYF','SAU','SDN','SEN','SGP','SJM','SLV','SMR','SRB','SVK','SVN','SWE','SWZ','THA','TJK','TKM','TLS','TTO','TUN','TUR','UKR','URY','USA','UZB','VCT','ZAF','CHL','CHN','CPT','COL','CRI','HRV','CUB','CYP','GNB','HTI','HND','HUN','ISL','IND','IDN','IRN','MHL','MUS','MEX','MDA','PRT','PRI','ROU','RUS','BLM','MAF','SPM','VEN','VNM','VGB','VIR','WLF'))">rule|message|BR-BT-00512-0329</assert>
		<assert id="BR-BT-00513-0143" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0143</assert>
		<assert id="BR-BT-00513-0248" role="ERROR" test="count(cac:ResidenceAddress/cbc:CityName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00513-0248</assert>
		<assert id="BR-BT-00514-0143" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0143</assert>
		<assert id="BR-BT-00514-0248" role="ERROR" test="count(cac:ResidenceAddress/cac:Country/cbc:IdentificationCode) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00514-0248</assert>
		<assert id="BR-BT-00739-0145" role="ERROR" test="count(cac:Contact/cbc:Telefax) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-BT-00739-0145</assert>
		<assert id="BR-OPT-00160-0041" role="ERROR" test="count(cbc:FirstName) = 0 or (cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0041</assert>
		<assert id="BR-OPT-00160-0089" role="ERROR" test="count(cbc:FirstName) &gt; 0 or not(cbc:FamilyName/normalize-space(text())!='')">rule|message|BR-OPT-00160-0089</assert>
		<assert id="BR-OPT-00202-0041" role="ERROR" test="count(cbc:ID) = 0 or (efac:Nationality/cbc:NationalityID/normalize-space(text())!='')">rule|message|BR-OPT-00202-0041</assert>
	</rule>
</pattern>