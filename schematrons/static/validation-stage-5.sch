<?xml version="1.0" encoding="UTF-8" ?>
<!--File generated from metadata database-->
<pattern id="EFORMS-validation-stage-5" xmlns="http://purl.oclc.org/dsdl/schematron">
	<rule context="/*">
		<assert id="BR-BT-00002-0103" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'bri') and (cbc:NoticeTypeCode/normalize-space(text()) = ('brin-ecs','brin-eeig'))) or not(cbc:NoticeTypeCode/@listName = 'bri')">rule|text|BR-BT-00002-0103</assert>
		<assert id="BR-BT-00002-0105" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'competition') and (cbc:NoticeTypeCode/normalize-space(text()) = ('cn-desg','cn-social','cn-standard','pin-cfc-social','pin-cfc-standard','qu-sy','subco'))) or not(cbc:NoticeTypeCode/@listName = 'competition')">rule|text|BR-BT-00002-0105</assert>
		<assert id="BR-BT-00002-0106" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'cont-modif') and (cbc:NoticeTypeCode/normalize-space(text()) = ('can-modif'))) or not(cbc:NoticeTypeCode/@listName = 'cont-modif')">rule|text|BR-BT-00002-0106</assert>
		<assert id="BR-BT-00002-0107" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'dir-awa-pre') and (cbc:NoticeTypeCode/normalize-space(text()) = ('veat'))) or not(cbc:NoticeTypeCode/@listName = 'dir-awa-pre')">rule|text|BR-BT-00002-0107</assert>
		<assert id="BR-BT-00002-0108" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'planning') and (cbc:NoticeTypeCode/normalize-space(text()) = ('pin-buyer','pin-only','pin-rtl','pin-tran'))) or not(cbc:NoticeTypeCode/@listName = 'planning')">rule|text|BR-BT-00002-0108</assert>
		<assert id="BR-BT-00002-0109" role="ERROR" diagnostics="BT-02-notice" test="((cbc:NoticeTypeCode/@listName = 'result') and (cbc:NoticeTypeCode/normalize-space(text()) = ('can-desg','can-social','can-standard','can-tran'))) or not(cbc:NoticeTypeCode/@listName = 'result')">rule|text|BR-BT-00002-0109</assert>
		<assert id="BR-BT-00005-0151" role="ERROR" diagnostics="BT-05_a_-notice" test="((ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efbc:ChangedNoticeIdentifier) and ((cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate/xs:date(text())) or (cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/xs:date(text())) or (cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate/xs:date(text()))) and not(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason/cbc:ReasonCode/normalize-space(text()) = 'cancel')) or not((ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efbc:ChangedNoticeIdentifier) and ((cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate/xs:date(text())) or (cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/xs:date(text())) or (cbc:IssueDate/xs:date(text()) > cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate/xs:date(text()))))">rule|text|BR-BT-00005-0151</assert>
		<assert id="BR-BT-00127-0100" role="ERROR" diagnostics="BT-127-notice" test="((cbc:PlannedDate/xs:date(text()) > cbc:IssueDate/xs:date(text())) or not(cbc:PlannedDate) or not(cbc:IssueDate)) or not(not(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efbc:ChangedNoticeIdentifier))">rule|text|BR-BT-00127-0100</assert>
		<assert id="BR-BT-00702-0150" role="ERROR" diagnostics="BT-702_a_-notice" test="(not(cbc:NoticeLanguageCode/normalize-space(text()) = cac:AdditionalNoticeLanguage/cbc:ID/normalize-space(text()))) or not(cac:AdditionalNoticeLanguage/cbc:ID)">rule|text|BR-BT-00702-0150</assert>
		<assert id="BR-BT-00738-0053" role="ERROR" diagnostics="BT-738-notice" test="((boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:RequestedPublicationDate/xs:date(text()) - cbc:IssueDate/xs:date(text())) &lt; $T + xs:dayTimeDuration('P60D')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:RequestedPublicationDate/xs:date(text()) - cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P0D'))))) or not(cbc:RequestedPublicationDate)">rule|text|BR-BT-00738-0053</assert>
		<assert id="BR-OPT-00300-0250" role="ERROR" diagnostics="ND-Root_OPT-300-Procedure-Buyer" test="(every $buyer in cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies ($buyer = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00300-0250</assert>
		<assert id="BR-OPT-00300-0255" role="ERROR" diagnostics="ND-Root_OPT-300-Procedure-Buyer" test="(every $tenderer in ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:Tenderer/cbc:ID/normalize-space(text()) satisfies not($tenderer = cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text()))) and (every $subcont in ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor/cbc:ID/normalize-space(text()) satisfies not($subcont = cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())))">rule|text|BR-OPT-00300-0255</assert>
	</rule>
	<rule context="/*/cac:AdditionalNoticeLanguage/cbc:ID">
		<assert id="BR-BT-00702-0151" role="ERROR" test="(count(for $x in ., $y in /*/cac:AdditionalNoticeLanguage/cbc:ID[. = $x] return $y) = 1) or not(.)">rule|text|BR-BT-00702-0151</assert>
	</rule>
	<rule context="/*/cac:BusinessCapability/cbc:CapabilityTypeCode">
		<assert id="BR-OPP-00105-0052" role="ERROR" test="count(for $x in ., $y in /*/cac:BusinessCapability/cbc:CapabilityTypeCode[. = $x] return $y) = 1">rule|text|BR-OPP-00105-0052</assert>
	</rule>
	<rule context="/*/cac:BusinessParty/cac:PostalAddress/cbc:CountrySubentityCode">
		<assert id="BR-BT-00507-0356" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-00507-0356</assert>
	</rule>
	<rule context="/*/cac:ContractingParty">
		<assert id="BR-BT-00740-0100" role="ERROR" diagnostics="BT-740-Procedure-Buyer" test="(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text()) = 'cont-ent') or not((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('3','6','9','CEI','14','18','19','22','27','28','31','32','35','40')) and (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text()) = ('pub-undert','pub-undert-cga','pub-undert-ra','pub-undert-la','spec-rights-entity')) and not(../cbc:NoticeTypeCode/normalize-space(text()) = 'can-modif') and (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']))">rule|text|BR-BT-00740-0100</assert>
		<assert id="BR-BT-00740-0101" role="ERROR" diagnostics="BT-740-Procedure-Buyer" test="(cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']/normalize-space(text()) = 'not-cont-ent') or not((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('3','6','9','CEI','14','18','19','22','27','28','31','32','35','40')) and (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-legal-type']/normalize-space(text()) = ('org-sub','org-sub-cga','org-sub-ra','org-sub-la','eu-ins-bod-ag','def-cont','int-org')) and not(../cbc:NoticeTypeCode/normalize-space(text()) = 'can-modif') and (cac:ContractingPartyType/cbc:PartyTypeCode[@listName='buyer-contracting-type']))">rule|text|BR-BT-00740-0101</assert>
	</rule>
	<rule context="/*/cac:ContractingParty/cac:Party">
		<assert id="BR-OPT-00300-0251" role="ERROR" diagnostics="ND-Buyer_OPT-300-Procedure-SProvider" test="(every $provider in cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies ($provider = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00300-0251</assert>
	</rule>
	<rule context="/*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID">
		<assert id="BR-OPT-00300-0290" role="ERROR" test="count(for $x in ., $y in /*/cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID[. = $x] return $y) = 1">rule|text|BR-OPT-00300-0290</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject">
		<assert id="BR-BT-00023-0201" role="ERROR" diagnostics="BT-23-Procedure" test="(cbc:ProcurementTypeCode/normalize-space(text()) != 'supplies') or not((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('14','19','28','32','35','40')) and (cbc:ProcurementTypeCode))">rule|text|BR-BT-00023-0201</assert>
		<assert id="BR-BT-00023-0202" role="ERROR" diagnostics="BT-23-Procedure" test="(not(cbc:ProcurementTypeCode/normalize-space(text()) = cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode/normalize-space(text()))) or not((cbc:ProcurementTypeCode) and (cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode))">rule|text|BR-BT-00023-0202</assert>
		<assert id="BR-BT-00262-0202" role="ERROR" diagnostics="ND-ProcedureProcurementScope_BT-262-Procedure" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '0') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '1') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '2') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '3') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '40') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '41') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '42') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '43') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '44') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '48')) or not((cbc:ProcurementTypeCode/normalize-space(text()) = 'supplies') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0202</assert>
		<assert id="BR-BT-00262-0205" role="ERROR" diagnostics="ND-ProcedureProcurementScope_BT-262-Procedure" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '45')) or not((cbc:ProcurementTypeCode/normalize-space(text()) = 'works') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0205</assert>
		<assert id="BR-BT-00262-0208" role="ERROR" diagnostics="ND-ProcedureProcurementScope_BT-262-Procedure" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '49') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '5') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '6') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '7') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '8') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '9')) or not((cbc:ProcurementTypeCode/normalize-space(text()) = 'services') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0208</assert>
		<assert id="BR-BT-00727-0228" role="ERROR" diagnostics="ND-ProcedureProcurementScope_BT-727-Procedure" test="((cac:RealizedLocation/cac:Address/cac:Country/cbc:IdentificationCode) or (cac:RealizedLocation/cac:Address/cbc:Region)) or not(../cbc:NoticeTypeCode/normalize-space(text()) = ('can-desg','can-social','can-standard','cn-desg','cn-social','cn-standard','compl','corr','pin-buyer','pin-cfc-social','pin-cfc-standard','pin-only','pin-rtl','pmc','qu-sy','subco','veat'))">rule|text|BR-BT-00727-0228</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='transport-service']/cbc:ProcurementTypeCode">
		<assert id="BR-OPP-00040-0052" role="ERROR" test="count(for $x in ., $y in /*/cac:ProcurementProject/cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='transport-service']/cbc:ProcurementTypeCode[. = $x] return $y) = 1">rule|text|BR-OPP-00040-0052</assert>
	</rule>
	<rule context="/*/cac:ProcurementProject/cac:RealizedLocation/cac:Address/cbc:CountrySubentityCode">
		<assert id="BR-BT-05071-0238" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-05071-0238</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']">
		<assert id="BR-BT-00137-0209" role="ERROR" diagnostics="BT-137-Lot" test="((cbc:ID/normalize-space(text()) = ../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:TenderLot/cbc:ID/normalize-space(text()))) or not((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','T02','33','34','35','36','37','38','39','40','E5')) and ../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:TenderLot/cbc:ID)">rule|text|BR-BT-00137-0209</assert>
		<assert id="BR-BT-00137-0214" role="ERROR" diagnostics="BT-137-Lot" test="((cac:ProcurementProject/cac:PlannedPeriod/cbc:DurationMeasure) or (cac:ProcurementProject/cac:PlannedPeriod/cbc:StartDate and cac:ProcurementProject/cac:PlannedPeriod/cbc:EndDate) or (cac:ProcurementProject/cac:PlannedPeriod/cbc:DescriptionCode)) or not(../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('7','8','9','10','11','15','16','17','18','19','22'))">rule|text|BR-BT-00137-0214</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject">
		<assert id="BR-BT-00023-0200" role="ERROR" diagnostics="BT-23-Lot" test="(cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) != 'supplies') or not((../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('14','19','28','32','35','40')) and (cbc:ProcurementTypeCode[@listName='contract-nature']))">rule|text|BR-BT-00023-0200</assert>
		<assert id="BR-BT-00023-0203" role="ERROR" diagnostics="BT-23-Lot" test="(not(cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode/normalize-space(text()))) or not((cbc:ProcurementTypeCode[@listName='contract-nature']) and (cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode))">rule|text|BR-BT-00023-0203</assert>
		<assert id="BR-BT-00262-0200" role="ERROR" diagnostics="ND-LotProcurementScope_BT-262-Lot" test="(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()) = ('75121000','75122000','75123000','79622000','79624000','79625000','80110000','80300000','80420000','80430000','80511000','80520000','80590000','85000000','85100000','85110000','85111000','85111100','85111200','85111300','85111310','85111320','85111400','85111500','85111600','85111700','85111800','85111810','85111820','85111900','85112000','85112100','85112200','85120000','85121000','85121100','85121200','85121210','85121220','85121230','85121231','85121232','85121240','85121250','85121251','85121252','85121270','85121271','85121280','85121281','85121282','85121283','85121290','85121291','85121292','85121300','85130000','85131000','85131100','85131110','85140000','85141000','85141100','85141200','85141210','85141211','85141220','85142000','85142100','85142200','85142300','85142400','85143000','85144000','85144100','85145000','85146000','85146100','85146200','85147000','85148000','85149000','85150000','85160000','85170000','85171000','85172000','85200000','85210000','85300000','85310000','85311000','85311100','85311200','85311300','85312000','85312100','85312110','85312120','85312200','85312300','85312310','85312320','85312330','85312400','85312500','85312510','85320000','85321000','85322000','85323000','92500000','92600000','98133000','98133110')) or not((../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0200</assert>
		<assert id="BR-BT-00262-0203" role="ERROR" diagnostics="ND-LotProcurementScope_BT-262-Lot" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '0') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '1') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '2') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '3') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '40') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '41') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '42') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '43') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '44') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '48')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'supplies') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0203</assert>
		<assert id="BR-BT-00262-0206" role="ERROR" diagnostics="ND-LotProcurementScope_BT-262-Lot" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '45')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'works') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0206</assert>
		<assert id="BR-BT-00262-0209" role="ERROR" diagnostics="ND-LotProcurementScope_BT-262-Lot" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '49') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '5') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '6') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '7') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '8') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '9')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'services') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0209</assert>
		<assert id="BR-BT-00727-0230" role="ERROR" diagnostics="ND-LotProcurementScope_BT-727-Lot" test="((cac:RealizedLocation/cac:Address/cac:Country/cbc:IdentificationCode) or (cac:RealizedLocation/cac:Address/cbc:Region)) or not(../../cbc:NoticeTypeCode/normalize-space(text()) = ('can-desg','can-social','can-standard','can-tran','cn-desg','cn-social','cn-standard','compl','corr','pin-cfc-social','pin-cfc-standard','pin-rtl','pin-tran','pmc','qu-sy','subco','veat'))">rule|text|BR-BT-00727-0230</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:PlannedPeriod">
		<assert id="BR-BT-00036-0150" role="ERROR" diagnostics="BT-36-Lot" test="((boolean(for $T in (current-date()) return ($T + (for $F in cbc:DurationMeasure return (if ($F/@unitCode='WEEK') then xs:dayTimeDuration(concat('P', $F/number() * 7, 'D')) else if ($F/@unitCode='DAY') then xs:dayTimeDuration(concat('P', $F/number(), 'D')) else if ($F/@unitCode='YEAR') then xs:yearMonthDuration(concat('P', $F/number(), 'Y')) else if ($F/@unitCode='MONTH') then xs:yearMonthDuration(concat('P', $F/number(), 'M')) else ())) > $T + xs:dayTimeDuration('P0D')))) and (boolean(for $T in (current-date()) return ($T + (for $F in cbc:DurationMeasure return (if ($F/@unitCode='WEEK') then xs:dayTimeDuration(concat('P', $F/number() * 7, 'D')) else if ($F/@unitCode='DAY') then xs:dayTimeDuration(concat('P', $F/number(), 'D')) else if ($F/@unitCode='YEAR') then xs:yearMonthDuration(concat('P', $F/number(), 'Y')) else if ($F/@unitCode='MONTH') then xs:yearMonthDuration(concat('P', $F/number(), 'M')) else ())) &lt;= $T + xs:yearMonthDuration('P3Y'))))) or not((../../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cbc:DurationMeasure))">rule|text|BR-BT-00036-0150</assert>
		<assert id="BR-BT-00536-0150" role="ERROR" diagnostics="BT-536-Lot" test="((cbc:StartDate) and (cbc:EndDate) and (cbc:StartDate/xs:date(text()) &lt; cbc:EndDate/xs:date(text()))) or not((cbc:StartDate) and (cbc:EndDate))">rule|text|BR-BT-00536-0150</assert>
		<assert id="BR-BT-00536-0152" role="ERROR" diagnostics="BT-536-Lot" test="((boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:EndDate/xs:date(text()) - cbc:StartDate/xs:date(text())) > $T + xs:dayTimeDuration('P0D')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:EndDate/xs:date(text()) - cbc:StartDate/xs:date(text())) &lt;= $T + xs:yearMonthDuration('P3Y'))))) or not((../../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cbc:StartDate) and (cbc:EndDate))">rule|text|BR-BT-00536-0152</assert>
		<assert id="BR-BT-00538-0130" role="ERROR" diagnostics="BT-538-Lot" test="not(cbc:DescriptionCode/normalize-space(text()) = 'UNKNOWN') or (not(../../../cbc:NoticeTypeCode/@listName = ('cont-modif','dir-awa-pre')) and not(../../cbc:ID/normalize-space(text()) = ../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:TenderLot/cbc:ID[../../cbc:TenderResultCode/normalize-space(text()) = 'selec-w']/normalize-space(text())))">rule|text|BR-BT-00538-0130</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:ProcurementProject/cac:RealizedLocation/cac:Address/cbc:CountrySubentityCode">
		<assert id="BR-BT-05071-0240" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-05071-0240</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess">
		<assert id="BR-BT-00115-0150" role="ERROR" diagnostics="BT-115-Lot" test="(cbc:GovernmentAgreementConstraintIndicator = false()) or not(../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('14','19','28','32','35','40') and (cbc:GovernmentAgreementConstraintIndicator) and (../cac:ProcurementProject/cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'services'))">rule|text|BR-BT-00115-0150</assert>
		<assert id="BR-BT-00130-0100" role="ERROR" diagnostics="BT-130-Lot" test="(cac:ParticipationInvitationPeriod/cbc:StartDate/xs:date(text()) &lt; cac:InvitationSubmissionPeriod/cbc:StartDate/xs:date(text())) or not(cac:ParticipationInvitationPeriod/cbc:StartDate) or not(cac:InvitationSubmissionPeriod/cbc:StartDate)">rule|text|BR-BT-00130-0100</assert>
		<assert id="BR-BT-00131-0150" role="ERROR" diagnostics="ND-LotTenderingProcess_BT-131_d_-Lot" test="(cac:AdditionalInformationRequestPeriod/cbc:EndDate/xs:date(text()) &lt;= cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/xs:date(text())) or not((cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) and (cac:AdditionalInformationRequestPeriod/cbc:EndDate))">rule|text|BR-BT-00131-0150</assert>
		<assert id="BR-BT-00131-0151" role="ERROR" diagnostics="ND-LotTenderingProcess_BT-131_d_-Lot" test="(cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/xs:date(text()) > ../../cbc:IssueDate/xs:date(text())) or not((cac:TenderSubmissionDeadlinePeriod/cbc:EndDate) and (../../cbc:IssueDate) and not(../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efbc:ChangedNoticeIdentifier))">rule|text|BR-BT-00131-0151</assert>
		<assert id="BR-BT-00631-0100" role="ERROR" diagnostics="BT-631-Lot" test="(cac:ParticipationInvitationPeriod/cbc:StartDate/xs:date(text()) > ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate/xs:date(text())) or not(cac:ParticipationInvitationPeriod/cbc:StartDate) or not(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate)">rule|text|BR-BT-00631-0100</assert>
		<assert id="BR-BT-01311-0152" role="ERROR" diagnostics="ND-LotTenderingProcess_BT-1311_d_-Lot" test="((cac:ParticipationRequestReceptionPeriod/cbc:EndDate/xs:date(text()) &lt; cac:InvitationSubmissionPeriod/cbc:StartDate/xs:date(text()))) or not((cac:ParticipationRequestReceptionPeriod/cbc:EndDate) and (cac:InvitationSubmissionPeriod/cbc:StartDate))">rule|text|BR-BT-01311-0152</assert>
		<assert id="BR-BT-01311-0153" role="ERROR" diagnostics="ND-LotTenderingProcess_BT-1311_d_-Lot" test="(cac:AdditionalInformationRequestPeriod/cbc:EndDate/xs:date(text()) &lt;= cac:ParticipationRequestReceptionPeriod/cbc:EndDate/xs:date(text())) or not((cac:ParticipationRequestReceptionPeriod/cbc:EndDate) and (cac:AdditionalInformationRequestPeriod/cbc:EndDate))">rule|text|BR-BT-01311-0153</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:EconomicOperatorShortList">
		<assert id="BR-BT-00050-0100" role="ERROR" diagnostics="BT-50-Lot" test="(cbc:MinimumQuantity/number() &lt;= cbc:MaximumQuantity/number()) or not(cbc:MaximumQuantity) or not(cbc:MinimumQuantity)">rule|text|BR-BT-00050-0100</assert>
		<assert id="BR-BT-00050-0101" role="ERROR" diagnostics="BT-50-Lot" test="((../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') and (../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'restricted') and (cbc:MinimumQuantity/number() > 4)) or not(../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') or not(../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'restricted') or ../cac:ContractingSystem[cbc:ContractingSystemTypeCode/@listName='dps-usage']/cbc:ContractingSystemTypeCode/normalize-space(text()) = ('dps-list','dps-nlist')">rule|text|BR-BT-00050-0101</assert>
		<assert id="BR-BT-00050-0102" role="ERROR" diagnostics="BT-50-Lot" test="((../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') and (../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'neg-w-call') and (cbc:MinimumQuantity/number() > 2)) or not(../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') or not(../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'neg-w-call') or ../cac:ContractingSystem[cbc:ContractingSystemTypeCode/@listName='dps-usage']/cbc:ContractingSystemTypeCode/normalize-space(text()) = ('dps-list','dps-nlist')">rule|text|BR-BT-00050-0102</assert>
		<assert id="BR-BT-00050-0103" role="ERROR" diagnostics="BT-50-Lot" test="((../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') and (../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'comp-dial') and (cbc:MinimumQuantity/number() > 2)) or not(../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') or not(../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'comp-dial') or ../cac:ContractingSystem[cbc:ContractingSystemTypeCode/@listName='dps-usage']/cbc:ContractingSystemTypeCode/normalize-space(text()) = ('dps-list','dps-nlist')">rule|text|BR-BT-00050-0103</assert>
		<assert id="BR-BT-00050-0104" role="ERROR" diagnostics="BT-50-Lot" test="((../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') and (../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'innovation') and (cbc:MinimumQuantity/number() > 2)) or not(../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = '16') or not(../../../cac:TenderingProcess/cbc:ProcedureCode/normalize-space(text()) = 'innovation') or ../cac:ContractingSystem[cbc:ContractingSystemTypeCode/@listName='dps-usage']/cbc:ContractingSystemTypeCode/normalize-space(text()) = ('dps-list','dps-nlist')">rule|text|BR-BT-00050-0104</assert>
		<assert id="BR-BT-00051-0100" role="ERROR" diagnostics="BT-51-Lot" test="(../../cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:SelectionCriteria/efbc:SecondStageIndicator = true()) or not(cbc:MaximumQuantity) or not(../../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='reserved-procurement'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='selection-criteria-source']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'epo-notice')">rule|text|BR-BT-00051-0100</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent">
		<assert id="BR-BT-00132-0151" role="ERROR" diagnostics="BT-132_d_-Lot" test="(cbc:OccurrenceDate/xs:date(text()) >= ../cac:TenderSubmissionDeadlinePeriod/cbc:EndDate/xs:date(text())) or not((cbc:OccurrenceDate) and (../cac:TenderSubmissionDeadlinePeriod/cbc:EndDate))">rule|text|BR-BT-00132-0151</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension">
		<assert id="BR-BT-00634-0151" role="ERROR" diagnostics="BT-634-Lot" test="((efbc:ProcedureRelaunchIndicator = true()) and ((../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cbc:TenderResultCode/normalize-space(text()) = 'clos-nw') or (../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason/cbc:ReasonCode/normalize-space(text()) = 'cancel'))) or not(efbc:ProcedureRelaunchIndicator = true())">rule|text|BR-BT-00634-0151</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod">
		<assert id="BR-BT-00630-0150" role="ERROR" diagnostics="BT-630_d_-Lot" test="(cbc:EndDate/xs:date(text()) > ../../../../../../../cbc:IssueDate/xs:date(text())) or not((cbc:EndDate) and (../../../../../../../cbc:IssueDate) and (not(../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efbc:ChangedNoticeIdentifier)))">rule|text|BR-BT-00630-0150</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms">
		<assert id="BR-OPT-00301-1400" role="ERROR" diagnostics="OPT-301-Lot-AddInfo" test="(((cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1400</assert>
		<assert id="BR-OPT-00301-1402" role="ERROR" diagnostics="OPT-301-Lot-DocProvider" test="(((cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1402</assert>
		<assert id="BR-OPT-00301-1420" role="ERROR" diagnostics="OPT-301-Lot-TenderEval" test="(((cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1420</assert>
		<assert id="BR-OPT-00301-1422" role="ERROR" diagnostics="ND-LotTenderingTerms_OPT-301-Lot-TenderReceipt" test="(((cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1422</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms">
		<assert id="BR-OPT-00301-1412" role="ERROR" diagnostics="OPT-301-Lot-Mediator" test="((cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:MediationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1412</assert>
		<assert id="BR-OPT-00301-1415" role="ERROR" diagnostics="OPT-301-Lot-ReviewInfo" test="((cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1415</assert>
		<assert id="BR-OPT-00301-1417" role="ERROR" diagnostics="OPT-301-Lot-ReviewOrg" test="((cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1417</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion">
		<assert id="BR-BT-00539-0194" role="ERROR" diagnostics="ND-LotAwardCriteria_BT-539-Lot" test="((cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) = 'ord-imp') and not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) != 'ord-imp')) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) = 'ord-imp')">rule|text|BR-BT-00539-0194</assert>
		<assert id="BR-BT-00539-0196" role="ERROR" diagnostics="ND-LotAwardCriteria_BT-539-Lot" test="(every $ordImp in cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number() satisfies (format-number($ordImp, '#') = format-number($ordImp, '0.##########'))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp'])">rule|text|BR-BT-00539-0196</assert>
		<assert id="BR-BT-00539-0197" role="ERROR" diagnostics="ND-LotAwardCriteria_BT-539-Lot" test="(every $ordImp in cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number() satisfies ($ordImp &lt;= count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number()))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp'])">rule|text|BR-BT-00539-0197</assert>
		<assert id="BR-BT-00539-0200" role="ERROR" diagnostics="BT-543-Lot" test="((((100 >= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((100 - sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())) &lt;= (1.00 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())))) or (((100 &lt;= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()) - 100) &lt;= (1.00 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa'])">rule|text|BR-BT-00539-0200</assert>
		<assert id="BR-BT-00539-0201" role="ERROR" diagnostics="BT-543-Lot" test="((((1.00 >= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((1.00 - sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())) &lt;= (0.01 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())))) or (((1.00 &lt;= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()) - 1.00) &lt;= (0.01 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa'])">rule|text|BR-BT-00539-0201</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion">
		<assert id="BR-BT-00540-0150" role="ERROR" diagnostics="BT-540-Lot" test="(count(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efbc:ParameterCode[./normalize-space(text()) = 'min-score']/normalize-space(text())) &lt;= 1) and (count(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efbc:ParameterCode[./normalize-space(text()) = 'max-pass']/normalize-space(text())) &lt;= 1)">rule|text|BR-BT-00540-0150</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-fixed']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-fix']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4026" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4026</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-fixed']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5106" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5106</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5110" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5110</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-thr']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4028" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4028</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']">
		<assert id="BR-BT-05421-0250" role="ERROR" diagnostics="BT-5421-Lot" test="(efbc:ParameterCode/normalize-space(text()) = ('dec-exa','ord-imp','per-exa','poi-exa')) or not((../../../../../../../../../../cbc:NoticeTypeCode/@listName = ('result','cont-modif','dir-awa-pre')) and (efbc:ParameterCode))">rule|text|BR-BT-05421-0250</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5102" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5102</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-wei']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4024" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4024</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-des']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4020" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4020</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-nam']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4045" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4045</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-typ']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4018" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4018</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-com']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4030" role="ERROR" test="((../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4030</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-ord']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4043" role="ERROR" test="((../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4043</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference">
		<assert id="BR-OPT-00301-1404" role="ERROR" diagnostics="OPT-301-Lot-EmployLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1404</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference">
		<assert id="BR-OPT-00301-1406" role="ERROR" diagnostics="OPT-301-Lot-EnvironLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1406</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference">
		<assert id="BR-OPT-00301-1408" role="ERROR" diagnostics="OPT-301-Lot-FiscalLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1408</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension">
		<assert id="BR-BT-00809-0102" role="ERROR" diagnostics="ND-NonUBLTenderingTerms_BT-809-Lot" test="((((100 >= sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((100 - sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())) &lt;= (1.00 * count(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())))) or (((100 &lt;= sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()) - 100) &lt;= (1.00 * count(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))))) or not(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa'])">rule|text|BR-BT-00809-0102</assert>
		<assert id="BR-BT-00809-0103" role="ERROR" diagnostics="ND-NonUBLTenderingTerms_BT-809-Lot" test="((((1.00 >= sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((1.00 - sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())) &lt;= (0.01 * count(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())))) or (((1.00 &lt;= sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((sum(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()) - 1.00) &lt;= (0.01 * count(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))))) or not(efac:SelectionCriteria/efac:CriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa'])">rule|text|BR-BT-00809-0103</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']">
		<assert id="BR-BT-00137-0210" role="ERROR" diagnostics="BT-137-LotsGroup" test="(cbc:ID/normalize-space(text()) = ../cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup/cbc:LotsGroupID/normalize-space(text()))">rule|text|BR-BT-00137-0210</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:ProcurementProject/cbc:ID">
		<assert id="BR-BT-00022-0242" role="ERROR" test="count(for $x in ., $y in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:ProcurementProject/cbc:ID[. = $x] return $y) = 1">rule|text|BR-BT-00022-0242</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion">
		<assert id="BR-BT-00539-0195" role="ERROR" diagnostics="ND-LotsGroupAwardCriteria_BT-539-LotsGroup" test="((cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) = 'ord-imp') and not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) != 'ord-imp')) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterCode/normalize-space(text()) = 'ord-imp')">rule|text|BR-BT-00539-0195</assert>
		<assert id="BR-BT-00539-0202" role="ERROR" diagnostics="BT-543-LotsGroup" test="((((100 >= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((100 - sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())) &lt;= (1.00 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number())))) or (((100 &lt;= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))) and ((sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()) - 100) &lt;= (1.00 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa']/number()))))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'per-exa'])">rule|text|BR-BT-00539-0202</assert>
		<assert id="BR-BT-00539-0203" role="ERROR" diagnostics="BT-543-LotsGroup" test="((((1.00 >= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((1.00 - sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())) &lt;= (0.01 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number())))) or (((1.00 &lt;= sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))) and ((sum(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()) - 1.00) &lt;= (0.01 * count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa']/number()))))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'dec-exa'])">rule|text|BR-BT-00539-0203</assert>
		<assert id="BR-BT-00539-0204" role="ERROR" diagnostics="ND-LotsGroupAwardCriteria_BT-539-LotsGroup" test="(every $ordImp in cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number() satisfies (format-number($ordImp, '#') = format-number($ordImp, '0.##########'))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp'])">rule|text|BR-BT-00539-0204</assert>
		<assert id="BR-BT-00539-0205" role="ERROR" diagnostics="ND-LotsGroupAwardCriteria_BT-539-LotsGroup" test="(every $ordImp in cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number() satisfies ($ordImp &lt;= count(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp']/number()))) or not(cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efbc:ParameterNumeric[../efbc:ParameterCode/normalize-space(text()) = 'ord-imp'])">rule|text|BR-BT-00539-0205</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion">
		<assert id="BR-BT-00540-0151" role="ERROR" diagnostics="BT-540-LotsGroup" test="(count(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efbc:ParameterCode[./normalize-space(text()) = 'min-score']/normalize-space(text())) &lt;= 1) and (count(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efbc:ParameterCode[./normalize-space(text()) = 'max-pass']/normalize-space(text())) &lt;= 1)">rule|text|BR-BT-00540-0151</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-fixed']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-fix']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4027" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4027</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-fixed']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5107" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5107</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5111" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5111</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-threshold']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-thr']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4029" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4029</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']">
		<assert id="BR-BT-05421-0251" role="ERROR" diagnostics="BT-5421-LotsGroup" test="(efbc:ParameterCode/normalize-space(text()) = ('dec-exa','ord-imp','per-exa','poi-exa')) or not((../../../../../../../../../../cbc:NoticeTypeCode/@listName = ('result','cont-modif','dir-awa-pre')) and (efbc:ParameterCode))">rule|text|BR-BT-05421-0251</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-num']/efbc:PublicationDate">
		<assert id="BR-BT-00198-5103" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-5103</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:AwardCriterionParameter[efbc:ParameterCode/@listName='number-weight']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-wei']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4025" role="ERROR" test="((../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4025</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-des']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4021" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4021</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-nam']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4046" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4046</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/cac:SubordinateAwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-typ']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4019" role="ERROR" test="((../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4019</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-com']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4031" role="ERROR" test="((../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4031</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cac:TenderingTerms/cac:AwardingTerms/cac:AwardingCriterion/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='awa-cri-ord']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4044" role="ERROR" test="((../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4044</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cbc:ID">
		<assert id="BR-BT-00137-0203" role="ERROR" test="count(for $x in ., $y in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cbc:ID[. = $x] return $y) = 1">rule|text|BR-BT-00137-0203</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject">
		<assert id="BR-BT-00023-0204" role="ERROR" diagnostics="BT-23-Part" test="(not(cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode/normalize-space(text()))) or not((cbc:ProcurementTypeCode[@listName='contract-nature']) and (cac:ProcurementAdditionalType[cbc:ProcurementTypeCode/@listName='contract-nature']/cbc:ProcurementTypeCode))">rule|text|BR-BT-00023-0204</assert>
		<assert id="BR-BT-00262-0201" role="ERROR" diagnostics="ND-PartProcurementScope_BT-262-Part" test="(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()) = ('75121000','75122000','75123000','79622000','79624000','79625000','80110000','80300000','80420000','80430000','80511000','80520000','80590000','85000000','85100000','85110000','85111000','85111100','85111200','85111300','85111310','85111320','85111400','85111500','85111600','85111700','85111800','85111810','85111820','85111900','85112000','85112100','85112200','85120000','85121000','85121100','85121200','85121210','85121220','85121230','85121231','85121232','85121240','85121250','85121251','85121252','85121270','85121271','85121280','85121281','85121282','85121283','85121290','85121291','85121292','85121300','85130000','85131000','85131100','85131110','85140000','85141000','85141100','85141200','85141210','85141211','85141220','85142000','85142100','85142200','85142300','85142400','85143000','85144000','85144100','85145000','85146000','85146100','85146200','85147000','85148000','85149000','85150000','85160000','85170000','85171000','85172000','85200000','85210000','85300000','85310000','85311000','85311100','85311200','85311300','85312000','85312100','85312110','85312120','85312200','85312300','85312310','85312320','85312330','85312400','85312500','85312510','85320000','85321000','85322000','85323000','92500000','92600000','98133000','98133110')) or not((../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0201</assert>
		<assert id="BR-BT-00262-0204" role="ERROR" diagnostics="ND-PartProcurementScope_BT-262-Part" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '0') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '1') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '2') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '3') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '40') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '41') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '42') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '43') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '44') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '48')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'supplies') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0204</assert>
		<assert id="BR-BT-00262-0207" role="ERROR" diagnostics="ND-PartProcurementScope_BT-262-Part" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '45')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'works') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0207</assert>
		<assert id="BR-BT-00262-0210" role="ERROR" diagnostics="ND-PartProcurementScope_BT-262-Part" test="(starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '49') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '5') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '6') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '7') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '8') or starts-with(cac:MainCommodityClassification/cbc:ItemClassificationCode/normalize-space(text()), '9')) or not((cbc:ProcurementTypeCode[@listName='contract-nature']/normalize-space(text()) = 'services') and (cac:MainCommodityClassification/cbc:ItemClassificationCode))">rule|text|BR-BT-00262-0210</assert>
		<assert id="BR-BT-00727-0229" role="ERROR" diagnostics="ND-PartProcurementScope_BT-727-Part" test="((cac:RealizedLocation/cac:Address/cac:Country/cbc:IdentificationCode) or (cac:RealizedLocation/cac:Address/cbc:Region)) or not(../../cbc:NoticeTypeCode/normalize-space(text()) = ('pin-only'))">rule|text|BR-BT-00727-0229</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:PlannedPeriod">
		<assert id="BR-BT-00036-0151" role="ERROR" diagnostics="BT-36-Part" test="((boolean(for $T in (current-date()) return ($T + (for $F in cbc:DurationMeasure return (if ($F/@unitCode='WEEK') then xs:dayTimeDuration(concat('P', $F/number() * 7, 'D')) else if ($F/@unitCode='DAY') then xs:dayTimeDuration(concat('P', $F/number(), 'D')) else if ($F/@unitCode='YEAR') then xs:yearMonthDuration(concat('P', $F/number(), 'Y')) else if ($F/@unitCode='MONTH') then xs:yearMonthDuration(concat('P', $F/number(), 'M')) else ())) > $T + xs:dayTimeDuration('P0D')))) and (boolean(for $T in (current-date()) return ($T + (for $F in cbc:DurationMeasure return (if ($F/@unitCode='WEEK') then xs:dayTimeDuration(concat('P', $F/number() * 7, 'D')) else if ($F/@unitCode='DAY') then xs:dayTimeDuration(concat('P', $F/number(), 'D')) else if ($F/@unitCode='YEAR') then xs:yearMonthDuration(concat('P', $F/number(), 'Y')) else if ($F/@unitCode='MONTH') then xs:yearMonthDuration(concat('P', $F/number(), 'M')) else ())) &lt;= $T + xs:yearMonthDuration('P3Y'))))) or not((../../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cbc:DurationMeasure))">rule|text|BR-BT-00036-0151</assert>
		<assert id="BR-BT-00536-0151" role="ERROR" diagnostics="BT-536-Part" test="((cbc:StartDate) and (cbc:EndDate) and (cbc:StartDate/xs:date(text()) &lt; cbc:EndDate/xs:date(text()))) or not((cbc:StartDate) and (cbc:EndDate))">rule|text|BR-BT-00536-0151</assert>
		<assert id="BR-BT-00536-0153" role="ERROR" diagnostics="BT-536-Part" test="((boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:EndDate/xs:date(text()) - cbc:StartDate/xs:date(text())) > $T + xs:dayTimeDuration('P0D')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(cbc:EndDate/xs:date(text()) - cbc:StartDate/xs:date(text())) &lt;= $T + xs:yearMonthDuration('P3Y'))))) or not((../../cac:TenderingTerms/cac:TendererQualificationRequest[not(cbc:CompanyLegalFormCode)][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='missing-info-submission'])][not(cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[@listName='selection-criteria-source'])]/cac:SpecificTendererRequirement[cbc:TendererRequirementTypeCode/@listName='reserved-procurement']/cbc:TendererRequirementTypeCode/normalize-space(text()) = 'res-pub-ser') and (cbc:StartDate) and (cbc:EndDate))">rule|text|BR-BT-00536-0153</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cac:RealizedLocation/cac:Address/cbc:CountrySubentityCode">
		<assert id="BR-BT-05071-0239" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-05071-0239</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cbc:ID">
		<assert id="BR-BT-00022-0243" role="ERROR" test="count(for $x in ., $y in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:ProcurementProject/cbc:ID[. = $x] return $y) = 1">rule|text|BR-BT-00022-0243</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms">
		<assert id="BR-OPT-00301-1401" role="ERROR" diagnostics="OPT-301-Part-AddInfo" test="(((cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1401</assert>
		<assert id="BR-OPT-00301-1403" role="ERROR" diagnostics="OPT-301-Part-DocProvider" test="(((cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1403</assert>
		<assert id="BR-OPT-00301-1421" role="ERROR" diagnostics="OPT-301-Part-TenderEval" test="(((cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1421</assert>
		<assert id="BR-OPT-00301-1423" role="ERROR" diagnostics="OPT-301-Part-TenderReceipt" test="(((cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1423</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms">
		<assert id="BR-OPT-00301-1413" role="ERROR" diagnostics="OPT-301-Part-Mediator" test="((cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:MediationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1413</assert>
		<assert id="BR-OPT-00301-1416" role="ERROR" diagnostics="OPT-301-Part-ReviewInfo" test="((cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:AppealInformationParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1416</assert>
		<assert id="BR-OPT-00301-1418" role="ERROR" diagnostics="OPT-301-Part-ReviewOrg" test="((cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1418</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference">
		<assert id="BR-OPT-00301-1405" role="ERROR" diagnostics="OPT-301-Part-EmployLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1405</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference">
		<assert id="BR-OPT-00301-1407" role="ERROR" diagnostics="OPT-301-Part-EnvironLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1407</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference">
		<assert id="BR-OPT-00301-1409" role="ERROR" diagnostics="OPT-301-Part-FiscalLegis" test="(((cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(cac:IssuerParty/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00301-1409</assert>
	</rule>
	<rule context="/*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cbc:ID">
		<assert id="BR-BT-00137-0202" role="ERROR" test="count(for $x in ., $y in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cbc:ID[. = $x] return $y) = 1">rule|text|BR-BT-00137-0202</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess">
		<assert id="BR-BT-00105-0110" role="ERROR" diagnostics="BT-105-Procedure" test="(cbc:ProcedureCode/normalize-space(text()) = ('open','restricted','neg-w-call')) or not((cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']/cbc:ProcessReasonCode/normalize-space(text()) = 'true') and ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('16','29')) or ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = 'E5') and (../cbc:RegulatoryDomain/normalize-space(text()) = ('32014L0024','32018R1046')))) and (cbc:ProcedureCode))">rule|text|BR-BT-00105-0110</assert>
		<assert id="BR-BT-00105-0111" role="ERROR" diagnostics="BT-105-Procedure" test="(cbc:ProcedureCode/normalize-space(text()) = ('restricted','neg-w-call')) or not((cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']/cbc:ProcessReasonCode/normalize-space(text()) = 'true') and ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('18','31')) or ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = 'E5') and (../cbc:RegulatoryDomain/normalize-space(text()) = '32009L0081'))) and (cbc:ProcedureCode))">rule|text|BR-BT-00105-0111</assert>
		<assert id="BR-BT-00105-0112" role="ERROR" diagnostics="BT-105-Procedure" test="(cbc:ProcedureCode/normalize-space(text()) = ('open','restricted','neg-w-call','comp-dial')) or not((cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']/cbc:ProcessReasonCode/normalize-space(text()) = 'true') and ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('17','30')) or ((../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = 'E5') and (../cbc:RegulatoryDomain/normalize-space(text()) = '32014L0025'))) and (cbc:ProcedureCode))">rule|text|BR-BT-00105-0112</assert>
		<assert id="BR-BT-00634-0150" role="ERROR" diagnostics="BT-634-Procedure" test="((ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efbc:ProcedureRelaunchIndicator = true()) and (not(../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cbc:TenderResultCode/normalize-space(text()) != 'clos-nw') or (../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Changes/efac:ChangeReason/cbc:ReasonCode/normalize-space(text()) = 'cancel'))) or not(ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efbc:ProcedureRelaunchIndicator = true())">rule|text|BR-BT-00634-0150</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:NoticeDocumentReference/cbc:ID">
		<assert id="BR-OPP-00090-0052" role="ERROR" test="count(for $x in ., $y in /*/cac:TenderingProcess/cac:NoticeDocumentReference/cbc:ID[. = $x] return $y) = 1">rule|text|BR-OPP-00090-0052</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='pro-acc']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4002" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4002</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='accelerated-procedure']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='pro-acc-jus']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4006" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4006</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-jus']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4007" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4007</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-pre']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4004" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4004</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/cac:ProcessJustification[cbc:ProcessReasonCode/@listName='direct-award-justification']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='dir-awa-tex']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4005" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4005</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='pro-fea']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4050" role="ERROR" test="((../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4050</assert>
	</rule>
	<rule context="/*/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='pro-typ']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4001" role="ERROR" test="((../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4001</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution">
		<assert id="BR-BT-00031-0100" role="ERROR" diagnostics="BT-31-Procedure" test="(cbc:MaximumLotsSubmittedNumeric/number() &lt;= count(../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text()))) or not(cbc:MaximumLotsSubmittedNumeric)">rule|text|BR-BT-00031-0100</assert>
		<assert id="BR-BT-00033-0100" role="ERROR" diagnostics="BT-33-Procedure" test="(cbc:MaximumLotsAwardedNumeric/number() &lt;= cbc:MaximumLotsSubmittedNumeric/number()) or not((cbc:MaximumLotsAwardedNumeric) and (cbc:MaximumLotsSubmittedNumeric))">rule|text|BR-BT-00033-0100</assert>
		<assert id="BR-BT-00330-0100" role="ERROR" diagnostics="ND-LotDistribution_BT-330-Procedure" test="(every $group in cac:LotsGroup/cbc:LotsGroupID/normalize-space(text()) satisfies ($group = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cbc:ID/normalize-space(text()))) or not(cac:LotsGroup/cbc:LotsGroupID)">rule|text|BR-BT-00330-0100</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup">
		<assert id="BR-BT-01375-0100" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()) = ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())">rule|text|BR-BT-01375-0100</assert>
		<assert id="BR-BT-01375-0101" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="count(cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text())) > 1">rule|text|BR-BT-01375-0101</assert>
		<assert id="BR-BT-01375-0102" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lot in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()) satisfies ($lot = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text()))) or not(cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot'])">rule|text|BR-BT-01375-0102</assert>
		<assert id="BR-BT-01375-0103" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationInvitationPeriod/cbc:StartDate[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationInvitationPeriod/cbc:StartDate[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0103</assert>
		<assert id="BR-BT-01375-0104" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:InvitationSubmissionPeriod/cbc:StartDate[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:InvitationSubmissionPeriod/cbc:StartDate[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0104</assert>
		<assert id="BR-BT-01375-0105" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate[../../../../../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndDate[../../../../../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0105</assert>
		<assert id="BR-BT-01375-0106" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndTime[../../../../../../../cbc:ID/normalize-space(text()) = $lotA]/xs:time(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:InterestExpressionReceptionPeriod/cbc:EndTime[../../../../../../../cbc:ID/normalize-space(text()) = $lotB]/xs:time(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0106</assert>
		<assert id="BR-BT-01375-0107" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndDate[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0107</assert>
		<assert id="BR-BT-01375-0108" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndTime[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:time(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:ParticipationRequestReceptionPeriod/cbc:EndTime[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:time(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0108</assert>
		<assert id="BR-BT-01375-0109" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndDate[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0109</assert>
		<assert id="BR-BT-01375-0110" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndTime[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:time(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:TenderSubmissionDeadlinePeriod/cbc:EndTime[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:time(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0110</assert>
		<assert id="BR-BT-01375-0111" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent/cbc:OccurrenceDate[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:date(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent/cbc:OccurrenceDate[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:date(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0111</assert>
		<assert id="BR-BT-01375-0112" role="ERROR" diagnostics="ND-GroupComposition_BT-1375-Procedure" test="(every $lotA in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $lotB in cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot']/normalize-space(text()), $interestA in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent/cbc:OccurrenceTime[../../../cbc:ID/normalize-space(text()) = $lotA]/xs:time(text()), $interestB in ../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingProcess/cac:OpenTenderEvent/cbc:OccurrenceTime[../../../cbc:ID/normalize-space(text()) = $lotB]/xs:time(text()) satisfies ($interestA = $interestB)) or not(cbc:LotsGroupID)">rule|text|BR-BT-01375-0112</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup/cbc:LotsGroupID">
		<assert id="BR-BT-00330-0102" role="ERROR" test="count(for $x in ., $y in /*/cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup/cbc:LotsGroupID[. = $x] return $y) = 1">rule|text|BR-BT-00330-0102</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:ProcurementLegislationDocumentReference[cbc:ID/text()='CrossBorderLaw']/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='cro-bor-law']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4000" role="ERROR" test="((../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../../../../ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4000</assert>
	</rule>
	<rule context="/*/cac:TenderingTerms/cac:TendererQualificationRequest[cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode/@listName='exclusion-ground']/cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode">
		<assert id="BR-BT-00067-0106" role="ERROR" test="count(for $x in ., $y in /*/cac:TenderingTerms/cac:TendererQualificationRequest[cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode/@listName='exclusion-ground']/cac:SpecificTendererRequirement/cbc:TendererRequirementTypeCode[. = $x] return $y) = 1">rule|text|BR-BT-00067-0106</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension">
		<assert id="BR-OPP-00070-0100" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'brin-ecs') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('X02'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'brin-ecs')">rule|text|BR-OPP-00070-0100</assert>
		<assert id="BR-OPP-00070-0101" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'brin-eeig') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('X01'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'brin-eeig')">rule|text|BR-OPP-00070-0101</assert>
		<assert id="BR-OPP-00070-0102" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-desg') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('36','37'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-desg')">rule|text|BR-OPP-00070-0102</assert>
		<assert id="BR-OPP-00070-0103" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-modif') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('38','39','40','E6'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-modif')">rule|text|BR-OPP-00070-0103</assert>
		<assert id="BR-OPP-00070-0104" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-social') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('33','34','35'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-social')">rule|text|BR-OPP-00070-0104</assert>
		<assert id="BR-OPP-00070-0105" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-standard') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('29','30','31','32','E4'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-standard')">rule|text|BR-OPP-00070-0105</assert>
		<assert id="BR-OPP-00070-0106" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-tran') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('T02'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'can-tran')">rule|text|BR-OPP-00070-0106</assert>
		<assert id="BR-OPP-00070-0107" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-desg') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('23','24'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-desg')">rule|text|BR-OPP-00070-0107</assert>
		<assert id="BR-OPP-00070-0108" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-social') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('20','21'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-social')">rule|text|BR-OPP-00070-0108</assert>
		<assert id="BR-OPP-00070-0109" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-standard') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('16','17','18','19','E3'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'cn-standard')">rule|text|BR-OPP-00070-0109</assert>
		<assert id="BR-OPP-00070-0111" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-buyer') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('1','2','3'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-buyer')">rule|text|BR-OPP-00070-0111</assert>
		<assert id="BR-OPP-00070-0112" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-cfc-social') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('12','13','14'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-cfc-social')">rule|text|BR-OPP-00070-0112</assert>
		<assert id="BR-OPP-00070-0113" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-cfc-standard') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('10','11','CEI'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-cfc-standard')">rule|text|BR-OPP-00070-0113</assert>
		<assert id="BR-OPP-00070-0114" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-only') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('4','5','6','E2'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-only')">rule|text|BR-OPP-00070-0114</assert>
		<assert id="BR-OPP-00070-0115" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-rtl') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('7','8','9'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-rtl')">rule|text|BR-OPP-00070-0115</assert>
		<assert id="BR-OPP-00070-0116" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-tran') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('T01'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'pin-tran')">rule|text|BR-OPP-00070-0116</assert>
		<assert id="BR-OPP-00070-0117" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'qu-sy') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('15'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'qu-sy')">rule|text|BR-OPP-00070-0117</assert>
		<assert id="BR-OPP-00070-0118" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'subco') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('22'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'subco')">rule|text|BR-OPP-00070-0118</assert>
		<assert id="BR-OPP-00070-0119" role="ERROR" diagnostics="OPP-070-notice" test="((../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'veat') and (efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28'))) or not(../../../../cbc:NoticeTypeCode/normalize-space(text()) = 'veat')">rule|text|BR-OPP-00070-0119</assert>
		<assert id="BR-OPP-00070-0120" role="WARN" diagnostics="OPP-070-notice" flag="LAWFULNESS" test="efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) != 'CEI'">rule|text|BR-OPP-00070-0120</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:ContractModification">
		<assert id="BR-BT-01501-0252" role="ERROR" diagnostics="BT-1501_c_-Contract" test="count(for $x in efbc:ModifiedContractIdentifier, $y in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:ContractModification/efbc:ModifiedContractIdentifier[. = $x] return $y) = 1">rule|text|BR-BT-01501-0252</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult">
		<assert id="BR-BT-01118-0100" role="ERROR" diagnostics="BT-1118-NoticeResult" test="((not(efac:GroupFramework/efbc:GroupFrameworkReestimatedValueAmount) and (every $faEstCurr in (efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/@currencyID) satisfies $faEstCurr = efbc:OverallApproximateFrameworkContractsAmount/@currencyID) and (((efbc:OverallApproximateFrameworkContractsAmount/number() >= sum(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number())) and ((efbc:OverallApproximateFrameworkContractsAmount/number() - sum(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number())) &lt;= (1.00 * count(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number())))) or ((efbc:OverallApproximateFrameworkContractsAmount/number() &lt;= sum(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number())) and ((sum(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number()) - efbc:OverallApproximateFrameworkContractsAmount/number()) &lt;= (1.00 * count(efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/number())))))) or (efac:GroupFramework/efbc:GroupFrameworkReestimatedValueAmount) or not(every $faEst in (efac:LotResult/efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount/@currencyID) satisfies $faEst = efbc:OverallApproximateFrameworkContractsAmount/@currencyID)) or not(efbc:OverallApproximateFrameworkContractsAmount)">rule|text|BR-BT-01118-0100</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='not-app-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4292" role="ERROR" test="((../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4292</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='not-max-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4003" role="ERROR" test="((../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4003</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='not-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4012" role="ERROR" test="((../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4012</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:GroupFramework/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='gro-max-ide']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4035" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4035</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:GroupFramework/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='gro-max-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4010" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4010</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:GroupFramework/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='gro-ree-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4356" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4356</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:GroupFramework/efac:TenderLot/cbc:ID">
		<assert id="BR-BT-00556-0100" role="ERROR" test="./normalize-space(text()) = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cbc:ID/normalize-space(text())">rule|text|BR-BT-00556-0100</assert>
		<assert id="BR-BT-00556-0101" role="ERROR" test="count(for $x in ., $y in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:GroupFramework/efac:TenderLot/cbc:ID[. = $x] return $y) = 1">rule|text|BR-BT-00556-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult">
		<assert id="BR-BT-00142-0054" role="ERROR" diagnostics="BT-142-LotResult" test="((efac:FrameworkAgreementValues/cbc:MaximumValueAmount) or (efac:FrameworkAgreementValues/efbc:ReestimatedValueAmount)) or not((efac:TenderLot/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID[../cac:TenderingProcess/cac:ContractingSystem[cbc:ContractingSystemTypeCode/@listName='framework-agreement']/cbc:ContractingSystemTypeCode/normalize-space(text()) = ('fa-mix','fa-w-rc','fa-wo-rc')]/normalize-space(text())) and (cbc:TenderResultCode/normalize-space(text()) = 'selec-w') and not(efac:SettledContract/cbc:ID/normalize-space(text()) = ../efac:SettledContract/cbc:ID[(../efbc:ContractFrameworkIndicator = true())]/normalize-space(text())))">rule|text|BR-BT-00142-0054</assert>
		<assert id="BR-BT-00710-0100" role="ERROR" diagnostics="BT-710-LotResult" test="(cbc:LowerTenderAmount/@currencyID = cbc:HigherTenderAmount/@currencyID) or not((cbc:LowerTenderAmount) and (cbc:HigherTenderAmount))">rule|text|BR-BT-00710-0100</assert>
		<assert id="BR-BT-00710-0101" role="ERROR" diagnostics="BT-710-LotResult" test="(cbc:LowerTenderAmount/number() &lt;= cbc:HigherTenderAmount/number()) or not((cbc:LowerTenderAmount) and (cbc:HigherTenderAmount))">rule|text|BR-BT-00710-0101</assert>
		<assert id="BR-BT-13713-0100" role="ERROR" diagnostics="BT-13713-LotResult" test="(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']/number() >= 0) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders'])">rule|text|BR-BT-13713-0100</assert>
		<assert id="BR-BT-13713-0101" role="ERROR" diagnostics="BT-13713-LotResult" test="efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']/number() >= (efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-verif-inad']/number() + efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-no-verif']/number()) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-verif-inad']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-no-verif'])">rule|text|BR-BT-13713-0101</assert>
		<assert id="BR-BT-13713-0102" role="ERROR" diagnostics="BT-13713-LotResult" test="efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-sme']/number() = (efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-med']/number() + efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-small']/number() + efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-micro']/number()) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-sme']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-med']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-small']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-micro'])">rule|text|BR-BT-13713-0102</assert>
		<assert id="BR-BT-13713-0103" role="ERROR" diagnostics="BT-13713-LotResult" test="(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-sme']/number() &lt;= efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']/number()) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-sme']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders'])">rule|text|BR-BT-13713-0103</assert>
		<assert id="BR-BT-13713-0104" role="ERROR" diagnostics="BT-13713-LotResult" test="(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-oth-eea']/number() &lt;= efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']/number()) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-oth-eea']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders'])">rule|text|BR-BT-13713-0104</assert>
		<assert id="BR-BT-13713-0105" role="ERROR" diagnostics="BT-13713-LotResult" test="(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-no-eea']/number() &lt;= efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders']/number()) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 't-no-eea']) or not(efac:ReceivedSubmissionsStatistics/efbc:StatisticsNumeric[../efbc:StatisticsCode/normalize-space(text()) = 'tenders'])">rule|text|BR-BT-13713-0105</assert>
		<assert id="BR-BT-13713-0110" role="ERROR" diagnostics="BT-13713-LotResult" test="efac:TenderLot/cbc:ID/normalize-space(text()) = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())">rule|text|BR-BT-13713-0110</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:AppealRequestsStatistics[efbc:StatisticsCode/@listName='review-type']">
		<assert id="BR-BT-00712-0150" role="ERROR" diagnostics="BT-712_b_-LotResult" test="(((../efac:DecisionReason/efbc:DecisionReasonCode/normalize-space(text()) = 'rev-buyer') and (efbc:StatisticsNumeric/number() > 0)) or not(../efac:DecisionReason/efbc:DecisionReasonCode/normalize-space(text()) = 'rev-buyer')) or not(efbc:StatisticsNumeric)">rule|text|BR-BT-00712-0150</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:AppealRequestsStatistics[efbc:StatisticsCode/@listName='review-type']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='rev-req']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4039" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4039</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:DecisionReason/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='no-awa-rea']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4009" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4009</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='ten-val-hig']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4038" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4038</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='ten-val-low']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4037" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4037</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='win-cho']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4008" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4008</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='max-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4036" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4036</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:FrameworkAgreementValues/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='ree-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4720" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4720</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:LotTender/cbc:ID">
		<assert id="BR-OPT-00320-0101" role="ERROR" test="every $resultTender in ./normalize-space(text()), $resultLot in ../../efac:TenderLot/cbc:ID/normalize-space(text()), $tenderLot in ../../../efac:LotTender/efac:TenderLot/cbc:ID[../../cbc:ID/normalize-space(text()) = $resultTender]/normalize-space(text()) satisfies (($resultLot = $tenderLot) or ($resultLot = ../../../../../../../../cac:TenderingTerms/cac:LotDistribution/cac:LotsGroup/cac:ProcurementProjectLotReference/cbc:ID[@schemeName='Lot'][../../cbc:LotsGroupID/normalize-space(text()) = $tenderLot]/normalize-space(text())))">rule|text|BR-OPT-00320-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:ReceivedSubmissionsStatistics/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='rec-sub-cou']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4047" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4047</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/efac:ReceivedSubmissionsStatistics/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='rec-sub-typ']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4048" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4048</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender">
		<assert id="BR-BT-13714-0100" role="ERROR" diagnostics="BT-13714-Tender" test="(efac:TenderLot/cbc:ID/normalize-space(text()) = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cbc:ID/normalize-space(text())) or (efac:TenderLot/cbc:ID/normalize-space(text()) = /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='LotsGroup']/cbc:ID/normalize-space(text()))">rule|text|BR-BT-13714-0100</assert>
		<assert id="BR-OPT-00310-0100" role="ERROR" diagnostics="OPT-310-Tender" test="efac:TenderingParty/cbc:ID/normalize-space(text()) = ../efac:TenderingParty/cbc:ID/normalize-space(text())">rule|text|BR-OPT-00310-0100</assert>
		<assert id="BR-OPT-00321-0101" role="ERROR" diagnostics="OPT-321-Tender" test="((cbc:ID/normalize-space(text()) = ../efac:LotResult/efac:LotTender/cbc:ID/normalize-space(text()))) or not(../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('29','30','31','32','E4','T02','33','34','35','36','37','E5'))">rule|text|BR-OPT-00321-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:ConcessionRevenue/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='con-rev-buy']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4011" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4011</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:ConcessionRevenue/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='con-rev-use']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4013" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4013</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:ConcessionRevenue/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='val-con-des']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4014" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4014</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='ten-ran']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4015" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4015</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='win-ten-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4040" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4040</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='win-ten-var']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4017" role="ERROR" test="((../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4017</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:Origin/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='cou-ori']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4016" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4016</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-con']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4049" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4049</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-des']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4033" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4033</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-per']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4034" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4034</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-per-kno']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4042" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4042</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-val']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4032" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4032</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotTender/efac:SubcontractingTerm[efbc:TermCode/@listName='applicability']/efac:FieldsPrivacy[efbc:FieldIdentifierCode/text()='sub-val-kno']/efbc:PublicationDate">
		<assert id="BR-BT-00198-4041" role="ERROR" test="((../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5')) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) &lt; $T + xs:yearMonthDuration('P10Y')))) and (boolean(for $T in (current-date()) return ($T + xs:dayTimeDuration(./xs:date(text()) - ../../../../../../../../../cbc:IssueDate/xs:date(text())) >= $T + xs:dayTimeDuration('P2D'))))) or not(../../../../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('25','26','27','28','29','30','31','32','E4','33','34','35','E5'))">rule|text|BR-BT-00198-4041</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract">
		<assert id="BR-BT-00145-0100" role="ERROR" diagnostics="BT-145-Contract" test="(cbc:IssueDate/xs:date(text()) &lt;= ../../../../../../cbc:IssueDate/xs:date(text())) or not((cbc:IssueDate) and (../../../../../../cbc:IssueDate) and (../../efac:NoticeSubType/cbc:SubTypeCode/normalize-space(text()) = ('29','30','31','32','E4','T02','33','34','35','36','37','38','39','40','E5')))">rule|text|BR-BT-00145-0100</assert>
		<assert id="BR-BT-01451-0100" role="ERROR" diagnostics="BT-1451-Contract" test="(cbc:AwardDate/xs:date(text()) &lt;= cbc:IssueDate/xs:date(text())) or not((cbc:AwardDate) and (cbc:IssueDate))">rule|text|BR-BT-01451-0100</assert>
		<assert id="BR-BT-01451-0101" role="ERROR" diagnostics="BT-1451-Contract" test="(cbc:AwardDate/xs:date(text()) &lt;= ../../../../../../cbc:IssueDate/xs:date(text())) or not((cbc:AwardDate) and (../../../../../../cbc:IssueDate))">rule|text|BR-BT-01451-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty">
		<assert id="BR-OPT-00210-0101" role="ERROR" diagnostics="OPT-210-Tenderer" test="((count(efac:Tenderer/cbc:ID/normalize-space(text())) > 1) and (count(efac:Tenderer/efbc:GroupLeadIndicator[. = true()]) = 1)) or not(count(efac:Tenderer/cbc:ID/normalize-space(text())) > 1)">rule|text|BR-OPT-00210-0101</assert>
		<assert id="BR-OPT-00300-0253" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="(every $tenderer in efac:Tenderer/cbc:ID/normalize-space(text()) satisfies ($tenderer = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(efac:Tenderer/cbc:ID)">rule|text|BR-OPT-00300-0253</assert>
		<assert id="BR-OPT-00300-0256" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $mediator in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($mediator = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0256</assert>
		<assert id="BR-OPT-00300-0258" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $revOrg in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($revOrg = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0258</assert>
		<assert id="BR-OPT-00300-0259" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $addInfo in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($addInfo = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0259</assert>
		<assert id="BR-OPT-00300-0260" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $employ in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($employ = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0260</assert>
		<assert id="BR-OPT-00300-0261" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $environ in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($environ = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0261</assert>
		<assert id="BR-OPT-00300-0262" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $tax in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($tax = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0262</assert>
		<assert id="BR-OPT-00300-0263" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $doc in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($doc = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0263</assert>
		<assert id="BR-OPT-00300-0264" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $reviewInfo in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($reviewInfo = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0264</assert>
		<assert id="BR-OPT-00300-0265" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $recepient in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($recepient = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0265</assert>
		<assert id="BR-OPT-00300-0266" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $eval in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($eval = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0266</assert>
		<assert id="BR-OPT-00300-0267" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $sign in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract/cac:SignatoryParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($sign = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0267</assert>
		<assert id="BR-OPT-00300-0268" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $fund in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cac:FinancingParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($fund = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0268</assert>
		<assert id="BR-OPT-00300-0269" role="ERROR" diagnostics="ND-TenderingParty_OPT-300-Tenderer" test="every $pay in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cac:PayerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($pay = efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00300-0269</assert>
		<assert id="BR-OPT-00301-1419" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $subCon in efac:SubContractor/cbc:ID/normalize-space(text()) satisfies ($subCon = /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyIdentification/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1419</assert>
		<assert id="BR-OPT-00301-1424" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $maincont in efac:Tenderer/cbc:ID/normalize-space(text()) satisfies not($maincont = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1424</assert>
		<assert id="BR-OPT-00301-1425" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $mediator in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($mediator = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1425</assert>
		<assert id="BR-OPT-00301-1426" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $psp in ../../../../../../cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($psp = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1426</assert>
		<assert id="BR-OPT-00301-1427" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $revOrg in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($revOrg = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1427</assert>
		<assert id="BR-OPT-00301-1428" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $addInfo in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($addInfo = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1428</assert>
		<assert id="BR-OPT-00301-1429" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $employ in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($employ = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1429</assert>
		<assert id="BR-OPT-00301-1430" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $environ in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($environ = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1430</assert>
		<assert id="BR-OPT-00301-1431" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $tax in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($tax = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1431</assert>
		<assert id="BR-OPT-00301-1432" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $doc in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($doc = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1432</assert>
		<assert id="BR-OPT-00301-1433" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $reviewInfo in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($reviewInfo = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1433</assert>
		<assert id="BR-OPT-00301-1434" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $recepient in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($recepient = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1434</assert>
		<assert id="BR-OPT-00301-1435" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $eval in /*/cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($eval = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1435</assert>
		<assert id="BR-OPT-00301-1436" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $sign in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:SettledContract/cac:SignatoryParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($sign = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1436</assert>
		<assert id="BR-OPT-00301-1437" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $fund in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cac:FinancingParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($fund = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1437</assert>
		<assert id="BR-OPT-00301-1438" role="ERROR" diagnostics="ND-TenderingParty_OPT-301-Tenderer-SubCont" test="(every $pay in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:LotResult/cac:PayerParty/cac:PartyIdentification/cbc:ID/normalize-space(text()) satisfies not($pay = efac:SubContractor/cbc:ID/normalize-space(text()))) or not(efac:SubContractor/cbc:ID)">rule|text|BR-OPT-00301-1438</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:NoticeResult/efac:TenderingParty/efac:SubContractor">
		<assert id="BR-OPT-00301-1411" role="ERROR" diagnostics="ND-SubContractor_OPT-301-Tenderer-MainCont" test="(every $main in efac:MainContractor/cbc:ID/normalize-space(text()) satisfies ($main = ../efac:Tenderer/cbc:ID/normalize-space(text()))) or not(efac:MainContractor/cbc:ID)">rule|text|BR-OPT-00301-1411</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations">
		<assert id="BR-OPT-00202-0101" role="ERROR" diagnostics="ND-Organizations_OPT-202-UBO" test="((efac:UltimateBeneficialOwner/cbc:ID/normalize-space(text()) = efac:Organization/efac:UltimateBeneficialOwner/cbc:ID/normalize-space(text()))) or not(efac:UltimateBeneficialOwner/cbc:ID)">rule|text|BR-OPT-00202-0101</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization">
		<assert id="BR-OPT-00201-0101" role="ERROR" diagnostics="ND-Organization_OPT-201-Organization-TouchPoint" test="(((efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../efac:Appeals/efac:AppealInformation/efac:AppealingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (efac:TouchPoint/cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../efac:Appeals/efac:AppealInformation/efac:AppealProcessingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())))) or not(efac:TouchPoint/cac:PartyIdentification/cbc:ID)">rule|text|BR-OPT-00201-0101</assert>
		<assert id="BR-OPT-00302-0100" role="ERROR" diagnostics="ND-Organization_OPT-302-Organization" test="(every $ubo in efac:UltimateBeneficialOwner/cbc:ID/normalize-space(text()) satisfies ($ubo = ../efac:UltimateBeneficialOwner/cbc:ID/normalize-space(text()))) or not(efac:UltimateBeneficialOwner/cbc:ID)">rule|text|BR-OPT-00302-0100</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company">
		<assert id="BR-BT-00514-0310" role="WARN" diagnostics="ND-Company_BT-514-Organization-Company" flag="LAWFULNESS" test="((cac:PostalAddress/cac:Country/cbc:IdentificationCode[../../../cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../../../../cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())]/normalize-space(text()) = ('ALB','ATF','AUT','BEL','BGR','BIH','BLM','CHE','CPT','CYP','CZE','DEU','DNK','ESP','EST','FIN','FRA','GEO','GRC','HRV','HUN','IRL','ISL','ITA','LIE','LTU','LUX','LVA','MDA','MKD','MLT','MNE','NCL','NLD','NOR','POL','PRT','PYF','ROU','SPM','SRB','SVK','SVN','SWE','TUR','UKR','WLF'))) or not((cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())))">rule|text|BR-BT-00514-0310</assert>
		<assert id="BR-OPT-00200-0101" role="ERROR" diagnostics="OPT-200-Organization-Company" test="(not(../efac:TouchPoint/cac:PartyIdentification/cbc:ID)) or not(cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:TenderingParty/efac:Tenderer/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00200-0101</assert>
		<assert id="BR-OPT-00200-0102" role="ERROR" diagnostics="OPT-200-Organization-Company" test="(not(../efac:TouchPoint/cac:PartyIdentification/cbc:ID)) or not(cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:TenderingParty/efac:SubContractor/cbc:ID/normalize-space(text()))">rule|text|BR-OPT-00200-0102</assert>
		<assert id="BR-OPT-00200-0103" role="ERROR" diagnostics="OPT-200-Organization-Company" test="((cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:SettledContract/cac:SignatoryParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ContractingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ContractingParty/cac:Party/cac:ServiceProviderParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:TenderingParty/efac:Tenderer/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Lot']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:LotResult/cac:FinancingParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:LotResult/cac:PayerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AdditionalInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:DocumentProviderParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EmploymentLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:EnvironmentalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:FiscalLegislationDocumentReference/cac:IssuerParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:MediationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:AppealInformationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:AppealTerms/cac:AppealReceiverParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:TenderEvaluationParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../../../../../cac:ProcurementProjectLot[cbc:ID/@schemeName='Part']/cac:TenderingTerms/cac:TenderRecipientParty/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:Appeals/efac:AppealInformation/efac:AppealProcessingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:Appeals/efac:AppealInformation/efac:AppealingParty/cac:Party/cac:PartyIdentification/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:TenderingParty/efac:SubContractor/efac:MainContractor/cbc:ID/normalize-space(text())) or (cac:PartyIdentification/cbc:ID/normalize-space(text()) = ../../../efac:NoticeResult/efac:TenderingParty/efac:SubContractor/cbc:ID/normalize-space(text())))">rule|text|BR-OPT-00200-0103</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PartyName/cbc:Name">
		<assert id="BR-BT-00500-0309" role="WARN" flag="LAWFULNESS" test="not(fn:matches(normalize-space(.[./@languageID != '']/normalize-space(text())), '.*(T|t)(E|e)(S|s)(T|t).*'))">rule|text|BR-BT-00500-0309</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:Company/cac:PostalAddress/cbc:CountrySubentityCode">
		<assert id="BR-BT-00507-0353" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-00507-0353</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID">
		<assert id="BR-OPT-00201-0100" role="ERROR" test="count(for $x in ., $y in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PartyIdentification/cbc:ID[. = $x] return $y) = 1">rule|text|BR-OPT-00201-0100</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:Organization/efac:TouchPoint/cac:PostalAddress/cbc:CountrySubentityCode">
		<assert id="BR-BT-00507-0354" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-00507-0354</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner/cac:ResidenceAddress/cbc:CountrySubentityCode">
		<assert id="BR-BT-00507-0355" role="ERROR" test="((../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ALB' and ./normalize-space(text()) = ('AL011','AL012','AL013','AL014','AL015','AL021','AL022','AL031','AL032','AL033','AL034','AL035','ALZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'AUT' and ./normalize-space(text()) = ('AT111','AT112','AT113','AT121','AT122','AT123','AT124','AT125','AT126','AT127','AT130','AT211','AT212','AT213','AT221','AT222','AT223','AT224','AT225','AT226','AT311','AT312','AT313','AT314','AT315','AT321','AT322','AT323','AT331','AT332','AT333','AT334','AT335','AT341','AT342','ATZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BEL' and ./normalize-space(text()) = ('BE100','BE211','BE212','BE213','BE223','BE224','BE225','BE231','BE232','BE233','BE234','BE235','BE236','BE241','BE242','BE251','BE252','BE253','BE254','BE255','BE256','BE257','BE258','BE310','BE323','BE328','BE329','BE32A','BE32B','BE32C','BE32D','BE331','BE332','BE334','BE335','BE336','BE341','BE342','BE343','BE344','BE345','BE351','BE352','BE353','BEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'BGR' and ./normalize-space(text()) = ('BG311','BG312','BG313','BG314','BG315','BG321','BG322','BG323','BG324','BG325','BG331','BG332','BG333','BG334','BG341','BG342','BG343','BG344','BG411','BG412','BG413','BG414','BG415','BG421','BG422','BG423','BG424','BG425','BGZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CHE' and ./normalize-space(text()) = ('CH011','CH012','CH013','CH021','CH022','CH023','CH024','CH025','CH031','CH032','CH033','CH040','CH051','CH052','CH053','CH054','CH055','CH056','CH057','CH061','CH062','CH063','CH064','CH065','CH066','CH070','CHZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CYP' and ./normalize-space(text()) = ('CY000','CYZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'CZE' and ./normalize-space(text()) = ('CZ010','CZ020','CZ031','CZ032','CZ041','CZ042','CZ051','CZ052','CZ053','CZ063','CZ064','CZ071','CZ072','CZ080','CZZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DEU' and ./normalize-space(text()) = ('DE111','DE112','DE113','DE114','DE115','DE116','DE117','DE118','DE119','DE11A','DE11B','DE11C','DE11D','DE121','DE122','DE123','DE124','DE125','DE126','DE127','DE128','DE129','DE12A','DE12B','DE12C','DE131','DE132','DE133','DE134','DE135','DE136','DE137','DE138','DE139','DE13A','DE141','DE142','DE143','DE144','DE145','DE146','DE147','DE148','DE149','DE211','DE212','DE213','DE214','DE215','DE216','DE217','DE218','DE219','DE21A','DE21B','DE21C','DE21D','DE21E','DE21F','DE21G','DE21H','DE21I','DE21J','DE21K','DE21L','DE21M','DE21N','DE221','DE222','DE223','DE224','DE225','DE226','DE227','DE228','DE229','DE22A','DE22B','DE22C','DE231','DE232','DE233','DE234','DE235','DE236','DE237','DE238','DE239','DE23A','DE241','DE242','DE243','DE244','DE245','DE246','DE247','DE248','DE249','DE24A','DE24B','DE24C','DE24D','DE251','DE252','DE253','DE254','DE255','DE256','DE257','DE258','DE259','DE25A','DE25B','DE25C','DE261','DE262','DE263','DE264','DE265','DE266','DE267','DE268','DE269','DE26A','DE26B','DE26C','DE271','DE272','DE273','DE274','DE275','DE276','DE277','DE278','DE279','DE27A','DE27B','DE27C','DE27D','DE27E','DE300','DE401','DE402','DE403','DE404','DE405','DE406','DE407','DE408','DE409','DE40A','DE40B','DE40C','DE40D','DE40E','DE40F','DE40G','DE40H','DE40I','DE501','DE502','DE600','DE711','DE712','DE713','DE714','DE715','DE716','DE717','DE718','DE719','DE71A','DE71B','DE71C','DE71D','DE71E','DE721','DE722','DE723','DE724','DE725','DE731','DE732','DE733','DE734','DE735','DE736','DE737','DE803','DE804','DE80J','DE80K','DE80L','DE80M','DE80N','DE80O','DE911','DE912','DE913','DE914','DE916','DE917','DE918','DE91A','DE91B','DE91C','DE922','DE923','DE925','DE926','DE927','DE928','DE929','DE931','DE932','DE933','DE934','DE935','DE936','DE937','DE938','DE939','DE93A','DE93B','DE941','DE942','DE943','DE944','DE945','DE946','DE947','DE948','DE949','DE94A','DE94B','DE94C','DE94D','DE94E','DE94F','DE94G','DE94H','DEA11','DEA12','DEA13','DEA14','DEA15','DEA16','DEA17','DEA18','DEA19','DEA1A','DEA1B','DEA1C','DEA1D','DEA1E','DEA1F','DEA22','DEA23','DEA24','DEA26','DEA27','DEA28','DEA29','DEA2A','DEA2B','DEA2C','DEA2D','DEA31','DEA32','DEA33','DEA34','DEA35','DEA36','DEA37','DEA38','DEA41','DEA42','DEA43','DEA44','DEA45','DEA46','DEA47','DEA51','DEA52','DEA53','DEA54','DEA55','DEA56','DEA57','DEA58','DEA59','DEA5A','DEA5B','DEA5C','DEB11','DEB12','DEB13','DEB14','DEB15','DEB17','DEB18','DEB1A','DEB1B','DEB1C','DEB1D','DEB21','DEB22','DEB23','DEB24','DEB25','DEB31','DEB32','DEB33','DEB34','DEB35','DEB36','DEB37','DEB38','DEB39','DEB3A','DEB3B','DEB3C','DEB3D','DEB3E','DEB3F','DEB3G','DEB3H','DEB3I','DEB3J','DEB3K','DEC01','DEC02','DEC03','DEC04','DEC05','DEC06','DED21','DED2C','DED2D','DED2E','DED2F','DED41','DED42','DED43','DED44','DED45','DED51','DED52','DED53','DEE01','DEE02','DEE03','DEE04','DEE05','DEE06','DEE07','DEE08','DEE09','DEE0A','DEE0B','DEE0C','DEE0D','DEE0E','DEF01','DEF02','DEF03','DEF04','DEF05','DEF06','DEF07','DEF08','DEF09','DEF0A','DEF0B','DEF0C','DEF0D','DEF0E','DEF0F','DEG01','DEG02','DEG03','DEG05','DEG06','DEG07','DEG09','DEG0A','DEG0C','DEG0D','DEG0E','DEG0G','DEG0J','DEG0K','DEG0L','DEG0M','DEG0Q','DEG0R','DEG0S','DEG0T','DEG0U','DEG0V','DEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'DNK' and ./normalize-space(text()) = ('DK011','DK012','DK013','DK014','DK021','DK022','DK031','DK032','DK041','DK042','DK050','DKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ESP' and ./normalize-space(text()) = ('ES111','ES112','ES113','ES114','ES120','ES130','ES211','ES212','ES213','ES220','ES230','ES241','ES242','ES243','ES300','ES411','ES412','ES413','ES414','ES415','ES416','ES417','ES418','ES419','ES421','ES422','ES423','ES424','ES425','ES431','ES432','ES511','ES512','ES513','ES514','ES521','ES522','ES523','ES531','ES532','ES533','ES611','ES612','ES613','ES614','ES615','ES616','ES617','ES618','ES620','ES630','ES640','ES703','ES704','ES705','ES706','ES707','ES708','ES709','ESZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'EST' and ./normalize-space(text()) = ('EE001','EE004','EE008','EE009','EE00A','EEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FIN' and ./normalize-space(text()) = ('FI196','FI198','FI199','FI19A','FI19B','FI1B1','FI1C1','FI1C2','FI1C5','FI1C6','FI1C7','FI1D5','FI1D7','FI1D8','FI1D9','FI1DA','FI1DB','FI1DC','FI200','FIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'FRA' and ./normalize-space(text()) = ('FR101','FR102','FR103','FR104','FR105','FR106','FR107','FR108','FRB01','FRB02','FRB03','FRB04','FRB05','FRB06','FRC11','FRC12','FRC13','FRC14','FRC21','FRC22','FRC23','FRC24','FRD11','FRD12','FRD13','FRD21','FRD22','FRE11','FRE12','FRE21','FRE22','FRE23','FRF11','FRF12','FRF21','FRF22','FRF23','FRF24','FRF31','FRF32','FRF33','FRF34','FRG01','FRG02','FRG03','FRG04','FRG05','FRH01','FRH02','FRH03','FRH04','FRI11','FRI12','FRI13','FRI14','FRI15','FRI21','FRI22','FRI23','FRI31','FRI32','FRI33','FRI34','FRJ11','FRJ12','FRJ13','FRJ14','FRJ15','FRJ21','FRJ22','FRJ23','FRJ24','FRJ25','FRJ26','FRJ27','FRJ28','FRK11','FRK12','FRK13','FRK14','FRK21','FRK22','FRK23','FRK24','FRK25','FRK26','FRK27','FRK28','FRL01','FRL02','FRL03','FRL04','FRL05','FRL06','FRM01','FRM02','FRY10','FRY20','FRY30','FRY40','FRY50','FRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'GRC' and ./normalize-space(text()) = ('EL301','EL302','EL303','EL304','EL305','EL306','EL307','EL411','EL412','EL413','EL421','EL422','EL431','EL432','EL433','EL434','EL511','EL512','EL513','EL514','EL515','EL521','EL522','EL523','EL524','EL525','EL526','EL527','EL531','EL532','EL533','EL541','EL542','EL543','EL611','EL612','EL613','EL621','EL622','EL623','EL624','EL631','EL632','EL633','EL641','EL642','EL643','EL644','EL645','EL651','EL652','EL653','ELZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HRV' and ./normalize-space(text()) = ('HR021','HR022','HR023','HR024','HR025','HR026','HR027','HR028','HR031','HR032','HR033','HR034','HR035','HR036','HR037','HR050','HR061','HR062','HR063','HR064','HR065','HRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'HUN' and ./normalize-space(text()) = ('HU110','HU120','HU211','HU212','HU213','HU221','HU222','HU223','HU231','HU232','HU233','HU311','HU312','HU313','HU321','HU322','HU323','HU331','HU332','HU333','HUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'IRL' and ./normalize-space(text()) = ('IE041','IE042','IE051','IE052','IE053','IE061','IE062','IE063','IEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ISL' and ./normalize-space(text()) = ('IS001','IS002','ISZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ITA' and ./normalize-space(text()) = ('ITC11','ITC12','ITC13','ITC14','ITC15','ITC16','ITC17','ITC18','ITC20','ITC31','ITC32','ITC33','ITC34','ITC41','ITC42','ITC43','ITC44','ITC46','ITC47','ITC48','ITC49','ITC4A','ITC4B','ITC4C','ITC4D','ITF11','ITF12','ITF13','ITF14','ITF21','ITF22','ITF31','ITF32','ITF33','ITF34','ITF35','ITF43','ITF44','ITF45','ITF46','ITF47','ITF48','ITF51','ITF52','ITF61','ITF62','ITF63','ITF64','ITF65','ITG11','ITG12','ITG13','ITG14','ITG15','ITG16','ITG17','ITG18','ITG19','ITG2D','ITG2E','ITG2F','ITG2G','ITG2H','ITH10','ITH20','ITH31','ITH32','ITH33','ITH34','ITH35','ITH36','ITH37','ITH41','ITH42','ITH43','ITH44','ITH51','ITH52','ITH53','ITH54','ITH55','ITH56','ITH57','ITH58','ITH59','ITI11','ITI12','ITI13','ITI14','ITI15','ITI16','ITI17','ITI18','ITI19','ITI1A','ITI21','ITI22','ITI31','ITI32','ITI33','ITI34','ITI35','ITI41','ITI42','ITI43','ITI44','ITI45','ITZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LIE' and ./normalize-space(text()) = ('LI000','LIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LTU' and ./normalize-space(text()) = ('LT011','LT021','LT022','LT023','LT024','LT025','LT026','LT027','LT028','LT029','LTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LUX' and ./normalize-space(text()) = ('LU000','LUZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'LVA' and ./normalize-space(text()) = ('LV005','LV009','LV00A','LV00B','LV00C','LVZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MKD' and ./normalize-space(text()) = ('MK001','MK002','MK003','MK004','MK005','MK006','MK007','MK008','MKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MLT' and ./normalize-space(text()) = ('MT001','MT002','MTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'MNE' and ./normalize-space(text()) = ('ME000','MEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NLD' and ./normalize-space(text()) = ('NL112','NL114','NL115','NL126','NL127','NL128','NL131','NL132','NL133','NL211','NL212','NL213','NL221','NL224','NL225','NL226','NL230','NL321','NL323','NL325','NL327','NL328','NL32A','NL32B','NL341','NL342','NL350','NL361','NL362','NL363','NL364','NL365','NL366','NL411','NL414','NL415','NL416','NL421','NL422','NL423','NLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'NOR' and ./normalize-space(text()) = ('NO020','NO060','NO071','NO072','NO073','NO081','NO083','NO084','NO085','NO092','NO093','NO094','NO0A1','NO0A2','NO0A3','NO0B1','NO0B2','NOZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'POL' and ./normalize-space(text()) = ('PL213','PL214','PL217','PL218','PL219','PL21A','PL224','PL225','PL227','PL228','PL229','PL22A','PL22B','PL22C','PL411','PL414','PL415','PL416','PL417','PL418','PL424','PL426','PL427','PL428','PL431','PL432','PL514','PL515','PL516','PL517','PL518','PL523','PL524','PL613','PL616','PL617','PL618','PL619','PL621','PL622','PL623','PL633','PL634','PL636','PL637','PL638','PL711','PL712','PL713','PL714','PL715','PL721','PL722','PL811','PL812','PL814','PL815','PL821','PL822','PL823','PL824','PL841','PL842','PL843','PL911','PL912','PL913','PL921','PL922','PL923','PL924','PL925','PL926','PLZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'PRT' and ./normalize-space(text()) = ('PT111','PT112','PT119','PT11A','PT11B','PT11C','PT11D','PT11E','PT150','PT191','PT192','PT193','PT194','PT195','PT196','PT1A0','PT1B0','PT1C1','PT1C2','PT1C3','PT1C4','PT1D1','PT1D2','PT1D3','PT200','PT300','PTZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'ROU' and ./normalize-space(text()) = ('RO111','RO112','RO113','RO114','RO115','RO116','RO121','RO122','RO123','RO124','RO125','RO126','RO211','RO212','RO213','RO214','RO215','RO216','RO221','RO222','RO223','RO224','RO225','RO226','RO311','RO312','RO313','RO314','RO315','RO316','RO317','RO321','RO322','RO411','RO412','RO413','RO414','RO415','RO421','RO422','RO423','RO424','ROZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SRB' and ./normalize-space(text()) = ('RS110','RS121','RS122','RS123','RS124','RS125','RS126','RS127','RS211','RS212','RS213','RS214','RS215','RS216','RS217','RS218','RS221','RS222','RS223','RS224','RS225','RS226','RS227','RS228','RS229','RSZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVK' and ./normalize-space(text()) = ('SK010','SK021','SK022','SK023','SK031','SK032','SK041','SK042','SKZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SVN' and ./normalize-space(text()) = ('SI031','SI032','SI033','SI034','SI035','SI036','SI037','SI038','SI041','SI042','SI043','SI044','SIZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'SWE' and ./normalize-space(text()) = ('SE110','SE121','SE122','SE123','SE124','SE125','SE211','SE212','SE213','SE214','SE221','SE224','SE231','SE232','SE311','SE312','SE313','SE321','SE322','SE331','SE332','SEZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'TUR' and ./normalize-space(text()) = ('TR100','TR211','TR212','TR213','TR221','TR222','TR310','TR321','TR322','TR323','TR331','TR332','TR333','TR334','TR411','TR412','TR413','TR421','TR422','TR423','TR424','TR425','TR510','TR521','TR522','TR611','TR612','TR613','TR621','TR622','TR631','TR632','TR633','TR711','TR712','TR713','TR714','TR715','TR721','TR722','TR723','TR811','TR812','TR813','TR821','TR822','TR823','TR831','TR832','TR833','TR834','TR901','TR902','TR903','TR904','TR905','TR906','TRA11','TRA12','TRA13','TRA21','TRA22','TRA23','TRA24','TRB11','TRB12','TRB13','TRB14','TRB21','TRB22','TRB23','TRB24','TRC11','TRC12','TRC13','TRC21','TRC22','TRC31','TRC32','TRC33','TRC34','TRZZZ')) or (../cac:Country/cbc:IdentificationCode/normalize-space(text()) = 'XKX' and ./normalize-space(text()) = ('XK001','XK002','XK003','XK004','XK005','XK006','XK007','XKZZZ'))) or not(((../cac:Country/cbc:IdentificationCode) and (.)))">rule|text|BR-BT-00507-0355</assert>
	</rule>
	<rule context="/*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner/cbc:ID">
		<assert id="BR-OPT-00202-0100" role="ERROR" test="count(for $x in ., $y in /*/ext:UBLExtensions/ext:UBLExtension/ext:ExtensionContent/efext:EformsExtension/efac:Organizations/efac:UltimateBeneficialOwner/cbc:ID[. = $x] return $y) = 1">rule|text|BR-OPT-00202-0100</assert>
	</rule>
</pattern>