// Summary
// File generated from metadata database
0 {ND-Root[OPT-300-Procedure-Buyer is present]} #{auxiliary|text|buyer} // Buyer Summary
	0 {ND-ContractingParty[(count(for text:$reforgid in OPT-300-Procedure-Buyer, text:$orgid in OPT-200-Organization-Company[OPT-200-Organization-Company[(OPP-050-Organization == TRUE) or (not(/OPP-050-Organization == TRUE))] == $reforgid] return $orgid) > 0) and not(preceding::OPT-300-Procedure-Buyer[(count(for text:$reforgid1 in OPT-300-Procedure-Buyer, text:$orgid1 in OPT-200-Organization-Company[OPT-200-Organization-Company[(OPP-050-Organization == TRUE) or (not(/OPP-050-Organization == TRUE))] == $reforgid1] return $orgid1) > 0)] is present)]} #{auxiliary|text|buyer-competent} // Competent authority (first Group Leader or first of all)
		0 {ND-ContractingParty} #{auxiliary|text|buyer} ${for text:$orgid in OPT-300-Procedure-Buyer, text:$orgname in BT-500-Organization-Company[OPT-200-Organization-Company == $orgid] return $orgname} // Buyer name (summary)
		0 {ND-ContractingParty} ${for text:$orgid in OPT-300-Procedure-Buyer return concat(BT-514-Organization-Company[OPT-200-Organization-Company == $orgid], ', ', BT-507-Organization-Company[OPT-200-Organization-Company == $orgid], ', ', BT-513-Organization-Company[OPT-200-Organization-Company == $orgid])} // Place of the Buyer
// summary efx
{ND-Root} Procedure // 2. Procedure Summary (empty) 
// summary efx
0 {ND-Part} ${BT-137-Part}: ${BT-21-Part} // 3.1 Part Summary
	{ND-Part} #{BT-262-Part} (${BT-262-Part}) // Main CPV
	{ND-Part} #{BT-5141-Part}, #{BT-5071-Part} (${BT-5071-Part}), ${BT-5131-Part}, #{BT-727-Part} // Place of performance
	{BT-536-Part} #{field|name|BT-536-Part}: ${BT-536-Part} #{field|name|BT-537-Part}: ${BT-537-Part} // Duration (start and end dates)
	{BT-36-Part} #{field|name|BT-36-Part}: ${format-number(OPA-36-Part-Number, '###,##0.###,###,###')} ${BT-36-Part/@unitCode} // Duration (period)
	{BT-538-Part} #{field|name|BT-538-Part}: #{BT-538-Part} // Duration (Unlimited)
	{BT-27-Part} #{field|name|BT-27-Part}: ${format-number(BT-27-Part, '###,##0.##')} ${BT-27-Part/@currencyID}  // Estimated value
// summary efx
0 {ND-LotsGroup} #{field|name|BT-330-Procedure}: ${BT-137-LotsGroup}: ${BT-21-LotsGroup} // Group of Lots Summary
	0 {BT-137-LotsGroup} #{field|name|BT-1375-Procedure}: ${for text:$gloid in BT-137-LotsGroup return BT-1375-Procedure[BT-330-Procedure == $gloid]} // Lots included / Group Lot Identifier 
	{BT-27-LotsGroup} #{field|name|BT-27-LotsGroup}: ${format-number(BT-27-LotsGroup, '###,##0.##')} ${BT-27-LotsGroup/@currencyID} // Estimated value
	{BT-157-LotsGroup} #{field|name|BT-157-LotsGroup}: ${format-number(BT-157-LotsGroup, '###,##0.##')} ${BT-157-LotsGroup/@currencyID} // Maximum value of the framework agreement within the group of lots
// summary efx
// summary efx
0 {ND-Lot} ${BT-137-Lot}:  ${BT-21-Lot} // Lot Summary
	0 {ND-Lot} #{BT-262-Lot} (${BT-262-Lot}) // Main CPV
	{ND-Lot} #{BT-5141-Lot}, #{BT-5071-Lot} (${BT-5071-Lot}), ${BT-5131-Lot}, #{BT-727-Lot} // Place of performance
	{BT-536-Lot} #{field|name|BT-536-Lot}: ${BT-536-Lot} #{field|name|BT-537-Lot}: ${BT-537-Lot} // Duration (start and end dates)
	{BT-36-Lot} #{field|name|BT-36-Lot}: ${format-number(OPA-36-Lot-Number, '###,##0.###,###,###')} ${BT-36-Lot/@unitCode} // Duration (period)
	{BT-538-Lot} #{field|name|BT-538-Lot}: #{BT-538-Lot} // Duration (Unlimited)
	{BT-27-Lot} #{field|name|BT-27-Lot}: ${format-number(BT-27-Lot, '###,##0.##')} ${BT-27-Lot/@currencyID}  // Estimated value
	{BT-630(d)-Lot} #{field|name|BT-630(d)-Lot}: ${BT-630(d)-Lot} ${BT-630(t)-Lot} // Deadline for receipt of expressions of interest
	{BT-1311(d)-Lot} #{field|name|BT-1311(d)-Lot}: ${BT-1311(d)-Lot} ${BT-1311(t)-Lot} // Deadline for receipt of requests to participate
	{BT-131(d)-Lot} #{field|name|BT-131(d)-Lot}: ${BT-131(d)-Lot} ${BT-131(t)-Lot} // Deadline for receipt of tenders
// summary efx
0 {ND-Root[(BT-13713-LotResult is present)]} #{auxiliary|text|results} // 6. Results Summary
	0 {ND-NoticeResult[BT-161-NoticeResult != -1]} #{field|name|BT-161-NoticeResult}: ${format-number(BT-161-NoticeResult, '###,##0.##')} ${BT-161-NoticeResult/@currencyID} // Notice Value (Value of all contracts awarded in this procedure)
	0 {ND-NoticeResult[BT-161-NoticeResult == -1]} #{field|name|BT-161-NoticeResult}: #{auxiliary|text|unpublished} // Notice Value (Value of all contracts awarded in this procedure) (unpublished)
	0 {BT-118-NoticeResult[BT-118-NoticeResult != -1]} #{field|name|BT-118-NoticeResult}: ${format-number(BT-118-NoticeResult, '###,##0.##')} ${BT-118-NoticeResult/@currencyID} // The maximum value of the framework agreement(s) in this notice
	0 {BT-118-NoticeResult[BT-118-NoticeResult == -1]} #{field|name|BT-118-NoticeResult}: #{auxiliary|text|unpublished} // The maximum value of the framework agreement(s) in this notice (unpublished)
	0 {BT-1118-NoticeResult[BT-118-NoticeResult != -1]} #{field|name|BT-1118-NoticeResult}: ${format-number(BT-1118-NoticeResult, '###,##0.##')} ${BT-1118-NoticeResult/@currencyID} // The approximate value of the framework agreements in this notice
	0 {BT-1118-NoticeResult[BT-1118-NoticeResult == -1]} #{field|name|BT-1118-NoticeResult}: #{auxiliary|text|unpublished} // The approximate value of the framework agreements in this notice (unpublished)
	0 {ND-LotResult[BT-142-LotResult != 'unpublished']} ${BT-13713-LotResult} #{BT-142-LotResult} // Lot identifier, result
		0 {BT-709-LotResult[BT-709-LotResult != -1]} #{field|name|BT-709-LotResult}: ${format-number(BT-709-LotResult, '###,##0.##')} ${BT-709-LotResult/@currencyID} // Framework Maximum Value
		0 {BT-709-LotResult[BT-709-LotResult == -1]} #{field|name|BT-709-LotResult}: #{auxiliary|text|unpublished} // Framework Maximum Value (unpublished)
		0 {OPT-320-LotResult[count(for text:$tender1 in OPT-320-LotResult, text:$contractid1 in OPT-316-Contract[BT-3202-Contract == $tender1] return BT-500-Organization-Company[OPT-200-Organization-Company == OPT-300-Tenderer[OPT-210-Tenderer == OPT-310-Tender[OPT-321-Tender == $tender1]]])>0]} Winning tender: ${for text:$tender2 in OPT-320-LotResult, text:$contractid2 in OPT-316-Contract[BT-3202-Contract == $tender2] return BT-3201-Tender[OPT-321-Tender == $tender2]} // Winning tender
			0 {OPT-320-LotResult} #{field|name|BT-13714-Tender}: ${for text:$tender in OPT-320-LotResult return BT-13714-Tender[OPT-321-Tender == $tender]} // Identifier of lot or group of lots
			0 {OPT-320-LotResult[count(for text:$tender1 in OPT-320-LotResult return number:BT-720-Tender[BT-720-Tender[OPT-321-Tender == $tender1] != -1]) > 0]} #{field|name|BT-720-Tender}: ${for text:$tender2 in OPT-320-LotResult, number:$tendervalue in BT-720-Tender[OPT-321-Tender == $tender2] return format-number($tendervalue, '###,##0.##')} ${for text:$tender3 in OPT-320-LotResult return BT-720-Tender[BT-720-Tender[OPT-321-Tender == $tender3] != -1]/@currencyID } // Value of the tender
			0 {OPT-320-LotResult[count(for text:$tender1 in OPT-320-LotResult return number:BT-720-Tender[BT-720-Tender[OPT-321-Tender == $tender1] == -1]) > 0]} #{field|name|BT-720-Tender}: #{auxiliary|text|unpublished} // Value of the tender (unpublished)
			0 {OPT-320-LotResult} #{field|name|BT-150-Contract}: ${for text:$tender1 in OPT-320-LotResult return BT-150-Contract[BT-3202-Contract == $tender1]} ${for text:$tender2 in OPT-320-LotResult return BT-721-Contract[BT-3202-Contract == $tender2]} // Contract
				{OPT-320-LotResult[some date:$date in (for text:$tender1 in OPT-320-LotResult return BT-145-Contract[BT-3202-Contract == $tender1]) satisfies $date > 0000-01-01Z]} #{field|name|BT-145-Contract}: ${for text:$tender2 in OPT-320-LotResult return date:BT-145-Contract[BT-3202-Contract == $tender2]} // Contract Conclusion Date
			0 {OPT-320-LotResult[count(for text:$tender1 in OPT-320-LotResult, text:$contractid1 in OPT-316-Contract[BT-3202-Contract == $tender1], text:$tpa1 in OPT-310-Tender[OPT-321-Tender == $tender1], text:$orgid1 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $tpa1]) return $orgid1)>0]} #{auxiliary|text|winner}: ${for text:$tender2 in OPT-320-LotResult, text:$contractid2 in OPT-316-Contract[BT-3202-Contract == $tender2], text:$tpa2 in OPT-310-Tender[OPT-321-Tender == $tender2], text:$orgid2 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $tpa2]) return BT-500-Organization-Company[OPT-200-Organization-Company == $orgid2]} // Name of this winner (single organisation in Tendering Party)
				{OPT-320-LotResult[count(for text:$t1 in OPT-320-LotResult, text:$c1 in OPT-316-Contract[BT-3202-Contract == $t1], text:$p1 in OPT-310-Tender[OPT-321-Tender == $t1], text:$o1 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $p1]) return $o1)>0]} #{code|name|${for text:$t2 in OPT-320-LotResult, text:$c2 in OPT-316-Contract[BT-3202-Contract == $t2], text:$p2 in OPT-310-Tender[OPT-321-Tender == $t2], text:$o2 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $p2]) return concat('country.', BT-514-Organization-Company[OPT-200-Organization-Company == $o2])}} #{code|name|${for text:$t3 in OPT-320-LotResult, text:$c3 in OPT-316-Contract[BT-3202-Contract == $t3], text:$p3 in OPT-310-Tender[OPT-321-Tender == $t3], text:$o3 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $p3]) return concat('nuts.', BT-507-Organization-Company[OPT-200-Organization-Company == $o3])}} (${for text:$t4 in OPT-320-LotResult, text:$c4 in OPT-316-Contract[BT-3202-Contract == $t4], text:$p4 in OPT-310-Tender[OPT-321-Tender == $t4], text:$o4 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $p4]) return BT-507-Organization-Company[OPT-200-Organization-Company == $o4]}) ${for text:$t5 in OPT-320-LotResult, text:$c5 in OPT-316-Contract[BT-3202-Contract == $t5], text:$p5 in OPT-310-Tender[OPT-321-Tender == $t5], text:$o5 in (OPT-300-Tenderer[OPT-210-Tenderer[OPT-170-Tenderer is not present] == $p5]) return BT-513-Organization-Company[OPT-200-Organization-Company == $o5]} // Address of this winner (single organisation in Tendering Party)
// Modification Summary (empty)
// summary efx
// summary efx
// Organisation Summary (empty)
// summary efx
// summary efx
// summary efx
// summary efx
// summary efx
// summary efx
